/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


#define SWIG_VERSION 0x040201
#define SWIGCSHARP
#define SWIG_DIRECTORS

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif

#if defined(__cplusplus) && __cplusplus >=201103L
# define SWIG_NULLPTR nullptr
#else
# define SWIG_NULLPTR NULL
#endif 

/* -----------------------------------------------------------------------------
 * swigcompat.swg
 *
 * Macros to provide support compatibility with older C and C++ standards.
 * ----------------------------------------------------------------------------- */

/* C99 and C++11 should provide snprintf, but define SWIG_NO_SNPRINTF
 * if you're missing it.
 */
#if ((defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L) || \
     (defined __cplusplus && __cplusplus >= 201103L) || \
     defined SWIG_HAVE_SNPRINTF) && \
    !defined SWIG_NO_SNPRINTF
# define SWIG_snprintf(O,S,F,A) snprintf(O,S,F,A)
# define SWIG_snprintf2(O,S,F,A,B) snprintf(O,S,F,A,B)
#else
/* Fallback versions ignore the buffer size, but most of our uses either have a
 * fixed maximum possible size or dynamically allocate a buffer that's large
 * enough.
 */
# define SWIG_snprintf(O,S,F,A) sprintf(O,F,A)
# define SWIG_snprintf2(O,S,F,A,B) sprintf(O,F,A,B)
#endif


#include <stdlib.h>
#include <string.h>
#include <stdio.h>


/* Support for throwing C# exceptions from C/C++. There are two types: 
 * Exceptions that take a message and ArgumentExceptions that take a message and a parameter name. */
typedef enum {
  SWIG_CSharpApplicationException,
  SWIG_CSharpArithmeticException,
  SWIG_CSharpDivideByZeroException,
  SWIG_CSharpIndexOutOfRangeException,
  SWIG_CSharpInvalidCastException,
  SWIG_CSharpInvalidOperationException,
  SWIG_CSharpIOException,
  SWIG_CSharpNullReferenceException,
  SWIG_CSharpOutOfMemoryException,
  SWIG_CSharpOverflowException,
  SWIG_CSharpSystemException
} SWIG_CSharpExceptionCodes;

typedef enum {
  SWIG_CSharpArgumentException,
  SWIG_CSharpArgumentNullException,
  SWIG_CSharpArgumentOutOfRangeException
} SWIG_CSharpExceptionArgumentCodes;

typedef void (SWIGSTDCALL* SWIG_CSharpExceptionCallback_t)(const char *);
typedef void (SWIGSTDCALL* SWIG_CSharpExceptionArgumentCallback_t)(const char *, const char *);

typedef struct {
  SWIG_CSharpExceptionCodes code;
  SWIG_CSharpExceptionCallback_t callback;
} SWIG_CSharpException_t;

typedef struct {
  SWIG_CSharpExceptionArgumentCodes code;
  SWIG_CSharpExceptionArgumentCallback_t callback;
} SWIG_CSharpExceptionArgument_t;

static SWIG_CSharpException_t SWIG_csharp_exceptions[] = {
  { SWIG_CSharpApplicationException, NULL },
  { SWIG_CSharpArithmeticException, NULL },
  { SWIG_CSharpDivideByZeroException, NULL },
  { SWIG_CSharpIndexOutOfRangeException, NULL },
  { SWIG_CSharpInvalidCastException, NULL },
  { SWIG_CSharpInvalidOperationException, NULL },
  { SWIG_CSharpIOException, NULL },
  { SWIG_CSharpNullReferenceException, NULL },
  { SWIG_CSharpOutOfMemoryException, NULL },
  { SWIG_CSharpOverflowException, NULL },
  { SWIG_CSharpSystemException, NULL }
};

static SWIG_CSharpExceptionArgument_t SWIG_csharp_exceptions_argument[] = {
  { SWIG_CSharpArgumentException, NULL },
  { SWIG_CSharpArgumentNullException, NULL },
  { SWIG_CSharpArgumentOutOfRangeException, NULL }
};

static void SWIGUNUSED SWIG_CSharpSetPendingException(SWIG_CSharpExceptionCodes code, const char *msg) {
  SWIG_CSharpExceptionCallback_t callback = SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions)/sizeof(SWIG_CSharpException_t)) {
    callback = SWIG_csharp_exceptions[code].callback;
  }
  callback(msg);
}

static void SWIGUNUSED SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpExceptionArgumentCodes code, const char *msg, const char *param_name) {
  SWIG_CSharpExceptionArgumentCallback_t callback = SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions_argument)/sizeof(SWIG_CSharpExceptionArgument_t)) {
    callback = SWIG_csharp_exceptions_argument[code].callback;
  }
  callback(msg, param_name);
}


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionCallbacks_ADLX(
                                                SWIG_CSharpExceptionCallback_t applicationCallback,
                                                SWIG_CSharpExceptionCallback_t arithmeticCallback,
                                                SWIG_CSharpExceptionCallback_t divideByZeroCallback, 
                                                SWIG_CSharpExceptionCallback_t indexOutOfRangeCallback, 
                                                SWIG_CSharpExceptionCallback_t invalidCastCallback,
                                                SWIG_CSharpExceptionCallback_t invalidOperationCallback,
                                                SWIG_CSharpExceptionCallback_t ioCallback,
                                                SWIG_CSharpExceptionCallback_t nullReferenceCallback,
                                                SWIG_CSharpExceptionCallback_t outOfMemoryCallback, 
                                                SWIG_CSharpExceptionCallback_t overflowCallback, 
                                                SWIG_CSharpExceptionCallback_t systemCallback) {
  SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback = applicationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpArithmeticException].callback = arithmeticCallback;
  SWIG_csharp_exceptions[SWIG_CSharpDivideByZeroException].callback = divideByZeroCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIndexOutOfRangeException].callback = indexOutOfRangeCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidCastException].callback = invalidCastCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidOperationException].callback = invalidOperationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIOException].callback = ioCallback;
  SWIG_csharp_exceptions[SWIG_CSharpNullReferenceException].callback = nullReferenceCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOutOfMemoryException].callback = outOfMemoryCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOverflowException].callback = overflowCallback;
  SWIG_csharp_exceptions[SWIG_CSharpSystemException].callback = systemCallback;
}

#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionArgumentCallbacks_ADLX(
                                                SWIG_CSharpExceptionArgumentCallback_t argumentCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentNullCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentOutOfRangeCallback) {
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback = argumentCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentNullException].callback = argumentNullCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentOutOfRangeException].callback = argumentOutOfRangeCallback;
}


/* Callback for returning strings to C# without leaking memory */
typedef char * (SWIGSTDCALL* SWIG_CSharpStringHelperCallback)(const char *);
static SWIG_CSharpStringHelperCallback SWIG_csharp_string_callback = NULL;


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterStringCallback_ADLX(SWIG_CSharpStringHelperCallback callback) {
  SWIG_csharp_string_callback = callback;
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) do { if (!(expr)) {SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, msg, ""); return nullreturn; } } while (0)

/* -----------------------------------------------------------------------------
 * director_common.swg
 *
 * This file contains support for director classes which is common between
 * languages.
 * ----------------------------------------------------------------------------- */

/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif
/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that C# proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#if defined(DEBUG_DIRECTOR_OWNED)
#include <iostream>
#endif
#include <string>
#include <exception>

namespace Swig {
  /* Director base class - not currently used in C# directors */
  class Director {
  };

  /* Base class for director exceptions */
  class DirectorException : public std::exception {
  protected:
    std::string swig_msg;

  public:
    DirectorException(const char *msg) : swig_msg(msg) {
    }

    DirectorException(const std::string &msg) : swig_msg(msg) {
    }

    virtual ~DirectorException() throw() {
    }

    const char *what() const throw() {
      return swig_msg.c_str();
    }
  };

  /* Pure virtual method exception */
  class DirectorPureVirtualException : public DirectorException {
  public:
    DirectorPureVirtualException(const char *msg) : DirectorException(std::string("Attempt to invoke pure virtual method ") + msg) {
    }

    static void raise(const char *msg) {
      throw DirectorPureVirtualException(msg);
    }
  };
}


#ifdef __cplusplus
#include <utility>
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigSmartPointer {
    T *ptr;
    SwigSmartPointer(T *p) : ptr(p) { }
    ~SwigSmartPointer() { delete ptr; }
    SwigSmartPointer& operator=(SwigSmartPointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
    void reset(T *p) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = p; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigSmartPointer tmp(new T(t)); pointer = tmp; return *this; }
#if __cplusplus >=201103L
  SwigValueWrapper& operator=(T&& t) { SwigSmartPointer tmp(new T(std::move(t))); pointer = tmp; return *this; }
  operator T&&() const { return std::move(*pointer.ptr); }
#else
  operator T&() const { return *pointer.ptr; }
#endif
  T *operator&() const { return pointer.ptr; }
  static void reset(SwigValueWrapper& t, T *p) { t.pointer.reset(p); }
};

/*
 * SwigValueInit() is a generic initialisation solution as the following approach:
 * 
 *       T c_result = T();
 * 
 * doesn't compile for all types for example:
 * 
 *       unsigned int c_result = unsigned int();
 */
template <typename T> T SwigValueInit() {
  return T();
}

#if __cplusplus >=201103L
# define SWIG_STD_MOVE(OBJ) std::move(OBJ)
#else
# define SWIG_STD_MOVE(OBJ) OBJ
#endif

#endif



#include <Windows.h>
#include "../ADLX/SDK/Include/ADLXDefines.h"
#include "../ADLX/SDK/Include/ICollections.h"
#include "../ADLX/SDK/Include/IDisplays.h"
#include "../ADLX/SDK/Include/ISystem.h"
#include "../ADLX/SDK/Include/ILog.h"
#include "../ADLX/SDK/Include/IGPUTuning.h"
#include "../ADLX/SDK/Include/IGPUManualFanTuning.h"
#include "../ADLX/SDK/Include/IGPUManualGFXTuning.h"
#include "../ADLX/SDK/Include/IGPUManualPowerTuning.h"
#include "../ADLX/SDK/Include/IGPUManualVRAMTuning.h"
#include "../ADLX/SDK/Include/IGPUPresetTuning.h"
#include "../ADLX/SDK/Include/IGPUTuning.h"
#include "../ADLX/SDK/Include/IPerformanceMonitoring.h"
#include "../ADLX/SDK/ADLXHelper/Windows/Cpp/ADLXHelper.h"
#include "ADLXExt.h"

typedef     int64_t             adlx_int64;
typedef     int32_t             adlx_int32;
typedef     int16_t             adlx_int16;
typedef     int8_t              adlx_int8;
typedef     uint64_t            adlx_uint64;
typedef     uint32_t            adlx_uint32;
typedef     uint16_t            adlx_uint16;
typedef     uint8_t             adlx_uint8;
typedef     size_t              adlx_size;
typedef     void*               adlx_handle;
typedef     double              adlx_double;
typedef     float               adlx_float;
typedef     void                adlx_void;
typedef     long                adlx_long;
typedef		char*				adlx_string;
typedef     adlx_int32          adlx_int;
typedef     unsigned long       adlx_ulong;
typedef     adlx_uint32         adlx_uint;
typedef     bool                adlx_bool;
typedef wchar_t WCHAR;    // wc,   16-bit UNICODE character
typedef WCHAR TCHAR;

// Microsoft
#define ADLX_CORE_LINK          __declspec(dllexport)
#define ADLX_STD_CALL           __stdcall
#define ADLX_CDECL_CALL         __cdecl
#define ADLX_FAST_CALL          __fastcall
#define ADLX_INLINE              __inline
#define ADLX_FORCEINLINE         __forceinline
#define ADLX_NO_VTABLE          __declspec(novtable)

//IID's
#define ADLX_DECLARE_IID(X) static ADLX_INLINE const wchar_t* IID()  { return X; }
#define ADLX_IS_IID(X, Y) (!wcscmp (X, Y))
#define ADLX_DECLARE_ITEM_IID(X) static ADLX_INLINE const wchar_t* ITEM_IID()  { return X; }

using namespace adlx;


#include <stdint.h>		// Use the C99 official header


static adlx_int *new_intP(void) { 
  return new adlx_int(); 
}

static adlx_int *copy_intP(adlx_int value) { 
  return new adlx_int(value); 
}

static void delete_intP(adlx_int *obj) { 
  delete obj; 
}

static void intP_assign(adlx_int *obj, adlx_int value) {
  *obj = value;
}

static adlx_int intP_value(adlx_int *obj) {
  return *obj;
}


static double *new_doubleP(void) { 
  return new double(); 
}

static double *copy_doubleP(double value) { 
  return new double(value); 
}

static void delete_doubleP(double *obj) { 
  delete obj; 
}

static void doubleP_assign(double *obj, double value) {
  *obj = value;
}

static double doubleP_value(double *obj) {
  return *obj;
}


static bool *new_boolP(void) { 
  return new bool(); 
}

static bool *copy_boolP(bool value) { 
  return new bool(value); 
}

static void delete_boolP(bool *obj) { 
  delete obj; 
}

static void boolP_assign(bool *obj, bool value) {
  *obj = value;
}

static bool boolP_value(bool *obj) {
  return *obj;
}


static WCHAR *new_wcharP(void) { 
  return new WCHAR(); 
}

static WCHAR *copy_wcharP(WCHAR value) { 
  return new WCHAR(value); 
}

static void delete_wcharP(WCHAR *obj) { 
  delete obj; 
}

static void wcharP_assign(WCHAR *obj, WCHAR value) {
  *obj = value;
}

static WCHAR wcharP_value(WCHAR *obj) {
  return *obj;
}


static adlx_uint *new_uintP(void) { 
  return new adlx_uint(); 
}

static adlx_uint *copy_uintP(adlx_uint value) { 
  return new adlx_uint(value); 
}

static void delete_uintP(adlx_uint *obj) { 
  delete obj; 
}

static void uintP_assign(adlx_uint *obj, adlx_uint value) {
  *obj = value;
}

static adlx_uint uintP_value(adlx_uint *obj) {
  return *obj;
}


static ADLX_DISPLAY_TYPE *new_displayTypeP(void) { 
  return new ADLX_DISPLAY_TYPE(); 
}

static ADLX_DISPLAY_TYPE *copy_displayTypeP(ADLX_DISPLAY_TYPE value) { 
  return new ADLX_DISPLAY_TYPE(value); 
}

static void delete_displayTypeP(ADLX_DISPLAY_TYPE *obj) { 
  delete obj; 
}

static void displayTypeP_assign(ADLX_DISPLAY_TYPE *obj, ADLX_DISPLAY_TYPE value) {
  *obj = value;
}

static ADLX_DISPLAY_TYPE displayTypeP_value(ADLX_DISPLAY_TYPE *obj) {
  return *obj;
}


static ADLX_DISPLAY_CONNECTOR_TYPE *new_disConnectTypeP(void) { 
  return new ADLX_DISPLAY_CONNECTOR_TYPE(); 
}

static ADLX_DISPLAY_CONNECTOR_TYPE *copy_disConnectTypeP(ADLX_DISPLAY_CONNECTOR_TYPE value) { 
  return new ADLX_DISPLAY_CONNECTOR_TYPE(value); 
}

static void delete_disConnectTypeP(ADLX_DISPLAY_CONNECTOR_TYPE *obj) { 
  delete obj; 
}

static void disConnectTypeP_assign(ADLX_DISPLAY_CONNECTOR_TYPE *obj, ADLX_DISPLAY_CONNECTOR_TYPE value) {
  *obj = value;
}

static ADLX_DISPLAY_CONNECTOR_TYPE disConnectTypeP_value(ADLX_DISPLAY_CONNECTOR_TYPE *obj) {
  return *obj;
}


static ADLX_DISPLAY_SCAN_TYPE *new_disScanTypeP(void) { 
  return new ADLX_DISPLAY_SCAN_TYPE(); 
}

static ADLX_DISPLAY_SCAN_TYPE *copy_disScanTypeP(ADLX_DISPLAY_SCAN_TYPE value) { 
  return new ADLX_DISPLAY_SCAN_TYPE(value); 
}

static void delete_disScanTypeP(ADLX_DISPLAY_SCAN_TYPE *obj) { 
  delete obj; 
}

static void disScanTypeP_assign(ADLX_DISPLAY_SCAN_TYPE *obj, ADLX_DISPLAY_SCAN_TYPE value) {
  *obj = value;
}

static ADLX_DISPLAY_SCAN_TYPE disScanTypeP_value(ADLX_DISPLAY_SCAN_TYPE *obj) {
  return *obj;
}


static adlx_size *new_adlx_sizeP(void) { 
  return new adlx_size(); 
}

static adlx_size *copy_adlx_sizeP(adlx_size value) { 
  return new adlx_size(value); 
}

static void delete_adlx_sizeP(adlx_size *obj) { 
  delete obj; 
}

static void adlx_sizeP_assign(adlx_size *obj, adlx_size value) {
  *obj = value;
}

static adlx_size adlx_sizeP_value(adlx_size *obj) {
  return *obj;
}


static ADLX_IntRange *new_adlx_intRangeP(void) { 
  return new ADLX_IntRange(); 
}

static ADLX_IntRange *copy_adlx_intRangeP(ADLX_IntRange value) { 
  return new ADLX_IntRange(value); 
}

static void delete_adlx_intRangeP(ADLX_IntRange *obj) { 
  delete obj; 
}

static void adlx_intRangeP_assign(ADLX_IntRange *obj, ADLX_IntRange value) {
  *obj = value;
}

static ADLX_IntRange adlx_intRangeP_value(ADLX_IntRange *obj) {
  return *obj;
}


static IADLXDisplayServices* *new_displaySerP_Ptr(void) { 
  return new IADLXDisplayServices*(); 
}

static IADLXDisplayServices* *copy_displaySerP_Ptr(IADLXDisplayServices* value) { 
  return new IADLXDisplayServices*(value); 
}

static void delete_displaySerP_Ptr(IADLXDisplayServices* *obj) { 
  delete obj; 
}

static void displaySerP_Ptr_assign(IADLXDisplayServices* *obj, IADLXDisplayServices* value) {
  *obj = value;
}

static IADLXDisplayServices* displaySerP_Ptr_value(IADLXDisplayServices* *obj) {
  return *obj;
}


static IADLXDisplayList* *new_displayListP_Ptr(void) { 
  return new IADLXDisplayList*(); 
}

static IADLXDisplayList* *copy_displayListP_Ptr(IADLXDisplayList* value) { 
  return new IADLXDisplayList*(value); 
}

static void delete_displayListP_Ptr(IADLXDisplayList* *obj) { 
  delete obj; 
}

static void displayListP_Ptr_assign(IADLXDisplayList* *obj, IADLXDisplayList* value) {
  *obj = value;
}

static IADLXDisplayList* displayListP_Ptr_value(IADLXDisplayList* *obj) {
  return *obj;
}


static IADLXDisplay* *new_displayP_Ptr(void) { 
  return new IADLXDisplay*(); 
}

static IADLXDisplay* *copy_displayP_Ptr(IADLXDisplay* value) { 
  return new IADLXDisplay*(value); 
}

static void delete_displayP_Ptr(IADLXDisplay* *obj) { 
  delete obj; 
}

static void displayP_Ptr_assign(IADLXDisplay* *obj, IADLXDisplay* value) {
  *obj = value;
}

static IADLXDisplay* displayP_Ptr_value(IADLXDisplay* *obj) {
  return *obj;
}


static IADLXDisplayChangedHandling* *new_displayChangeHandlP_Ptr(void) { 
  return new IADLXDisplayChangedHandling*(); 
}

static IADLXDisplayChangedHandling* *copy_displayChangeHandlP_Ptr(IADLXDisplayChangedHandling* value) { 
  return new IADLXDisplayChangedHandling*(value); 
}

static void delete_displayChangeHandlP_Ptr(IADLXDisplayChangedHandling* *obj) { 
  delete obj; 
}

static void displayChangeHandlP_Ptr_assign(IADLXDisplayChangedHandling* *obj, IADLXDisplayChangedHandling* value) {
  *obj = value;
}

static IADLXDisplayChangedHandling* displayChangeHandlP_Ptr_value(IADLXDisplayChangedHandling* *obj) {
  return *obj;
}


static IADLXGPU* *new_gpuP_Ptr(void) { 
  return new IADLXGPU*(); 
}

static IADLXGPU* *copy_gpuP_Ptr(IADLXGPU* value) { 
  return new IADLXGPU*(value); 
}

static void delete_gpuP_Ptr(IADLXGPU* *obj) { 
  delete obj; 
}

static void gpuP_Ptr_assign(IADLXGPU* *obj, IADLXGPU* value) {
  *obj = value;
}

static IADLXGPU* gpuP_Ptr_value(IADLXGPU* *obj) {
  return *obj;
}


static IADLXGPUList* *new_gpuListP_Ptr(void) { 
  return new IADLXGPUList*(); 
}

static IADLXGPUList* *copy_gpuListP_Ptr(IADLXGPUList* value) { 
  return new IADLXGPUList*(value); 
}

static void delete_gpuListP_Ptr(IADLXGPUList* *obj) { 
  delete obj; 
}

static void gpuListP_Ptr_assign(IADLXGPUList* *obj, IADLXGPUList* value) {
  *obj = value;
}

static IADLXGPUList* gpuListP_Ptr_value(IADLXGPUList* *obj) {
  return *obj;
}


static IADLXList* *new_adlxListP_Ptr(void) { 
  return new IADLXList*(); 
}

static IADLXList* *copy_adlxListP_Ptr(IADLXList* value) { 
  return new IADLXList*(value); 
}

static void delete_adlxListP_Ptr(IADLXList* *obj) { 
  delete obj; 
}

static void adlxListP_Ptr_assign(IADLXList* *obj, IADLXList* value) {
  *obj = value;
}

static IADLXList* adlxListP_Ptr_value(IADLXList* *obj) {
  return *obj;
}


static IADLXInterface* *new_adlxInterfaceP_Ptr(void) { 
  return new IADLXInterface*(); 
}

static IADLXInterface* *copy_adlxInterfaceP_Ptr(IADLXInterface* value) { 
  return new IADLXInterface*(value); 
}

static void delete_adlxInterfaceP_Ptr(IADLXInterface* *obj) { 
  delete obj; 
}

static void adlxInterfaceP_Ptr_assign(IADLXInterface* *obj, IADLXInterface* value) {
  *obj = value;
}

static IADLXInterface* adlxInterfaceP_Ptr_value(IADLXInterface* *obj) {
  return *obj;
}


static IADLXGPUTuningServices* *new_gpuTuningP_Ptr(void) { 
  return new IADLXGPUTuningServices*(); 
}

static IADLXGPUTuningServices* *copy_gpuTuningP_Ptr(IADLXGPUTuningServices* value) { 
  return new IADLXGPUTuningServices*(value); 
}

static void delete_gpuTuningP_Ptr(IADLXGPUTuningServices* *obj) { 
  delete obj; 
}

static void gpuTuningP_Ptr_assign(IADLXGPUTuningServices* *obj, IADLXGPUTuningServices* value) {
  *obj = value;
}

static IADLXGPUTuningServices* gpuTuningP_Ptr_value(IADLXGPUTuningServices* *obj) {
  return *obj;
}


static IADLXManualFanTuning* *new_manualFanTuningP_Ptr(void) { 
  return new IADLXManualFanTuning*(); 
}

static IADLXManualFanTuning* *copy_manualFanTuningP_Ptr(IADLXManualFanTuning* value) { 
  return new IADLXManualFanTuning*(value); 
}

static void delete_manualFanTuningP_Ptr(IADLXManualFanTuning* *obj) { 
  delete obj; 
}

static void manualFanTuningP_Ptr_assign(IADLXManualFanTuning* *obj, IADLXManualFanTuning* value) {
  *obj = value;
}

static IADLXManualFanTuning* manualFanTuningP_Ptr_value(IADLXManualFanTuning* *obj) {
  return *obj;
}


static IADLXManualPowerTuning* *new_manualPowerTuningP_Ptr(void) { 
  return new IADLXManualPowerTuning*(); 
}

static IADLXManualPowerTuning* *copy_manualPowerTuningP_Ptr(IADLXManualPowerTuning* value) { 
  return new IADLXManualPowerTuning*(value); 
}

static void delete_manualPowerTuningP_Ptr(IADLXManualPowerTuning* *obj) { 
  delete obj; 
}

static void manualPowerTuningP_Ptr_assign(IADLXManualPowerTuning* *obj, IADLXManualPowerTuning* value) {
  *obj = value;
}

static IADLXManualPowerTuning* manualPowerTuningP_Ptr_value(IADLXManualPowerTuning* *obj) {
  return *obj;
}


static IADLXPerformanceMonitoringServices* *new_performanceP_Ptr(void) { 
  return new IADLXPerformanceMonitoringServices*(); 
}

static IADLXPerformanceMonitoringServices* *copy_performanceP_Ptr(IADLXPerformanceMonitoringServices* value) { 
  return new IADLXPerformanceMonitoringServices*(value); 
}

static void delete_performanceP_Ptr(IADLXPerformanceMonitoringServices* *obj) { 
  delete obj; 
}

static void performanceP_Ptr_assign(IADLXPerformanceMonitoringServices* *obj, IADLXPerformanceMonitoringServices* value) {
  *obj = value;
}

static IADLXPerformanceMonitoringServices* performanceP_Ptr_value(IADLXPerformanceMonitoringServices* *obj) {
  return *obj;
}


static IADLXManualFanTuningStateList* *new_fanTuningStateListP_Ptr(void) { 
  return new IADLXManualFanTuningStateList*(); 
}

static IADLXManualFanTuningStateList* *copy_fanTuningStateListP_Ptr(IADLXManualFanTuningStateList* value) { 
  return new IADLXManualFanTuningStateList*(value); 
}

static void delete_fanTuningStateListP_Ptr(IADLXManualFanTuningStateList* *obj) { 
  delete obj; 
}

static void fanTuningStateListP_Ptr_assign(IADLXManualFanTuningStateList* *obj, IADLXManualFanTuningStateList* value) {
  *obj = value;
}

static IADLXManualFanTuningStateList* fanTuningStateListP_Ptr_value(IADLXManualFanTuningStateList* *obj) {
  return *obj;
}


static IADLXManualFanTuningState* *new_fanTuningStateP_Ptr(void) { 
  return new IADLXManualFanTuningState*(); 
}

static IADLXManualFanTuningState* *copy_fanTuningStateP_Ptr(IADLXManualFanTuningState* value) { 
  return new IADLXManualFanTuningState*(value); 
}

static void delete_fanTuningStateP_Ptr(IADLXManualFanTuningState* *obj) { 
  delete obj; 
}

static void fanTuningStateP_Ptr_assign(IADLXManualFanTuningState* *obj, IADLXManualFanTuningState* value) {
  *obj = value;
}

static IADLXManualFanTuningState* fanTuningStateP_Ptr_value(IADLXManualFanTuningState* *obj) {
  return *obj;
}


static IADLXGPUMetrics* *new_metricsP_Ptr(void) { 
  return new IADLXGPUMetrics*(); 
}

static IADLXGPUMetrics* *copy_metricsP_Ptr(IADLXGPUMetrics* value) { 
  return new IADLXGPUMetrics*(value); 
}

static void delete_metricsP_Ptr(IADLXGPUMetrics* *obj) { 
  delete obj; 
}

static void metricsP_Ptr_assign(IADLXGPUMetrics* *obj, IADLXGPUMetrics* value) {
  *obj = value;
}

static IADLXGPUMetrics* metricsP_Ptr_value(IADLXGPUMetrics* *obj) {
  return *obj;
}


static adlx_string *new_stringP_Ptr(void) { 
  return new adlx_string(); 
}

static adlx_string *copy_stringP_Ptr(adlx_string value) { 
  return new adlx_string(value); 
}

static void delete_stringP_Ptr(adlx_string *obj) { 
  delete obj; 
}

static void stringP_Ptr_assign(adlx_string *obj, adlx_string value) {
  *obj = value;
}

static adlx_string stringP_Ptr_value(adlx_string *obj) {
  return *obj;
}


static IADLXGPUMetricsList* *new_gpuMetricsListP_Ptr(void) { 
  return new IADLXGPUMetricsList*(); 
}

static IADLXGPUMetricsList* *copy_gpuMetricsListP_Ptr(IADLXGPUMetricsList* value) { 
  return new IADLXGPUMetricsList*(value); 
}

static void delete_gpuMetricsListP_Ptr(IADLXGPUMetricsList* *obj) { 
  delete obj; 
}

static void gpuMetricsListP_Ptr_assign(IADLXGPUMetricsList* *obj, IADLXGPUMetricsList* value) {
  *obj = value;
}

static IADLXGPUMetricsList* gpuMetricsListP_Ptr_value(IADLXGPUMetricsList* *obj) {
  return *obj;
}


void** CastManualFanTuningVoidPtr(IADLXManualFanTuning** x) {
   return (void**) x;
}


void** CastManualPowerTuningVoidPtr(IADLXManualPowerTuning** x) {
   return (void**) x;
}



/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "ADLXBindings_wrap.h"

SwigDirector_IADLXDisplayListChangedListener::SwigDirector_IADLXDisplayListChangedListener() : adlx::IADLXDisplayListChangedListener(), Swig::Director() {
  swig_init_callbacks();
}

adlx_bool SwigDirector_IADLXDisplayListChangedListener::OnDisplayListChanged(adlx::IADLXDisplayList *pNewDisplay) {
  adlx_bool c_result = SwigValueInit< adlx_bool >() ;
  unsigned int jresult = 0 ;
  void * jpNewDisplay = 0 ;
  
  if (!swig_callbackOnDisplayListChanged) {
    Swig::DirectorPureVirtualException::raise("adlx::IADLXDisplayListChangedListener::OnDisplayListChanged");
    return c_result;
  } else {
    jpNewDisplay = (void *) pNewDisplay; 
    jresult = (unsigned int) swig_callbackOnDisplayListChanged(jpNewDisplay);
    c_result = jresult ? true : false; 
  }
  return c_result;
}

void SwigDirector_IADLXDisplayListChangedListener::swig_connect_director(SWIG_Callback0_t callbackOnDisplayListChanged) {
  swig_callbackOnDisplayListChanged = callbackOnDisplayListChanged;
}

void SwigDirector_IADLXDisplayListChangedListener::swig_init_callbacks() {
  swig_callbackOnDisplayListChanged = 0;
}


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_adlx_atomic_inc___(void * jarg1) {
  int jresult ;
  adlx_long *arg1 = (adlx_long *) 0 ;
  adlx_long result;
  
  arg1 = (adlx_long *)jarg1; 
  result = (adlx_long)adlx_atomic_inc(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_adlx_atomic_dec___(void * jarg1) {
  int jresult ;
  adlx_long *arg1 = (adlx_long *) 0 ;
  adlx_long result;
  
  arg1 = (adlx_long *)jarg1; 
  result = (adlx_long)adlx_atomic_dec(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_adlx_load_library___(void * jarg1) {
  void * jresult ;
  TCHAR *arg1 = (TCHAR *) 0 ;
  adlx_handle result;
  
  arg1 = (TCHAR *)jarg1; 
  result = (adlx_handle)adlx_load_library((wchar_t const *)arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_adlx_free_library___(void * jarg1) {
  int jresult ;
  adlx_handle arg1 = (adlx_handle) 0 ;
  int result;
  
  arg1 = (adlx_handle)jarg1; 
  result = (int)adlx_free_library(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_adlx_get_proc_address___(void * jarg1, char * jarg2) {
  void * jresult ;
  adlx_handle arg1 = (adlx_handle) 0 ;
  char *arg2 = (char *) 0 ;
  void *result = 0 ;
  
  arg1 = (adlx_handle)jarg1; 
  arg2 = (char *)jarg2; 
  result = (void *)adlx_get_proc_address(arg1,(char const *)arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_MAX_USER_3DLUT_NUM_POINTS_get___() {
  int jresult ;
  int result;
  
  result = (int)(17);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXInterface_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXInterface::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXInterface_Acquire___(void * jarg1) {
  int jresult ;
  adlx::IADLXInterface *arg1 = (adlx::IADLXInterface *) 0 ;
  adlx_long result;
  
  arg1 = (adlx::IADLXInterface *)jarg1; 
  result = (adlx_long)(arg1)->Acquire();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXInterface_Release___(void * jarg1) {
  int jresult ;
  adlx::IADLXInterface *arg1 = (adlx::IADLXInterface *) 0 ;
  adlx_long result;
  
  arg1 = (adlx::IADLXInterface *)jarg1; 
  result = (adlx_long)(arg1)->Release();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXInterface_QueryInterface___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXInterface *arg1 = (adlx::IADLXInterface *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  void **arg3 = (void **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXInterface *)jarg1; 
  arg2 = (wchar_t *)jarg2; 
  arg3 = (void **)jarg3; 
  result = (ADLX_RESULT)(arg1)->QueryInterface((wchar_t const *)arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXInterface___(void * jarg1) {
  adlx::IADLXInterface *arg1 = (adlx::IADLXInterface *) 0 ;
  
  arg1 = (adlx::IADLXInterface *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_RGB_gamutR_set___(void * jarg1, double jarg2) {
  ADLX_RGB *arg1 = (ADLX_RGB *) 0 ;
  adlx_double arg2 ;
  
  arg1 = (ADLX_RGB *)jarg1; 
  arg2 = (adlx_double)jarg2; 
  if (arg1) (arg1)->gamutR = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_RGB_gamutR_get___(void * jarg1) {
  double jresult ;
  ADLX_RGB *arg1 = (ADLX_RGB *) 0 ;
  adlx_double result;
  
  arg1 = (ADLX_RGB *)jarg1; 
  result = (adlx_double) ((arg1)->gamutR);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_RGB_gamutG_set___(void * jarg1, double jarg2) {
  ADLX_RGB *arg1 = (ADLX_RGB *) 0 ;
  adlx_double arg2 ;
  
  arg1 = (ADLX_RGB *)jarg1; 
  arg2 = (adlx_double)jarg2; 
  if (arg1) (arg1)->gamutG = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_RGB_gamutG_get___(void * jarg1) {
  double jresult ;
  ADLX_RGB *arg1 = (ADLX_RGB *) 0 ;
  adlx_double result;
  
  arg1 = (ADLX_RGB *)jarg1; 
  result = (adlx_double) ((arg1)->gamutG);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_RGB_gamutB_set___(void * jarg1, double jarg2) {
  ADLX_RGB *arg1 = (ADLX_RGB *) 0 ;
  adlx_double arg2 ;
  
  arg1 = (ADLX_RGB *)jarg1; 
  arg2 = (adlx_double)jarg2; 
  if (arg1) (arg1)->gamutB = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_RGB_gamutB_get___(void * jarg1) {
  double jresult ;
  ADLX_RGB *arg1 = (ADLX_RGB *) 0 ;
  adlx_double result;
  
  arg1 = (ADLX_RGB *)jarg1; 
  result = (adlx_double) ((arg1)->gamutB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_ADLX_RGB___() {
  void * jresult ;
  ADLX_RGB *result = 0 ;
  
  result = (ADLX_RGB *)new ADLX_RGB();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_ADLX_RGB___(void * jarg1) {
  ADLX_RGB *arg1 = (ADLX_RGB *) 0 ;
  
  arg1 = (ADLX_RGB *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_Point_x_set___(void * jarg1, int jarg2) {
  ADLX_Point *arg1 = (ADLX_Point *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_Point *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_Point_x_get___(void * jarg1) {
  int jresult ;
  ADLX_Point *arg1 = (ADLX_Point *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_Point *)jarg1; 
  result = (adlx_int) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_Point_y_set___(void * jarg1, int jarg2) {
  ADLX_Point *arg1 = (ADLX_Point *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_Point *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_Point_y_get___(void * jarg1) {
  int jresult ;
  ADLX_Point *arg1 = (ADLX_Point *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_Point *)jarg1; 
  result = (adlx_int) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_ADLX_Point___() {
  void * jresult ;
  ADLX_Point *result = 0 ;
  
  result = (ADLX_Point *)new ADLX_Point();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_ADLX_Point___(void * jarg1) {
  ADLX_Point *arg1 = (ADLX_Point *) 0 ;
  
  arg1 = (ADLX_Point *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_GamutColorSpace_red_set___(void * jarg1, void * jarg2) {
  ADLX_GamutColorSpace *arg1 = (ADLX_GamutColorSpace *) 0 ;
  ADLX_Point *arg2 = (ADLX_Point *) 0 ;
  
  arg1 = (ADLX_GamutColorSpace *)jarg1; 
  arg2 = (ADLX_Point *)jarg2; 
  if (arg1) (arg1)->red = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_GamutColorSpace_red_get___(void * jarg1) {
  void * jresult ;
  ADLX_GamutColorSpace *arg1 = (ADLX_GamutColorSpace *) 0 ;
  ADLX_Point *result = 0 ;
  
  arg1 = (ADLX_GamutColorSpace *)jarg1; 
  result = (ADLX_Point *)& ((arg1)->red);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_GamutColorSpace_green_set___(void * jarg1, void * jarg2) {
  ADLX_GamutColorSpace *arg1 = (ADLX_GamutColorSpace *) 0 ;
  ADLX_Point *arg2 = (ADLX_Point *) 0 ;
  
  arg1 = (ADLX_GamutColorSpace *)jarg1; 
  arg2 = (ADLX_Point *)jarg2; 
  if (arg1) (arg1)->green = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_GamutColorSpace_green_get___(void * jarg1) {
  void * jresult ;
  ADLX_GamutColorSpace *arg1 = (ADLX_GamutColorSpace *) 0 ;
  ADLX_Point *result = 0 ;
  
  arg1 = (ADLX_GamutColorSpace *)jarg1; 
  result = (ADLX_Point *)& ((arg1)->green);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_GamutColorSpace_blue_set___(void * jarg1, void * jarg2) {
  ADLX_GamutColorSpace *arg1 = (ADLX_GamutColorSpace *) 0 ;
  ADLX_Point *arg2 = (ADLX_Point *) 0 ;
  
  arg1 = (ADLX_GamutColorSpace *)jarg1; 
  arg2 = (ADLX_Point *)jarg2; 
  if (arg1) (arg1)->blue = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_GamutColorSpace_blue_get___(void * jarg1) {
  void * jresult ;
  ADLX_GamutColorSpace *arg1 = (ADLX_GamutColorSpace *) 0 ;
  ADLX_Point *result = 0 ;
  
  arg1 = (ADLX_GamutColorSpace *)jarg1; 
  result = (ADLX_Point *)& ((arg1)->blue);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_ADLX_GamutColorSpace___() {
  void * jresult ;
  ADLX_GamutColorSpace *result = 0 ;
  
  result = (ADLX_GamutColorSpace *)new ADLX_GamutColorSpace();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_ADLX_GamutColorSpace___(void * jarg1) {
  ADLX_GamutColorSpace *arg1 = (ADLX_GamutColorSpace *) 0 ;
  
  arg1 = (ADLX_GamutColorSpace *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_GammaRamp_gamma_set___(void * jarg1, void * jarg2) {
  ADLX_GammaRamp *arg1 = (ADLX_GammaRamp *) 0 ;
  adlx_uint16 *arg2 = (adlx_uint16 *) (adlx_uint16 *)0 ;
  
  arg1 = (ADLX_GammaRamp *)jarg1; 
  arg2 = (adlx_uint16 *)jarg2; 
  {
    size_t ii;
    adlx_uint16 *b = (adlx_uint16 *) arg1->gamma;
    for (ii = 0; ii < (size_t)256*3; ii++) b[ii] = *((adlx_uint16 *) arg2 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_GammaRamp_gamma_get___(void * jarg1) {
  void * jresult ;
  ADLX_GammaRamp *arg1 = (ADLX_GammaRamp *) 0 ;
  adlx_uint16 *result = 0 ;
  
  arg1 = (ADLX_GammaRamp *)jarg1; 
  result = (adlx_uint16 *)(adlx_uint16 *) ((arg1)->gamma);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_ADLX_GammaRamp___() {
  void * jresult ;
  ADLX_GammaRamp *result = 0 ;
  
  result = (ADLX_GammaRamp *)new ADLX_GammaRamp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_ADLX_GammaRamp___(void * jarg1) {
  ADLX_GammaRamp *arg1 = (ADLX_GammaRamp *) 0 ;
  
  arg1 = (ADLX_GammaRamp *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_RegammaCoeff_coefficientA0_set___(void * jarg1, int jarg2) {
  ADLX_RegammaCoeff *arg1 = (ADLX_RegammaCoeff *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_RegammaCoeff *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->coefficientA0 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_RegammaCoeff_coefficientA0_get___(void * jarg1) {
  int jresult ;
  ADLX_RegammaCoeff *arg1 = (ADLX_RegammaCoeff *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_RegammaCoeff *)jarg1; 
  result = (adlx_int) ((arg1)->coefficientA0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_RegammaCoeff_coefficientA1_set___(void * jarg1, int jarg2) {
  ADLX_RegammaCoeff *arg1 = (ADLX_RegammaCoeff *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_RegammaCoeff *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->coefficientA1 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_RegammaCoeff_coefficientA1_get___(void * jarg1) {
  int jresult ;
  ADLX_RegammaCoeff *arg1 = (ADLX_RegammaCoeff *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_RegammaCoeff *)jarg1; 
  result = (adlx_int) ((arg1)->coefficientA1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_RegammaCoeff_coefficientA2_set___(void * jarg1, int jarg2) {
  ADLX_RegammaCoeff *arg1 = (ADLX_RegammaCoeff *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_RegammaCoeff *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->coefficientA2 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_RegammaCoeff_coefficientA2_get___(void * jarg1) {
  int jresult ;
  ADLX_RegammaCoeff *arg1 = (ADLX_RegammaCoeff *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_RegammaCoeff *)jarg1; 
  result = (adlx_int) ((arg1)->coefficientA2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_RegammaCoeff_coefficientA3_set___(void * jarg1, int jarg2) {
  ADLX_RegammaCoeff *arg1 = (ADLX_RegammaCoeff *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_RegammaCoeff *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->coefficientA3 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_RegammaCoeff_coefficientA3_get___(void * jarg1) {
  int jresult ;
  ADLX_RegammaCoeff *arg1 = (ADLX_RegammaCoeff *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_RegammaCoeff *)jarg1; 
  result = (adlx_int) ((arg1)->coefficientA3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_RegammaCoeff_gamma_set___(void * jarg1, int jarg2) {
  ADLX_RegammaCoeff *arg1 = (ADLX_RegammaCoeff *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_RegammaCoeff *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->gamma = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_RegammaCoeff_gamma_get___(void * jarg1) {
  int jresult ;
  ADLX_RegammaCoeff *arg1 = (ADLX_RegammaCoeff *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_RegammaCoeff *)jarg1; 
  result = (adlx_int) ((arg1)->gamma);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_ADLX_RegammaCoeff___() {
  void * jresult ;
  ADLX_RegammaCoeff *result = 0 ;
  
  result = (ADLX_RegammaCoeff *)new ADLX_RegammaCoeff();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_ADLX_RegammaCoeff___(void * jarg1) {
  ADLX_RegammaCoeff *arg1 = (ADLX_RegammaCoeff *) 0 ;
  
  arg1 = (ADLX_RegammaCoeff *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_timingFlags_set___(void * jarg1, int jarg2) {
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->timingFlags = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_timingFlags_get___(void * jarg1) {
  int jresult ;
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  result = (adlx_int) ((arg1)->timingFlags);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_hTotal_set___(void * jarg1, int jarg2) {
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->hTotal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_hTotal_get___(void * jarg1) {
  int jresult ;
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  result = (adlx_int) ((arg1)->hTotal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_vTotal_set___(void * jarg1, int jarg2) {
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->vTotal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_vTotal_get___(void * jarg1) {
  int jresult ;
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  result = (adlx_int) ((arg1)->vTotal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_hDisplay_set___(void * jarg1, int jarg2) {
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->hDisplay = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_hDisplay_get___(void * jarg1) {
  int jresult ;
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  result = (adlx_int) ((arg1)->hDisplay);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_vDisplay_set___(void * jarg1, int jarg2) {
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->vDisplay = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_vDisplay_get___(void * jarg1) {
  int jresult ;
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  result = (adlx_int) ((arg1)->vDisplay);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_hFrontPorch_set___(void * jarg1, int jarg2) {
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->hFrontPorch = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_hFrontPorch_get___(void * jarg1) {
  int jresult ;
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  result = (adlx_int) ((arg1)->hFrontPorch);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_vFrontPorch_set___(void * jarg1, int jarg2) {
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->vFrontPorch = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_vFrontPorch_get___(void * jarg1) {
  int jresult ;
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  result = (adlx_int) ((arg1)->vFrontPorch);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_hSyncWidth_set___(void * jarg1, int jarg2) {
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->hSyncWidth = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_hSyncWidth_get___(void * jarg1) {
  int jresult ;
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  result = (adlx_int) ((arg1)->hSyncWidth);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_vSyncWidth_set___(void * jarg1, int jarg2) {
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->vSyncWidth = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_vSyncWidth_get___(void * jarg1) {
  int jresult ;
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  result = (adlx_int) ((arg1)->vSyncWidth);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_hPolarity_set___(void * jarg1, int jarg2) {
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->hPolarity = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_hPolarity_get___(void * jarg1) {
  int jresult ;
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  result = (adlx_int) ((arg1)->hPolarity);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_vPolarity_set___(void * jarg1, int jarg2) {
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->vPolarity = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_TimingInfo_vPolarity_get___(void * jarg1) {
  int jresult ;
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  result = (adlx_int) ((arg1)->vPolarity);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_ADLX_TimingInfo___() {
  void * jresult ;
  ADLX_TimingInfo *result = 0 ;
  
  result = (ADLX_TimingInfo *)new ADLX_TimingInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_ADLX_TimingInfo___(void * jarg1) {
  ADLX_TimingInfo *arg1 = (ADLX_TimingInfo *) 0 ;
  
  arg1 = (ADLX_TimingInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_CustomResolution_resWidth_set___(void * jarg1, int jarg2) {
  ADLX_CustomResolution *arg1 = (ADLX_CustomResolution *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_CustomResolution *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->resWidth = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_CustomResolution_resWidth_get___(void * jarg1) {
  int jresult ;
  ADLX_CustomResolution *arg1 = (ADLX_CustomResolution *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_CustomResolution *)jarg1; 
  result = (adlx_int) ((arg1)->resWidth);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_CustomResolution_resHeight_set___(void * jarg1, int jarg2) {
  ADLX_CustomResolution *arg1 = (ADLX_CustomResolution *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_CustomResolution *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->resHeight = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_CustomResolution_resHeight_get___(void * jarg1) {
  int jresult ;
  ADLX_CustomResolution *arg1 = (ADLX_CustomResolution *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_CustomResolution *)jarg1; 
  result = (adlx_int) ((arg1)->resHeight);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_CustomResolution_refreshRate_set___(void * jarg1, int jarg2) {
  ADLX_CustomResolution *arg1 = (ADLX_CustomResolution *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_CustomResolution *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->refreshRate = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_CustomResolution_refreshRate_get___(void * jarg1) {
  int jresult ;
  ADLX_CustomResolution *arg1 = (ADLX_CustomResolution *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_CustomResolution *)jarg1; 
  result = (adlx_int) ((arg1)->refreshRate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_CustomResolution_presentation_set___(void * jarg1, int jarg2) {
  ADLX_CustomResolution *arg1 = (ADLX_CustomResolution *) 0 ;
  ADLX_DISPLAY_SCAN_TYPE arg2 ;
  
  arg1 = (ADLX_CustomResolution *)jarg1; 
  arg2 = (ADLX_DISPLAY_SCAN_TYPE)jarg2; 
  if (arg1) (arg1)->presentation = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_CustomResolution_presentation_get___(void * jarg1) {
  int jresult ;
  ADLX_CustomResolution *arg1 = (ADLX_CustomResolution *) 0 ;
  ADLX_DISPLAY_SCAN_TYPE result;
  
  arg1 = (ADLX_CustomResolution *)jarg1; 
  result = (ADLX_DISPLAY_SCAN_TYPE) ((arg1)->presentation);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_CustomResolution_timingStandard_set___(void * jarg1, int jarg2) {
  ADLX_CustomResolution *arg1 = (ADLX_CustomResolution *) 0 ;
  ADLX_TIMING_STANDARD arg2 ;
  
  arg1 = (ADLX_CustomResolution *)jarg1; 
  arg2 = (ADLX_TIMING_STANDARD)jarg2; 
  if (arg1) (arg1)->timingStandard = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_CustomResolution_timingStandard_get___(void * jarg1) {
  int jresult ;
  ADLX_CustomResolution *arg1 = (ADLX_CustomResolution *) 0 ;
  ADLX_TIMING_STANDARD result;
  
  arg1 = (ADLX_CustomResolution *)jarg1; 
  result = (ADLX_TIMING_STANDARD) ((arg1)->timingStandard);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_CustomResolution_GPixelClock_set___(void * jarg1, int jarg2) {
  ADLX_CustomResolution *arg1 = (ADLX_CustomResolution *) 0 ;
  adlx_long arg2 ;
  
  arg1 = (ADLX_CustomResolution *)jarg1; 
  arg2 = (adlx_long)jarg2; 
  if (arg1) (arg1)->GPixelClock = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_CustomResolution_GPixelClock_get___(void * jarg1) {
  int jresult ;
  ADLX_CustomResolution *arg1 = (ADLX_CustomResolution *) 0 ;
  adlx_long result;
  
  arg1 = (ADLX_CustomResolution *)jarg1; 
  result = (adlx_long) ((arg1)->GPixelClock);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_CustomResolution_detailedTiming_set___(void * jarg1, void * jarg2) {
  ADLX_CustomResolution *arg1 = (ADLX_CustomResolution *) 0 ;
  ADLX_TimingInfo *arg2 = (ADLX_TimingInfo *) 0 ;
  
  arg1 = (ADLX_CustomResolution *)jarg1; 
  arg2 = (ADLX_TimingInfo *)jarg2; 
  if (arg1) (arg1)->detailedTiming = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_CustomResolution_detailedTiming_get___(void * jarg1) {
  void * jresult ;
  ADLX_CustomResolution *arg1 = (ADLX_CustomResolution *) 0 ;
  ADLX_TimingInfo *result = 0 ;
  
  arg1 = (ADLX_CustomResolution *)jarg1; 
  result = (ADLX_TimingInfo *)& ((arg1)->detailedTiming);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_ADLX_CustomResolution___() {
  void * jresult ;
  ADLX_CustomResolution *result = 0 ;
  
  result = (ADLX_CustomResolution *)new ADLX_CustomResolution();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_ADLX_CustomResolution___(void * jarg1) {
  ADLX_CustomResolution *arg1 = (ADLX_CustomResolution *) 0 ;
  
  arg1 = (ADLX_CustomResolution *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_IntRange_minValue_set___(void * jarg1, int jarg2) {
  ADLX_IntRange *arg1 = (ADLX_IntRange *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_IntRange *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->minValue = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_IntRange_minValue_get___(void * jarg1) {
  int jresult ;
  ADLX_IntRange *arg1 = (ADLX_IntRange *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_IntRange *)jarg1; 
  result = (adlx_int) ((arg1)->minValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_IntRange_maxValue_set___(void * jarg1, int jarg2) {
  ADLX_IntRange *arg1 = (ADLX_IntRange *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_IntRange *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->maxValue = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_IntRange_maxValue_get___(void * jarg1) {
  int jresult ;
  ADLX_IntRange *arg1 = (ADLX_IntRange *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_IntRange *)jarg1; 
  result = (adlx_int) ((arg1)->maxValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_IntRange_step_set___(void * jarg1, int jarg2) {
  ADLX_IntRange *arg1 = (ADLX_IntRange *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (ADLX_IntRange *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  if (arg1) (arg1)->step = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_IntRange_step_get___(void * jarg1) {
  int jresult ;
  ADLX_IntRange *arg1 = (ADLX_IntRange *) 0 ;
  adlx_int result;
  
  arg1 = (ADLX_IntRange *)jarg1; 
  result = (adlx_int) ((arg1)->step);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_ADLX_IntRange___() {
  void * jresult ;
  ADLX_IntRange *result = 0 ;
  
  result = (ADLX_IntRange *)new ADLX_IntRange();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_ADLX_IntRange___(void * jarg1) {
  ADLX_IntRange *arg1 = (ADLX_IntRange *) 0 ;
  
  arg1 = (ADLX_IntRange *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_UINT16_RGB_red_set___(void * jarg1, unsigned short jarg2) {
  ADLX_UINT16_RGB *arg1 = (ADLX_UINT16_RGB *) 0 ;
  adlx_uint16 arg2 ;
  
  arg1 = (ADLX_UINT16_RGB *)jarg1; 
  arg2 = (adlx_uint16)jarg2; 
  if (arg1) (arg1)->red = arg2;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_UINT16_RGB_red_get___(void * jarg1) {
  unsigned short jresult ;
  ADLX_UINT16_RGB *arg1 = (ADLX_UINT16_RGB *) 0 ;
  adlx_uint16 result;
  
  arg1 = (ADLX_UINT16_RGB *)jarg1; 
  result = (adlx_uint16) ((arg1)->red);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_UINT16_RGB_green_set___(void * jarg1, unsigned short jarg2) {
  ADLX_UINT16_RGB *arg1 = (ADLX_UINT16_RGB *) 0 ;
  adlx_uint16 arg2 ;
  
  arg1 = (ADLX_UINT16_RGB *)jarg1; 
  arg2 = (adlx_uint16)jarg2; 
  if (arg1) (arg1)->green = arg2;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_UINT16_RGB_green_get___(void * jarg1) {
  unsigned short jresult ;
  ADLX_UINT16_RGB *arg1 = (ADLX_UINT16_RGB *) 0 ;
  adlx_uint16 result;
  
  arg1 = (ADLX_UINT16_RGB *)jarg1; 
  result = (adlx_uint16) ((arg1)->green);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_UINT16_RGB_blue_set___(void * jarg1, unsigned short jarg2) {
  ADLX_UINT16_RGB *arg1 = (ADLX_UINT16_RGB *) 0 ;
  adlx_uint16 arg2 ;
  
  arg1 = (ADLX_UINT16_RGB *)jarg1; 
  arg2 = (adlx_uint16)jarg2; 
  if (arg1) (arg1)->blue = arg2;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_UINT16_RGB_blue_get___(void * jarg1) {
  unsigned short jresult ;
  ADLX_UINT16_RGB *arg1 = (ADLX_UINT16_RGB *) 0 ;
  adlx_uint16 result;
  
  arg1 = (ADLX_UINT16_RGB *)jarg1; 
  result = (adlx_uint16) ((arg1)->blue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_ADLX_UINT16_RGB___() {
  void * jresult ;
  ADLX_UINT16_RGB *result = 0 ;
  
  result = (ADLX_UINT16_RGB *)new ADLX_UINT16_RGB();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_ADLX_UINT16_RGB___(void * jarg1) {
  ADLX_UINT16_RGB *arg1 = (ADLX_UINT16_RGB *) 0 ;
  
  arg1 = (ADLX_UINT16_RGB *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_3DLUT_Data_data_set___(void * jarg1, void * jarg2) {
  ADLX_3DLUT_Data *arg1 = (ADLX_3DLUT_Data *) 0 ;
  ADLX_UINT16_RGB *arg2 = (ADLX_UINT16_RGB *) (ADLX_UINT16_RGB *)0 ;
  
  arg1 = (ADLX_3DLUT_Data *)jarg1; 
  arg2 = (ADLX_UINT16_RGB *)jarg2; 
  {
    size_t ii;
    ADLX_UINT16_RGB *b = (ADLX_UINT16_RGB *) arg1->data;
    for (ii = 0; ii < (size_t)17*17*17; ii++) b[ii] = *((ADLX_UINT16_RGB *) arg2 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLX_3DLUT_Data_data_get___(void * jarg1) {
  void * jresult ;
  ADLX_3DLUT_Data *arg1 = (ADLX_3DLUT_Data *) 0 ;
  ADLX_UINT16_RGB *result = 0 ;
  
  arg1 = (ADLX_3DLUT_Data *)jarg1; 
  result = (ADLX_UINT16_RGB *)(ADLX_UINT16_RGB *) ((arg1)->data);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_ADLX_3DLUT_Data___() {
  void * jresult ;
  ADLX_3DLUT_Data *result = 0 ;
  
  result = (ADLX_3DLUT_Data *)new ADLX_3DLUT_Data();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_ADLX_3DLUT_Data___(void * jarg1) {
  ADLX_3DLUT_Data *arg1 = (ADLX_3DLUT_Data *) 0 ;
  
  arg1 = (ADLX_3DLUT_Data *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXList_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXList::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXList_ITEM_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXList::ITEM_IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXList_Size___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXList *arg1 = (adlx::IADLXList *) 0 ;
  adlx_uint result;
  
  arg1 = (adlx::IADLXList *)jarg1; 
  result = (adlx_uint)(arg1)->Size();
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXList_Empty___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXList *arg1 = (adlx::IADLXList *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXList *)jarg1; 
  result = (adlx_bool)(arg1)->Empty();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXList_Begin___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXList *arg1 = (adlx::IADLXList *) 0 ;
  adlx_uint result;
  
  arg1 = (adlx::IADLXList *)jarg1; 
  result = (adlx_uint)(arg1)->Begin();
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXList_End___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXList *arg1 = (adlx::IADLXList *) 0 ;
  adlx_uint result;
  
  arg1 = (adlx::IADLXList *)jarg1; 
  result = (adlx_uint)(arg1)->End();
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXList_At___(void * jarg1, unsigned int jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXList *arg1 = (adlx::IADLXList *) 0 ;
  adlx_uint arg2 ;
  adlx::IADLXInterface **arg3 = (adlx::IADLXInterface **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXList *)jarg1; 
  arg2 = (adlx_uint)jarg2; 
  arg3 = (adlx::IADLXInterface **)jarg3; 
  result = (ADLX_RESULT)(arg1)->At(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXList_Clear___(void * jarg1) {
  int jresult ;
  adlx::IADLXList *arg1 = (adlx::IADLXList *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXList *)jarg1; 
  result = (ADLX_RESULT)(arg1)->Clear();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXList_Remove_Back___(void * jarg1) {
  int jresult ;
  adlx::IADLXList *arg1 = (adlx::IADLXList *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXList *)jarg1; 
  result = (ADLX_RESULT)(arg1)->Remove_Back();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXList_Add_Back___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXList *arg1 = (adlx::IADLXList *) 0 ;
  adlx::IADLXInterface *arg2 = (adlx::IADLXInterface *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXList *)jarg1; 
  arg2 = (adlx::IADLXInterface *)jarg2; 
  result = (ADLX_RESULT)(arg1)->Add_Back(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXList___(void * jarg1) {
  adlx::IADLXList *arg1 = (adlx::IADLXList *) 0 ;
  
  arg1 = (adlx::IADLXList *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplay_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXDisplay::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplay_ManufacturerID___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplay *arg1 = (adlx::IADLXDisplay *) 0 ;
  adlx_uint *arg2 = (adlx_uint *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplay *)jarg1; 
  arg2 = (adlx_uint *)jarg2; 
  result = (ADLX_RESULT)((adlx::IADLXDisplay const *)arg1)->ManufacturerID(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplay_DisplayType___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplay *arg1 = (adlx::IADLXDisplay *) 0 ;
  ADLX_DISPLAY_TYPE *arg2 = (ADLX_DISPLAY_TYPE *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplay *)jarg1; 
  arg2 = (ADLX_DISPLAY_TYPE *)jarg2; 
  result = (ADLX_RESULT)((adlx::IADLXDisplay const *)arg1)->DisplayType(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplay_ConnectorType___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplay *arg1 = (adlx::IADLXDisplay *) 0 ;
  ADLX_DISPLAY_CONNECTOR_TYPE *arg2 = (ADLX_DISPLAY_CONNECTOR_TYPE *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplay *)jarg1; 
  arg2 = (ADLX_DISPLAY_CONNECTOR_TYPE *)jarg2; 
  result = (ADLX_RESULT)((adlx::IADLXDisplay const *)arg1)->ConnectorType(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplay_Name___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplay *arg1 = (adlx::IADLXDisplay *) 0 ;
  char **arg2 = (char **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplay *)jarg1; 
  arg2 = (char **)jarg2; 
  result = (ADLX_RESULT)((adlx::IADLXDisplay const *)arg1)->Name((char const **)arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplay_EDID___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplay *arg1 = (adlx::IADLXDisplay *) 0 ;
  char **arg2 = (char **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplay *)jarg1; 
  arg2 = (char **)jarg2; 
  result = (ADLX_RESULT)((adlx::IADLXDisplay const *)arg1)->EDID((char const **)arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplay_NativeResolution___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXDisplay *arg1 = (adlx::IADLXDisplay *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplay *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)((adlx::IADLXDisplay const *)arg1)->NativeResolution(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplay_RefreshRate___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplay *arg1 = (adlx::IADLXDisplay *) 0 ;
  adlx_double *arg2 = (adlx_double *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplay *)jarg1; 
  arg2 = (adlx_double *)jarg2; 
  result = (ADLX_RESULT)((adlx::IADLXDisplay const *)arg1)->RefreshRate(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplay_PixelClock___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplay *arg1 = (adlx::IADLXDisplay *) 0 ;
  adlx_uint *arg2 = (adlx_uint *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplay *)jarg1; 
  arg2 = (adlx_uint *)jarg2; 
  result = (ADLX_RESULT)((adlx::IADLXDisplay const *)arg1)->PixelClock(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplay_ScanType___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplay *arg1 = (adlx::IADLXDisplay *) 0 ;
  ADLX_DISPLAY_SCAN_TYPE *arg2 = (ADLX_DISPLAY_SCAN_TYPE *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplay *)jarg1; 
  arg2 = (ADLX_DISPLAY_SCAN_TYPE *)jarg2; 
  result = (ADLX_RESULT)((adlx::IADLXDisplay const *)arg1)->ScanType(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplay_GetGPU___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplay *arg1 = (adlx::IADLXDisplay *) 0 ;
  adlx::IADLXGPU **arg2 = (adlx::IADLXGPU **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplay *)jarg1; 
  arg2 = (adlx::IADLXGPU **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetGPU(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplay_UniqueId___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplay *arg1 = (adlx::IADLXDisplay *) 0 ;
  adlx_size *arg2 = (adlx_size *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplay *)jarg1; 
  arg2 = (adlx_size *)jarg2; 
  result = (ADLX_RESULT)(arg1)->UniqueId(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXDisplay___(void * jarg1) {
  adlx::IADLXDisplay *arg1 = (adlx::IADLXDisplay *) 0 ;
  
  arg1 = (adlx::IADLXDisplay *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayList_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXDisplayList::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayList_ITEM_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXDisplayList::ITEM_IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayList_At___(void * jarg1, unsigned int jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXDisplayList *arg1 = (adlx::IADLXDisplayList *) 0 ;
  adlx_uint arg2 ;
  adlx::IADLXDisplay **arg3 = (adlx::IADLXDisplay **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayList *)jarg1; 
  arg2 = (adlx_uint)jarg2; 
  arg3 = (adlx::IADLXDisplay **)jarg3; 
  result = (ADLX_RESULT)(arg1)->At(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayList_Add_Back___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplayList *arg1 = (adlx::IADLXDisplayList *) 0 ;
  adlx::IADLXDisplay *arg2 = (adlx::IADLXDisplay *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayList *)jarg1; 
  arg2 = (adlx::IADLXDisplay *)jarg2; 
  result = (ADLX_RESULT)(arg1)->Add_Back(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXDisplayList___(void * jarg1) {
  adlx::IADLXDisplayList *arg1 = (adlx::IADLXDisplayList *) 0 ;
  
  arg1 = (adlx::IADLXDisplayList *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayListChangedListener_OnDisplayListChanged___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  adlx::IADLXDisplayListChangedListener *arg1 = (adlx::IADLXDisplayListChangedListener *) 0 ;
  adlx::IADLXDisplayList *arg2 = (adlx::IADLXDisplayList *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplayListChangedListener *)jarg1; 
  arg2 = (adlx::IADLXDisplayList *)jarg2; 
  result = (adlx_bool)(arg1)->OnDisplayListChanged(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_IADLXDisplayListChangedListener___() {
  void * jresult ;
  adlx::IADLXDisplayListChangedListener *result = 0 ;
  
  result = (adlx::IADLXDisplayListChangedListener *)new SwigDirector_IADLXDisplayListChangedListener();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXDisplayListChangedListener___(void * jarg1) {
  adlx::IADLXDisplayListChangedListener *arg1 = (adlx::IADLXDisplayListChangedListener *) 0 ;
  
  arg1 = (adlx::IADLXDisplayListChangedListener *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayListChangedListener_director_connect___(void *objarg, SwigDirector_IADLXDisplayListChangedListener::SWIG_Callback0_t callback0) {
  adlx::IADLXDisplayListChangedListener *obj = (adlx::IADLXDisplayListChangedListener *)objarg;
  SwigDirector_IADLXDisplayListChangedListener *director = static_cast<SwigDirector_IADLXDisplayListChangedListener *>(obj);
  director->swig_connect_director(callback0);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayGamutChangedEvent_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXDisplayGamutChangedEvent::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayGamutChangedEvent_GetDisplay___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplayGamutChangedEvent *arg1 = (adlx::IADLXDisplayGamutChangedEvent *) 0 ;
  adlx::IADLXDisplay **arg2 = (adlx::IADLXDisplay **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayGamutChangedEvent *)jarg1; 
  arg2 = (adlx::IADLXDisplay **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetDisplay(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayGamutChangedEvent_IsWhitePointChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplayGamutChangedEvent *arg1 = (adlx::IADLXDisplayGamutChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplayGamutChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsWhitePointChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayGamutChangedEvent_IsColorSpaceChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplayGamutChangedEvent *arg1 = (adlx::IADLXDisplayGamutChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplayGamutChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsColorSpaceChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXDisplayGamutChangedEvent___(void * jarg1) {
  adlx::IADLXDisplayGamutChangedEvent *arg1 = (adlx::IADLXDisplayGamutChangedEvent *) 0 ;
  
  arg1 = (adlx::IADLXDisplayGamutChangedEvent *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayGamutChangedListener_OnDisplayGamutChanged___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  adlx::IADLXDisplayGamutChangedListener *arg1 = (adlx::IADLXDisplayGamutChangedListener *) 0 ;
  adlx::IADLXDisplayGamutChangedEvent *arg2 = (adlx::IADLXDisplayGamutChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplayGamutChangedListener *)jarg1; 
  arg2 = (adlx::IADLXDisplayGamutChangedEvent *)jarg2; 
  result = (adlx_bool)(arg1)->OnDisplayGamutChanged(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXDisplayGamutChangedListener___(void * jarg1) {
  adlx::IADLXDisplayGamutChangedListener *arg1 = (adlx::IADLXDisplayGamutChangedListener *) 0 ;
  
  arg1 = (adlx::IADLXDisplayGamutChangedListener *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayGammaChangedEvent_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXDisplayGammaChangedEvent::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayGammaChangedEvent_GetDisplay___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplayGammaChangedEvent *arg1 = (adlx::IADLXDisplayGammaChangedEvent *) 0 ;
  adlx::IADLXDisplay **arg2 = (adlx::IADLXDisplay **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayGammaChangedEvent *)jarg1; 
  arg2 = (adlx::IADLXDisplay **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetDisplay(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayGammaChangedEvent_IsGammaRampChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplayGammaChangedEvent *arg1 = (adlx::IADLXDisplayGammaChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplayGammaChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsGammaRampChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayGammaChangedEvent_IsGammaCoefficientChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplayGammaChangedEvent *arg1 = (adlx::IADLXDisplayGammaChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplayGammaChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsGammaCoefficientChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayGammaChangedEvent_IsReGammaChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplayGammaChangedEvent *arg1 = (adlx::IADLXDisplayGammaChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplayGammaChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsReGammaChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayGammaChangedEvent_IsDeGammaChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplayGammaChangedEvent *arg1 = (adlx::IADLXDisplayGammaChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplayGammaChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsDeGammaChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXDisplayGammaChangedEvent___(void * jarg1) {
  adlx::IADLXDisplayGammaChangedEvent *arg1 = (adlx::IADLXDisplayGammaChangedEvent *) 0 ;
  
  arg1 = (adlx::IADLXDisplayGammaChangedEvent *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayGammaChangedListener_OnDisplayGammaChanged___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  adlx::IADLXDisplayGammaChangedListener *arg1 = (adlx::IADLXDisplayGammaChangedListener *) 0 ;
  adlx::IADLXDisplayGammaChangedEvent *arg2 = (adlx::IADLXDisplayGammaChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplayGammaChangedListener *)jarg1; 
  arg2 = (adlx::IADLXDisplayGammaChangedEvent *)jarg2; 
  result = (adlx_bool)(arg1)->OnDisplayGammaChanged(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXDisplayGammaChangedListener___(void * jarg1) {
  adlx::IADLXDisplayGammaChangedListener *arg1 = (adlx::IADLXDisplayGammaChangedListener *) 0 ;
  
  arg1 = (adlx::IADLXDisplayGammaChangedListener *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplay3DLUTChangedEvent_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXDisplay3DLUTChangedEvent::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplay3DLUTChangedEvent_GetDisplay___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplay3DLUTChangedEvent *arg1 = (adlx::IADLXDisplay3DLUTChangedEvent *) 0 ;
  adlx::IADLXDisplay **arg2 = (adlx::IADLXDisplay **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplay3DLUTChangedEvent *)jarg1; 
  arg2 = (adlx::IADLXDisplay **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetDisplay(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplay3DLUTChangedEvent_IsSCEChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplay3DLUTChangedEvent *arg1 = (adlx::IADLXDisplay3DLUTChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplay3DLUTChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsSCEChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplay3DLUTChangedEvent_IsCustom3DLUTChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplay3DLUTChangedEvent *arg1 = (adlx::IADLXDisplay3DLUTChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplay3DLUTChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsCustom3DLUTChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXDisplay3DLUTChangedEvent___(void * jarg1) {
  adlx::IADLXDisplay3DLUTChangedEvent *arg1 = (adlx::IADLXDisplay3DLUTChangedEvent *) 0 ;
  
  arg1 = (adlx::IADLXDisplay3DLUTChangedEvent *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplay3DLUTChangedListener_OnDisplay3DLUTChanged___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  adlx::IADLXDisplay3DLUTChangedListener *arg1 = (adlx::IADLXDisplay3DLUTChangedListener *) 0 ;
  adlx::IADLXDisplay3DLUTChangedEvent *arg2 = (adlx::IADLXDisplay3DLUTChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplay3DLUTChangedListener *)jarg1; 
  arg2 = (adlx::IADLXDisplay3DLUTChangedEvent *)jarg2; 
  result = (adlx_bool)(arg1)->OnDisplay3DLUTChanged(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXDisplay3DLUTChangedListener___(void * jarg1) {
  adlx::IADLXDisplay3DLUTChangedListener *arg1 = (adlx::IADLXDisplay3DLUTChangedListener *) 0 ;
  
  arg1 = (adlx::IADLXDisplay3DLUTChangedListener *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplaySettingsChangedEvent_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXDisplaySettingsChangedEvent::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplaySettingsChangedEvent_GetDisplay___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplaySettingsChangedEvent *arg1 = (adlx::IADLXDisplaySettingsChangedEvent *) 0 ;
  adlx::IADLXDisplay **arg2 = (adlx::IADLXDisplay **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedEvent *)jarg1; 
  arg2 = (adlx::IADLXDisplay **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetDisplay(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplaySettingsChangedEvent_IsFreeSyncChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplaySettingsChangedEvent *arg1 = (adlx::IADLXDisplaySettingsChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsFreeSyncChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplaySettingsChangedEvent_IsVSRChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplaySettingsChangedEvent *arg1 = (adlx::IADLXDisplaySettingsChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsVSRChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplaySettingsChangedEvent_IsGPUScalingChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplaySettingsChangedEvent *arg1 = (adlx::IADLXDisplaySettingsChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsGPUScalingChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplaySettingsChangedEvent_IsScalingModeChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplaySettingsChangedEvent *arg1 = (adlx::IADLXDisplaySettingsChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsScalingModeChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplaySettingsChangedEvent_IsIntegerScalingChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplaySettingsChangedEvent *arg1 = (adlx::IADLXDisplaySettingsChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsIntegerScalingChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplaySettingsChangedEvent_IsColorDepthChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplaySettingsChangedEvent *arg1 = (adlx::IADLXDisplaySettingsChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsColorDepthChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplaySettingsChangedEvent_IsPixelFormatChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplaySettingsChangedEvent *arg1 = (adlx::IADLXDisplaySettingsChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsPixelFormatChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplaySettingsChangedEvent_IsHDCPChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplaySettingsChangedEvent *arg1 = (adlx::IADLXDisplaySettingsChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsHDCPChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplaySettingsChangedEvent_IsCustomColorHueChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplaySettingsChangedEvent *arg1 = (adlx::IADLXDisplaySettingsChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsCustomColorHueChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplaySettingsChangedEvent_IsCustomColorSaturationChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplaySettingsChangedEvent *arg1 = (adlx::IADLXDisplaySettingsChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsCustomColorSaturationChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplaySettingsChangedEvent_IsCustomColorBrightnessChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplaySettingsChangedEvent *arg1 = (adlx::IADLXDisplaySettingsChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsCustomColorBrightnessChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplaySettingsChangedEvent_IsCustomColorTemperatureChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplaySettingsChangedEvent *arg1 = (adlx::IADLXDisplaySettingsChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsCustomColorTemperatureChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplaySettingsChangedEvent_IsCustomColorContrastChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplaySettingsChangedEvent *arg1 = (adlx::IADLXDisplaySettingsChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsCustomColorContrastChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplaySettingsChangedEvent_IsCustomResolutionChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplaySettingsChangedEvent *arg1 = (adlx::IADLXDisplaySettingsChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsCustomResolutionChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplaySettingsChangedEvent_IsVariBrightChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXDisplaySettingsChangedEvent *arg1 = (adlx::IADLXDisplaySettingsChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsVariBrightChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXDisplaySettingsChangedEvent___(void * jarg1) {
  adlx::IADLXDisplaySettingsChangedEvent *arg1 = (adlx::IADLXDisplaySettingsChangedEvent *) 0 ;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedEvent *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplaySettingsChangedListener_OnDisplaySettingsChanged___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  adlx::IADLXDisplaySettingsChangedListener *arg1 = (adlx::IADLXDisplaySettingsChangedListener *) 0 ;
  adlx::IADLXDisplaySettingsChangedEvent *arg2 = (adlx::IADLXDisplaySettingsChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedListener *)jarg1; 
  arg2 = (adlx::IADLXDisplaySettingsChangedEvent *)jarg2; 
  result = (adlx_bool)(arg1)->OnDisplaySettingsChanged(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXDisplaySettingsChangedListener___(void * jarg1) {
  adlx::IADLXDisplaySettingsChangedListener *arg1 = (adlx::IADLXDisplaySettingsChangedListener *) 0 ;
  
  arg1 = (adlx::IADLXDisplaySettingsChangedListener *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayChangedHandling_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXDisplayChangedHandling::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayChangedHandling_AddDisplayListEventListener___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplayChangedHandling *arg1 = (adlx::IADLXDisplayChangedHandling *) 0 ;
  adlx::IADLXDisplayListChangedListener *arg2 = (adlx::IADLXDisplayListChangedListener *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayChangedHandling *)jarg1; 
  arg2 = (adlx::IADLXDisplayListChangedListener *)jarg2; 
  result = (ADLX_RESULT)(arg1)->AddDisplayListEventListener(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayChangedHandling_RemoveDisplayListEventListener___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplayChangedHandling *arg1 = (adlx::IADLXDisplayChangedHandling *) 0 ;
  adlx::IADLXDisplayListChangedListener *arg2 = (adlx::IADLXDisplayListChangedListener *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayChangedHandling *)jarg1; 
  arg2 = (adlx::IADLXDisplayListChangedListener *)jarg2; 
  result = (ADLX_RESULT)(arg1)->RemoveDisplayListEventListener(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayChangedHandling_AddDisplayGamutEventListener___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplayChangedHandling *arg1 = (adlx::IADLXDisplayChangedHandling *) 0 ;
  adlx::IADLXDisplayGamutChangedListener *arg2 = (adlx::IADLXDisplayGamutChangedListener *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayChangedHandling *)jarg1; 
  arg2 = (adlx::IADLXDisplayGamutChangedListener *)jarg2; 
  result = (ADLX_RESULT)(arg1)->AddDisplayGamutEventListener(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayChangedHandling_RemoveDisplayGamutEventListener___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplayChangedHandling *arg1 = (adlx::IADLXDisplayChangedHandling *) 0 ;
  adlx::IADLXDisplayGamutChangedListener *arg2 = (adlx::IADLXDisplayGamutChangedListener *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayChangedHandling *)jarg1; 
  arg2 = (adlx::IADLXDisplayGamutChangedListener *)jarg2; 
  result = (ADLX_RESULT)(arg1)->RemoveDisplayGamutEventListener(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayChangedHandling_AddDisplayGammaEventListener___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplayChangedHandling *arg1 = (adlx::IADLXDisplayChangedHandling *) 0 ;
  adlx::IADLXDisplayGammaChangedListener *arg2 = (adlx::IADLXDisplayGammaChangedListener *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayChangedHandling *)jarg1; 
  arg2 = (adlx::IADLXDisplayGammaChangedListener *)jarg2; 
  result = (ADLX_RESULT)(arg1)->AddDisplayGammaEventListener(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayChangedHandling_RemoveDisplayGammaEventListener___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplayChangedHandling *arg1 = (adlx::IADLXDisplayChangedHandling *) 0 ;
  adlx::IADLXDisplayGammaChangedListener *arg2 = (adlx::IADLXDisplayGammaChangedListener *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayChangedHandling *)jarg1; 
  arg2 = (adlx::IADLXDisplayGammaChangedListener *)jarg2; 
  result = (ADLX_RESULT)(arg1)->RemoveDisplayGammaEventListener(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayChangedHandling_AddDisplay3DLUTEventListener___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplayChangedHandling *arg1 = (adlx::IADLXDisplayChangedHandling *) 0 ;
  adlx::IADLXDisplay3DLUTChangedListener *arg2 = (adlx::IADLXDisplay3DLUTChangedListener *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayChangedHandling *)jarg1; 
  arg2 = (adlx::IADLXDisplay3DLUTChangedListener *)jarg2; 
  result = (ADLX_RESULT)(arg1)->AddDisplay3DLUTEventListener(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayChangedHandling_RemoveDisplay3DLUTEventListener___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplayChangedHandling *arg1 = (adlx::IADLXDisplayChangedHandling *) 0 ;
  adlx::IADLXDisplay3DLUTChangedListener *arg2 = (adlx::IADLXDisplay3DLUTChangedListener *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayChangedHandling *)jarg1; 
  arg2 = (adlx::IADLXDisplay3DLUTChangedListener *)jarg2; 
  result = (ADLX_RESULT)(arg1)->RemoveDisplay3DLUTEventListener(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayChangedHandling_AddDisplaySettingsEventListener___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplayChangedHandling *arg1 = (adlx::IADLXDisplayChangedHandling *) 0 ;
  adlx::IADLXDisplaySettingsChangedListener *arg2 = (adlx::IADLXDisplaySettingsChangedListener *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayChangedHandling *)jarg1; 
  arg2 = (adlx::IADLXDisplaySettingsChangedListener *)jarg2; 
  result = (ADLX_RESULT)(arg1)->AddDisplaySettingsEventListener(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayChangedHandling_RemoveDisplaySettingsEventListener___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplayChangedHandling *arg1 = (adlx::IADLXDisplayChangedHandling *) 0 ;
  adlx::IADLXDisplaySettingsChangedListener *arg2 = (adlx::IADLXDisplaySettingsChangedListener *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayChangedHandling *)jarg1; 
  arg2 = (adlx::IADLXDisplaySettingsChangedListener *)jarg2; 
  result = (ADLX_RESULT)(arg1)->RemoveDisplaySettingsEventListener(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXDisplayChangedHandling___(void * jarg1) {
  adlx::IADLXDisplayChangedHandling *arg1 = (adlx::IADLXDisplayChangedHandling *) 0 ;
  
  arg1 = (adlx::IADLXDisplayChangedHandling *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXDisplayServices::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_GetNumberOfDisplays___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  adlx_uint *arg2 = (adlx_uint *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  arg2 = (adlx_uint *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetNumberOfDisplays(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_GetDisplays___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  adlx::IADLXDisplayList **arg2 = (adlx::IADLXDisplayList **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  arg2 = (adlx::IADLXDisplayList **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetDisplays(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_Get3DLUT___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  adlx::IADLXDisplay *arg2 = (adlx::IADLXDisplay *) 0 ;
  adlx::IADLXDisplay3DLUT **arg3 = (adlx::IADLXDisplay3DLUT **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  arg2 = (adlx::IADLXDisplay *)jarg2; 
  arg3 = (adlx::IADLXDisplay3DLUT **)jarg3; 
  result = (ADLX_RESULT)(arg1)->Get3DLUT(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_GetGamut___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  adlx::IADLXDisplay *arg2 = (adlx::IADLXDisplay *) 0 ;
  adlx::IADLXDisplayGamut **arg3 = (adlx::IADLXDisplayGamut **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  arg2 = (adlx::IADLXDisplay *)jarg2; 
  arg3 = (adlx::IADLXDisplayGamut **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetGamut(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_GetGamma___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  adlx::IADLXDisplay *arg2 = (adlx::IADLXDisplay *) 0 ;
  adlx::IADLXDisplayGamma **arg3 = (adlx::IADLXDisplayGamma **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  arg2 = (adlx::IADLXDisplay *)jarg2; 
  arg3 = (adlx::IADLXDisplayGamma **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetGamma(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_GetDisplayChangedHandling___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  adlx::IADLXDisplayChangedHandling **arg2 = (adlx::IADLXDisplayChangedHandling **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  arg2 = (adlx::IADLXDisplayChangedHandling **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetDisplayChangedHandling(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_GetFreeSync___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  adlx::IADLXDisplay *arg2 = (adlx::IADLXDisplay *) 0 ;
  adlx::IADLXDisplayFreeSync **arg3 = (adlx::IADLXDisplayFreeSync **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  arg2 = (adlx::IADLXDisplay *)jarg2; 
  arg3 = (adlx::IADLXDisplayFreeSync **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetFreeSync(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_GetVirtualSuperResolution___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  adlx::IADLXDisplay *arg2 = (adlx::IADLXDisplay *) 0 ;
  adlx::IADLXDisplayVSR **arg3 = (adlx::IADLXDisplayVSR **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  arg2 = (adlx::IADLXDisplay *)jarg2; 
  arg3 = (adlx::IADLXDisplayVSR **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetVirtualSuperResolution(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_GetGPUScaling___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  adlx::IADLXDisplay *arg2 = (adlx::IADLXDisplay *) 0 ;
  adlx::IADLXDisplayGPUScaling **arg3 = (adlx::IADLXDisplayGPUScaling **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  arg2 = (adlx::IADLXDisplay *)jarg2; 
  arg3 = (adlx::IADLXDisplayGPUScaling **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetGPUScaling(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_GetScalingMode___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  adlx::IADLXDisplay *arg2 = (adlx::IADLXDisplay *) 0 ;
  adlx::IADLXDisplayScalingMode **arg3 = (adlx::IADLXDisplayScalingMode **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  arg2 = (adlx::IADLXDisplay *)jarg2; 
  arg3 = (adlx::IADLXDisplayScalingMode **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetScalingMode(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_GetIntegerScaling___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  adlx::IADLXDisplay *arg2 = (adlx::IADLXDisplay *) 0 ;
  adlx::IADLXDisplayIntegerScaling **arg3 = (adlx::IADLXDisplayIntegerScaling **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  arg2 = (adlx::IADLXDisplay *)jarg2; 
  arg3 = (adlx::IADLXDisplayIntegerScaling **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetIntegerScaling(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_GetColorDepth___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  adlx::IADLXDisplay *arg2 = (adlx::IADLXDisplay *) 0 ;
  adlx::IADLXDisplayColorDepth **arg3 = (adlx::IADLXDisplayColorDepth **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  arg2 = (adlx::IADLXDisplay *)jarg2; 
  arg3 = (adlx::IADLXDisplayColorDepth **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetColorDepth(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_GetPixelFormat___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  adlx::IADLXDisplay *arg2 = (adlx::IADLXDisplay *) 0 ;
  adlx::IADLXDisplayPixelFormat **arg3 = (adlx::IADLXDisplayPixelFormat **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  arg2 = (adlx::IADLXDisplay *)jarg2; 
  arg3 = (adlx::IADLXDisplayPixelFormat **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetPixelFormat(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_GetCustomColor___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  adlx::IADLXDisplay *arg2 = (adlx::IADLXDisplay *) 0 ;
  adlx::IADLXDisplayCustomColor **arg3 = (adlx::IADLXDisplayCustomColor **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  arg2 = (adlx::IADLXDisplay *)jarg2; 
  arg3 = (adlx::IADLXDisplayCustomColor **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetCustomColor(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_GetHDCP___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  adlx::IADLXDisplay *arg2 = (adlx::IADLXDisplay *) 0 ;
  adlx::IADLXDisplayHDCP **arg3 = (adlx::IADLXDisplayHDCP **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  arg2 = (adlx::IADLXDisplay *)jarg2; 
  arg3 = (adlx::IADLXDisplayHDCP **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetHDCP(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_GetCustomResolution___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  adlx::IADLXDisplay *arg2 = (adlx::IADLXDisplay *) 0 ;
  adlx::IADLXDisplayCustomResolution **arg3 = (adlx::IADLXDisplayCustomResolution **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  arg2 = (adlx::IADLXDisplay *)jarg2; 
  arg3 = (adlx::IADLXDisplayCustomResolution **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetCustomResolution(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_GetVariBright___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  adlx::IADLXDisplay *arg2 = (adlx::IADLXDisplay *) 0 ;
  adlx::IADLXDisplayVariBright **arg3 = (adlx::IADLXDisplayVariBright **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  arg2 = (adlx::IADLXDisplay *)jarg2; 
  arg3 = (adlx::IADLXDisplayVariBright **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetVariBright(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXDisplayServices___(void * jarg1) {
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPU_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXGPU::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPU_VendorId___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPU *arg1 = (adlx::IADLXGPU *) 0 ;
  char **arg2 = (char **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPU *)jarg1; 
  arg2 = (char **)jarg2; 
  result = (ADLX_RESULT)(arg1)->VendorId((char const **)arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPU_ASICFamilyType___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPU *arg1 = (adlx::IADLXGPU *) 0 ;
  ADLX_ASIC_FAMILY_TYPE *arg2 = (ADLX_ASIC_FAMILY_TYPE *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPU *)jarg1; 
  arg2 = (ADLX_ASIC_FAMILY_TYPE *)jarg2; 
  result = (ADLX_RESULT)((adlx::IADLXGPU const *)arg1)->ASICFamilyType(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPU_Type___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPU *arg1 = (adlx::IADLXGPU *) 0 ;
  ADLX_GPU_TYPE *arg2 = (ADLX_GPU_TYPE *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPU *)jarg1; 
  arg2 = (ADLX_GPU_TYPE *)jarg2; 
  result = (ADLX_RESULT)((adlx::IADLXGPU const *)arg1)->Type(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPU_IsExternal___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPU *arg1 = (adlx::IADLXGPU *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPU *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)((adlx::IADLXGPU const *)arg1)->IsExternal(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPU_Name___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPU *arg1 = (adlx::IADLXGPU *) 0 ;
  char **arg2 = (char **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPU *)jarg1; 
  arg2 = (char **)jarg2; 
  result = (ADLX_RESULT)((adlx::IADLXGPU const *)arg1)->Name((char const **)arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPU_DriverPath___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPU *arg1 = (adlx::IADLXGPU *) 0 ;
  char **arg2 = (char **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPU *)jarg1; 
  arg2 = (char **)jarg2; 
  result = (ADLX_RESULT)((adlx::IADLXGPU const *)arg1)->DriverPath((char const **)arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPU_PNPString___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPU *arg1 = (adlx::IADLXGPU *) 0 ;
  char **arg2 = (char **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPU *)jarg1; 
  arg2 = (char **)jarg2; 
  result = (ADLX_RESULT)((adlx::IADLXGPU const *)arg1)->PNPString((char const **)arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPU_HasDesktops___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPU *arg1 = (adlx::IADLXGPU *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPU *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)((adlx::IADLXGPU const *)arg1)->HasDesktops(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPU_TotalVRAM___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPU *arg1 = (adlx::IADLXGPU *) 0 ;
  adlx_uint *arg2 = (adlx_uint *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPU *)jarg1; 
  arg2 = (adlx_uint *)jarg2; 
  result = (ADLX_RESULT)(arg1)->TotalVRAM(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPU_VRAMType___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPU *arg1 = (adlx::IADLXGPU *) 0 ;
  char **arg2 = (char **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPU *)jarg1; 
  arg2 = (char **)jarg2; 
  result = (ADLX_RESULT)(arg1)->VRAMType((char const **)arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPU_BIOSInfo___(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  int jresult ;
  adlx::IADLXGPU *arg1 = (adlx::IADLXGPU *) 0 ;
  char **arg2 = (char **) 0 ;
  char **arg3 = (char **) 0 ;
  char **arg4 = (char **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPU *)jarg1; 
  arg2 = (char **)jarg2; 
  arg3 = (char **)jarg3; 
  arg4 = (char **)jarg4; 
  result = (ADLX_RESULT)(arg1)->BIOSInfo((char const **)arg2,(char const **)arg3,(char const **)arg4);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPU_DeviceId___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPU *arg1 = (adlx::IADLXGPU *) 0 ;
  char **arg2 = (char **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPU *)jarg1; 
  arg2 = (char **)jarg2; 
  result = (ADLX_RESULT)(arg1)->DeviceId((char const **)arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPU_RevisionId___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPU *arg1 = (adlx::IADLXGPU *) 0 ;
  char **arg2 = (char **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPU *)jarg1; 
  arg2 = (char **)jarg2; 
  result = (ADLX_RESULT)(arg1)->RevisionId((char const **)arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPU_SubSystemId___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPU *arg1 = (adlx::IADLXGPU *) 0 ;
  char **arg2 = (char **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPU *)jarg1; 
  arg2 = (char **)jarg2; 
  result = (ADLX_RESULT)(arg1)->SubSystemId((char const **)arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPU_SubSystemVendorId___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPU *arg1 = (adlx::IADLXGPU *) 0 ;
  char **arg2 = (char **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPU *)jarg1; 
  arg2 = (char **)jarg2; 
  result = (ADLX_RESULT)(arg1)->SubSystemVendorId((char const **)arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPU_UniqueId___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPU *arg1 = (adlx::IADLXGPU *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPU *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->UniqueId(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXGPU___(void * jarg1) {
  adlx::IADLXGPU *arg1 = (adlx::IADLXGPU *) 0 ;
  
  arg1 = (adlx::IADLXGPU *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUList_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXGPUList::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUList_ITEM_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXGPUList::ITEM_IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUList_At___(void * jarg1, unsigned int jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUList *arg1 = (adlx::IADLXGPUList *) 0 ;
  adlx_uint arg2 ;
  adlx::IADLXGPU **arg3 = (adlx::IADLXGPU **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUList *)jarg1; 
  arg2 = (adlx_uint)jarg2; 
  arg3 = (adlx::IADLXGPU **)jarg3; 
  result = (ADLX_RESULT)(arg1)->At(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUList_Add_Back___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUList *arg1 = (adlx::IADLXGPUList *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUList *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  result = (ADLX_RESULT)(arg1)->Add_Back(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXGPUList___(void * jarg1) {
  adlx::IADLXGPUList *arg1 = (adlx::IADLXGPUList *) 0 ;
  
  arg1 = (adlx::IADLXGPUList *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUsEventListener_OnGPUListChanged___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  adlx::IADLXGPUsEventListener *arg1 = (adlx::IADLXGPUsEventListener *) 0 ;
  adlx::IADLXGPUList *arg2 = (adlx::IADLXGPUList *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXGPUsEventListener *)jarg1; 
  arg2 = (adlx::IADLXGPUList *)jarg2; 
  result = (adlx_bool)(arg1)->OnGPUListChanged(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXGPUsEventListener___(void * jarg1) {
  adlx::IADLXGPUsEventListener *arg1 = (adlx::IADLXGPUsEventListener *) 0 ;
  
  arg1 = (adlx::IADLXGPUsEventListener *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUsChangedHandling_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXGPUsChangedHandling::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUsChangedHandling_AddGPUsListEventListener___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUsChangedHandling *arg1 = (adlx::IADLXGPUsChangedHandling *) 0 ;
  adlx::IADLXGPUsEventListener *arg2 = (adlx::IADLXGPUsEventListener *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUsChangedHandling *)jarg1; 
  arg2 = (adlx::IADLXGPUsEventListener *)jarg2; 
  result = (ADLX_RESULT)(arg1)->AddGPUsListEventListener(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUsChangedHandling_RemoveGPUsListEventListener___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUsChangedHandling *arg1 = (adlx::IADLXGPUsChangedHandling *) 0 ;
  adlx::IADLXGPUsEventListener *arg2 = (adlx::IADLXGPUsEventListener *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUsChangedHandling *)jarg1; 
  arg2 = (adlx::IADLXGPUsEventListener *)jarg2; 
  result = (ADLX_RESULT)(arg1)->RemoveGPUsListEventListener(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXGPUsChangedHandling___(void * jarg1) {
  adlx::IADLXGPUsChangedHandling *arg1 = (adlx::IADLXGPUsChangedHandling *) 0 ;
  
  arg1 = (adlx::IADLXGPUsChangedHandling *)jarg1; 
  delete arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystem_HybridGraphicsType___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXSystem *arg1 = (adlx::IADLXSystem *) 0 ;
  ADLX_HG_TYPE *arg2 = (ADLX_HG_TYPE *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystem *)jarg1; 
  arg2 = (ADLX_HG_TYPE *)jarg2; 
  result = (ADLX_RESULT)(arg1)->HybridGraphicsType(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystem_GetGPUs___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXSystem *arg1 = (adlx::IADLXSystem *) 0 ;
  adlx::IADLXGPUList **arg2 = (adlx::IADLXGPUList **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystem *)jarg1; 
  arg2 = (adlx::IADLXGPUList **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetGPUs(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystem_QueryInterface___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXSystem *arg1 = (adlx::IADLXSystem *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  void **arg3 = (void **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystem *)jarg1; 
  arg2 = (wchar_t *)jarg2; 
  arg3 = (void **)jarg3; 
  result = (ADLX_RESULT)(arg1)->QueryInterface((wchar_t const *)arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystem_GetDisplaysServices___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXSystem *arg1 = (adlx::IADLXSystem *) 0 ;
  adlx::IADLXDisplayServices **arg2 = (adlx::IADLXDisplayServices **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystem *)jarg1; 
  arg2 = (adlx::IADLXDisplayServices **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetDisplaysServices(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystem_GetDesktopsServices___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXSystem *arg1 = (adlx::IADLXSystem *) 0 ;
  adlx::IADLXDesktopServices **arg2 = (adlx::IADLXDesktopServices **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystem *)jarg1; 
  arg2 = (adlx::IADLXDesktopServices **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetDesktopsServices(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystem_GetGPUsChangedHandling___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXSystem *arg1 = (adlx::IADLXSystem *) 0 ;
  adlx::IADLXGPUsChangedHandling **arg2 = (adlx::IADLXGPUsChangedHandling **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystem *)jarg1; 
  arg2 = (adlx::IADLXGPUsChangedHandling **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetGPUsChangedHandling(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystem_EnableLog___(void * jarg1, int jarg2, int jarg3, void * jarg4, void * jarg5) {
  int jresult ;
  adlx::IADLXSystem *arg1 = (adlx::IADLXSystem *) 0 ;
  ADLX_LOG_DESTINATION arg2 ;
  ADLX_LOG_SEVERITY arg3 ;
  adlx::IADLXLog *arg4 = (adlx::IADLXLog *) 0 ;
  wchar_t *arg5 = (wchar_t *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystem *)jarg1; 
  arg2 = (ADLX_LOG_DESTINATION)jarg2; 
  arg3 = (ADLX_LOG_SEVERITY)jarg3; 
  arg4 = (adlx::IADLXLog *)jarg4; 
  arg5 = (wchar_t *)jarg5; 
  result = (ADLX_RESULT)(arg1)->EnableLog(arg2,arg3,arg4,(wchar_t const *)arg5);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystem_Get3DSettingsServices___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXSystem *arg1 = (adlx::IADLXSystem *) 0 ;
  adlx::IADLX3DSettingsServices **arg2 = (adlx::IADLX3DSettingsServices **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystem *)jarg1; 
  arg2 = (adlx::IADLX3DSettingsServices **)jarg2; 
  result = (ADLX_RESULT)(arg1)->Get3DSettingsServices(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystem_GetGPUTuningServices___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXSystem *arg1 = (adlx::IADLXSystem *) 0 ;
  adlx::IADLXGPUTuningServices **arg2 = (adlx::IADLXGPUTuningServices **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystem *)jarg1; 
  arg2 = (adlx::IADLXGPUTuningServices **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetGPUTuningServices(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystem_GetPerformanceMonitoringServices___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXSystem *arg1 = (adlx::IADLXSystem *) 0 ;
  adlx::IADLXPerformanceMonitoringServices **arg2 = (adlx::IADLXPerformanceMonitoringServices **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystem *)jarg1; 
  arg2 = (adlx::IADLXPerformanceMonitoringServices **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetPerformanceMonitoringServices(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystem_TotalSystemRAM___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXSystem *arg1 = (adlx::IADLXSystem *) 0 ;
  adlx_uint *arg2 = (adlx_uint *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystem *)jarg1; 
  arg2 = (adlx_uint *)jarg2; 
  result = (ADLX_RESULT)(arg1)->TotalSystemRAM(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystem_GetI2C___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXSystem *arg1 = (adlx::IADLXSystem *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx::IADLXI2C **arg3 = (adlx::IADLXI2C **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystem *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx::IADLXI2C **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetI2C(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXSystem___(void * jarg1) {
  adlx::IADLXSystem *arg1 = (adlx::IADLXSystem *) 0 ;
  
  arg1 = (adlx::IADLXSystem *)jarg1; 
  delete arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLMapping_GetADLXGPUFromBdf___(void * jarg1, int jarg2, int jarg3, int jarg4, void * jarg5) {
  int jresult ;
  adlx::IADLMapping *arg1 = (adlx::IADLMapping *) 0 ;
  adlx_int arg2 ;
  adlx_int arg3 ;
  adlx_int arg4 ;
  adlx::IADLXGPU **arg5 = (adlx::IADLXGPU **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLMapping *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  arg3 = (adlx_int)jarg3; 
  arg4 = (adlx_int)jarg4; 
  arg5 = (adlx::IADLXGPU **)jarg5; 
  result = (ADLX_RESULT)(arg1)->GetADLXGPUFromBdf(arg2,arg3,arg4,arg5);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLMapping_GetADLXGPUFromAdlAdapterIndex___(void * jarg1, int jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLMapping *arg1 = (adlx::IADLMapping *) 0 ;
  adlx_int arg2 ;
  adlx::IADLXGPU **arg3 = (adlx::IADLXGPU **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLMapping *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  arg3 = (adlx::IADLXGPU **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetADLXGPUFromAdlAdapterIndex(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLMapping_BdfFromADLXGPU___(void * jarg1, void * jarg2, void * jarg3, void * jarg4, void * jarg5) {
  int jresult ;
  adlx::IADLMapping *arg1 = (adlx::IADLMapping *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  adlx_int *arg4 = (adlx_int *) 0 ;
  adlx_int *arg5 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLMapping *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  arg4 = (adlx_int *)jarg4; 
  arg5 = (adlx_int *)jarg5; 
  result = (ADLX_RESULT)(arg1)->BdfFromADLXGPU(arg2,arg3,arg4,arg5);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLMapping_AdlAdapterIndexFromADLXGPU___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLMapping *arg1 = (adlx::IADLMapping *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLMapping *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)(arg1)->AdlAdapterIndexFromADLXGPU(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLMapping_GetADLXDisplayFromADLIds___(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, void * jarg7) {
  int jresult ;
  adlx::IADLMapping *arg1 = (adlx::IADLMapping *) 0 ;
  adlx_int arg2 ;
  adlx_int arg3 ;
  adlx_int arg4 ;
  adlx_int arg5 ;
  adlx_int arg6 ;
  adlx::IADLXDisplay **arg7 = (adlx::IADLXDisplay **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLMapping *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  arg3 = (adlx_int)jarg3; 
  arg4 = (adlx_int)jarg4; 
  arg5 = (adlx_int)jarg5; 
  arg6 = (adlx_int)jarg6; 
  arg7 = (adlx::IADLXDisplay **)jarg7; 
  result = (ADLX_RESULT)(arg1)->GetADLXDisplayFromADLIds(arg2,arg3,arg4,arg5,arg6,arg7);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLMapping_ADLIdsFromADLXDisplay___(void * jarg1, void * jarg2, void * jarg3, void * jarg4, void * jarg5, void * jarg6, void * jarg7) {
  int jresult ;
  adlx::IADLMapping *arg1 = (adlx::IADLMapping *) 0 ;
  adlx::IADLXDisplay *arg2 = (adlx::IADLXDisplay *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  adlx_int *arg4 = (adlx_int *) 0 ;
  adlx_int *arg5 = (adlx_int *) 0 ;
  adlx_int *arg6 = (adlx_int *) 0 ;
  adlx_int *arg7 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLMapping *)jarg1; 
  arg2 = (adlx::IADLXDisplay *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  arg4 = (adlx_int *)jarg4; 
  arg5 = (adlx_int *)jarg5; 
  arg6 = (adlx_int *)jarg6; 
  arg7 = (adlx_int *)jarg7; 
  result = (ADLX_RESULT)(arg1)->ADLIdsFromADLXDisplay(arg2,arg3,arg4,arg5,arg6,arg7);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLMapping_GetADLXDesktopFromADLIds___(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, void * jarg7) {
  int jresult ;
  adlx::IADLMapping *arg1 = (adlx::IADLMapping *) 0 ;
  adlx_int arg2 ;
  adlx_int arg3 ;
  adlx_int arg4 ;
  adlx_int arg5 ;
  adlx_int arg6 ;
  adlx::IADLXDesktop **arg7 = (adlx::IADLXDesktop **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLMapping *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  arg3 = (adlx_int)jarg3; 
  arg4 = (adlx_int)jarg4; 
  arg5 = (adlx_int)jarg5; 
  arg6 = (adlx_int)jarg6; 
  arg7 = (adlx::IADLXDesktop **)jarg7; 
  result = (ADLX_RESULT)(arg1)->GetADLXDesktopFromADLIds(arg2,arg3,arg4,arg5,arg6,arg7);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLMapping_ADLIdsFromADLXDesktop___(void * jarg1, void * jarg2, void * jarg3, void * jarg4, void * jarg5, void * jarg6, void * jarg7) {
  int jresult ;
  adlx::IADLMapping *arg1 = (adlx::IADLMapping *) 0 ;
  adlx::IADLXDesktop *arg2 = (adlx::IADLXDesktop *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  adlx_int *arg4 = (adlx_int *) 0 ;
  adlx_int *arg5 = (adlx_int *) 0 ;
  adlx_int *arg6 = (adlx_int *) 0 ;
  adlx_int *arg7 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLMapping *)jarg1; 
  arg2 = (adlx::IADLXDesktop *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  arg4 = (adlx_int *)jarg4; 
  arg5 = (adlx_int *)jarg5; 
  arg6 = (adlx_int *)jarg6; 
  arg7 = (adlx_int *)jarg7; 
  result = (ADLX_RESULT)(arg1)->ADLIdsFromADLXDesktop(arg2,arg3,arg4,arg5,arg6,arg7);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLMapping___(void * jarg1) {
  adlx::IADLMapping *arg1 = (adlx::IADLMapping *) 0 ;
  
  arg1 = (adlx::IADLMapping *)jarg1; 
  delete arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXLog_WriteLog___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXLog *arg1 = (adlx::IADLXLog *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXLog *)jarg1; 
  arg2 = (wchar_t *)jarg2; 
  result = (ADLX_RESULT)(arg1)->WriteLog((wchar_t const *)arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXLog___(void * jarg1) {
  adlx::IADLXLog *arg1 = (adlx::IADLXLog *) 0 ;
  
  arg1 = (adlx::IADLXLog *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualTuningState_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXManualTuningState::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualTuningState_GetFrequency___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualTuningState *arg1 = (adlx::IADLXManualTuningState *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualTuningState *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetFrequency(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualTuningState_SetFrequency___(void * jarg1, int jarg2) {
  int jresult ;
  adlx::IADLXManualTuningState *arg1 = (adlx::IADLXManualTuningState *) 0 ;
  adlx_int arg2 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualTuningState *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetFrequency(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualTuningState_GetVoltage___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualTuningState *arg1 = (adlx::IADLXManualTuningState *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualTuningState *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetVoltage(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualTuningState_SetVoltage___(void * jarg1, int jarg2) {
  int jresult ;
  adlx::IADLXManualTuningState *arg1 = (adlx::IADLXManualTuningState *) 0 ;
  adlx_int arg2 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualTuningState *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetVoltage(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXManualTuningState___(void * jarg1) {
  adlx::IADLXManualTuningState *arg1 = (adlx::IADLXManualTuningState *) 0 ;
  
  arg1 = (adlx::IADLXManualTuningState *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXMemoryTimingDescription_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXMemoryTimingDescription::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXMemoryTimingDescription_GetDescription___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXMemoryTimingDescription *arg1 = (adlx::IADLXMemoryTimingDescription *) 0 ;
  ADLX_MEMORYTIMING_DESCRIPTION *arg2 = (ADLX_MEMORYTIMING_DESCRIPTION *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXMemoryTimingDescription *)jarg1; 
  arg2 = (ADLX_MEMORYTIMING_DESCRIPTION *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetDescription(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXMemoryTimingDescription___(void * jarg1) {
  adlx::IADLXMemoryTimingDescription *arg1 = (adlx::IADLXMemoryTimingDescription *) 0 ;
  
  arg1 = (adlx::IADLXMemoryTimingDescription *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualTuningStateList_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXManualTuningStateList::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualTuningStateList_ITEM_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXManualTuningStateList::ITEM_IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualTuningStateList_At___(void * jarg1, unsigned int jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXManualTuningStateList *arg1 = (adlx::IADLXManualTuningStateList *) 0 ;
  adlx_uint arg2 ;
  adlx::IADLXManualTuningState **arg3 = (adlx::IADLXManualTuningState **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualTuningStateList *)jarg1; 
  arg2 = (adlx_uint)jarg2; 
  arg3 = (adlx::IADLXManualTuningState **)jarg3; 
  result = (ADLX_RESULT)(arg1)->At(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualTuningStateList_Add_Back___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualTuningStateList *arg1 = (adlx::IADLXManualTuningStateList *) 0 ;
  adlx::IADLXManualTuningState *arg2 = (adlx::IADLXManualTuningState *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualTuningStateList *)jarg1; 
  arg2 = (adlx::IADLXManualTuningState *)jarg2; 
  result = (ADLX_RESULT)(arg1)->Add_Back(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXManualTuningStateList___(void * jarg1) {
  adlx::IADLXManualTuningStateList *arg1 = (adlx::IADLXManualTuningStateList *) 0 ;
  
  arg1 = (adlx::IADLXManualTuningStateList *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXMemoryTimingDescriptionList_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXMemoryTimingDescriptionList::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXMemoryTimingDescriptionList_ITEM_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXMemoryTimingDescriptionList::ITEM_IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXMemoryTimingDescriptionList_At___(void * jarg1, unsigned int jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXMemoryTimingDescriptionList *arg1 = (adlx::IADLXMemoryTimingDescriptionList *) 0 ;
  adlx_uint arg2 ;
  adlx::IADLXMemoryTimingDescription **arg3 = (adlx::IADLXMemoryTimingDescription **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXMemoryTimingDescriptionList *)jarg1; 
  arg2 = (adlx_uint)jarg2; 
  arg3 = (adlx::IADLXMemoryTimingDescription **)jarg3; 
  result = (ADLX_RESULT)(arg1)->At(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXMemoryTimingDescriptionList_Add_Back___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXMemoryTimingDescriptionList *arg1 = (adlx::IADLXMemoryTimingDescriptionList *) 0 ;
  adlx::IADLXMemoryTimingDescription *arg2 = (adlx::IADLXMemoryTimingDescription *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXMemoryTimingDescriptionList *)jarg1; 
  arg2 = (adlx::IADLXMemoryTimingDescription *)jarg2; 
  result = (ADLX_RESULT)(arg1)->Add_Back(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXMemoryTimingDescriptionList___(void * jarg1) {
  adlx::IADLXMemoryTimingDescriptionList *arg1 = (adlx::IADLXMemoryTimingDescriptionList *) 0 ;
  
  arg1 = (adlx::IADLXMemoryTimingDescriptionList *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningChangedEvent_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXGPUTuningChangedEvent::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningChangedEvent_GetGPU___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUTuningChangedEvent *arg1 = (adlx::IADLXGPUTuningChangedEvent *) 0 ;
  adlx::IADLXGPU **arg2 = (adlx::IADLXGPU **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUTuningChangedEvent *)jarg1; 
  arg2 = (adlx::IADLXGPU **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetGPU(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningChangedEvent_IsAutomaticTuningChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXGPUTuningChangedEvent *arg1 = (adlx::IADLXGPUTuningChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXGPUTuningChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsAutomaticTuningChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningChangedEvent_IsPresetTuningChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXGPUTuningChangedEvent *arg1 = (adlx::IADLXGPUTuningChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXGPUTuningChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsPresetTuningChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningChangedEvent_IsManualGPUCLKTuningChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXGPUTuningChangedEvent *arg1 = (adlx::IADLXGPUTuningChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXGPUTuningChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsManualGPUCLKTuningChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningChangedEvent_IsManualVRAMTuningChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXGPUTuningChangedEvent *arg1 = (adlx::IADLXGPUTuningChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXGPUTuningChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsManualVRAMTuningChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningChangedEvent_IsManualFanTuningChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXGPUTuningChangedEvent *arg1 = (adlx::IADLXGPUTuningChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXGPUTuningChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsManualFanTuningChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningChangedEvent_IsManualPowerTuningChanged___(void * jarg1) {
  unsigned int jresult ;
  adlx::IADLXGPUTuningChangedEvent *arg1 = (adlx::IADLXGPUTuningChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXGPUTuningChangedEvent *)jarg1; 
  result = (adlx_bool)(arg1)->IsManualPowerTuningChanged();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXGPUTuningChangedEvent___(void * jarg1) {
  adlx::IADLXGPUTuningChangedEvent *arg1 = (adlx::IADLXGPUTuningChangedEvent *) 0 ;
  
  arg1 = (adlx::IADLXGPUTuningChangedEvent *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningChangedListener_OnGPUTuningChanged___(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  adlx::IADLXGPUTuningChangedListener *arg1 = (adlx::IADLXGPUTuningChangedListener *) 0 ;
  adlx::IADLXGPUTuningChangedEvent *arg2 = (adlx::IADLXGPUTuningChangedEvent *) 0 ;
  adlx_bool result;
  
  arg1 = (adlx::IADLXGPUTuningChangedListener *)jarg1; 
  arg2 = (adlx::IADLXGPUTuningChangedEvent *)jarg2; 
  result = (adlx_bool)(arg1)->OnGPUTuningChanged(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXGPUTuningChangedListener___(void * jarg1) {
  adlx::IADLXGPUTuningChangedListener *arg1 = (adlx::IADLXGPUTuningChangedListener *) 0 ;
  
  arg1 = (adlx::IADLXGPUTuningChangedListener *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningChangedHandling_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXGPUTuningChangedHandling::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningChangedHandling_AddGPUTuningEventListener___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUTuningChangedHandling *arg1 = (adlx::IADLXGPUTuningChangedHandling *) 0 ;
  adlx::IADLXGPUTuningChangedListener *arg2 = (adlx::IADLXGPUTuningChangedListener *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUTuningChangedHandling *)jarg1; 
  arg2 = (adlx::IADLXGPUTuningChangedListener *)jarg2; 
  result = (ADLX_RESULT)(arg1)->AddGPUTuningEventListener(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningChangedHandling_RemoveGPUTuningEventListener___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUTuningChangedHandling *arg1 = (adlx::IADLXGPUTuningChangedHandling *) 0 ;
  adlx::IADLXGPUTuningChangedListener *arg2 = (adlx::IADLXGPUTuningChangedListener *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUTuningChangedHandling *)jarg1; 
  arg2 = (adlx::IADLXGPUTuningChangedListener *)jarg2; 
  result = (ADLX_RESULT)(arg1)->RemoveGPUTuningEventListener(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXGPUTuningChangedHandling___(void * jarg1) {
  adlx::IADLXGPUTuningChangedHandling *arg1 = (adlx::IADLXGPUTuningChangedHandling *) 0 ;
  
  arg1 = (adlx::IADLXGPUTuningChangedHandling *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningServices_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXGPUTuningServices::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningServices_GetGPUTuningChangedHandling___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUTuningServices *arg1 = (adlx::IADLXGPUTuningServices *) 0 ;
  adlx::IADLXGPUTuningChangedHandling **arg2 = (adlx::IADLXGPUTuningChangedHandling **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUTuningServices *)jarg1; 
  arg2 = (adlx::IADLXGPUTuningChangedHandling **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetGPUTuningChangedHandling(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningServices_IsAtFactory___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUTuningServices *arg1 = (adlx::IADLXGPUTuningServices *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx_bool *arg3 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUTuningServices *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx_bool *)jarg3; 
  result = (ADLX_RESULT)(arg1)->IsAtFactory(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningServices_ResetToFactory___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUTuningServices *arg1 = (adlx::IADLXGPUTuningServices *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUTuningServices *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  result = (ADLX_RESULT)(arg1)->ResetToFactory(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningServices_IsSupportedAutoTuning___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUTuningServices *arg1 = (adlx::IADLXGPUTuningServices *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx_bool *arg3 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUTuningServices *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx_bool *)jarg3; 
  result = (ADLX_RESULT)(arg1)->IsSupportedAutoTuning(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningServices_IsSupportedPresetTuning___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUTuningServices *arg1 = (adlx::IADLXGPUTuningServices *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx_bool *arg3 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUTuningServices *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx_bool *)jarg3; 
  result = (ADLX_RESULT)(arg1)->IsSupportedPresetTuning(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningServices_IsSupportedManualGFXTuning___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUTuningServices *arg1 = (adlx::IADLXGPUTuningServices *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx_bool *arg3 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUTuningServices *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx_bool *)jarg3; 
  result = (ADLX_RESULT)(arg1)->IsSupportedManualGFXTuning(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningServices_IsSupportedManualVRAMTuning___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUTuningServices *arg1 = (adlx::IADLXGPUTuningServices *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx_bool *arg3 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUTuningServices *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx_bool *)jarg3; 
  result = (ADLX_RESULT)(arg1)->IsSupportedManualVRAMTuning(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningServices_IsSupportedManualFanTuning___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUTuningServices *arg1 = (adlx::IADLXGPUTuningServices *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx_bool *arg3 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUTuningServices *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx_bool *)jarg3; 
  result = (ADLX_RESULT)(arg1)->IsSupportedManualFanTuning(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningServices_IsSupportedManualPowerTuning___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUTuningServices *arg1 = (adlx::IADLXGPUTuningServices *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx_bool *arg3 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUTuningServices *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx_bool *)jarg3; 
  result = (ADLX_RESULT)(arg1)->IsSupportedManualPowerTuning(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningServices_GetAutoTuning___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUTuningServices *arg1 = (adlx::IADLXGPUTuningServices *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx::IADLXInterface **arg3 = (adlx::IADLXInterface **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUTuningServices *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx::IADLXInterface **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetAutoTuning(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningServices_GetPresetTuning___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUTuningServices *arg1 = (adlx::IADLXGPUTuningServices *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx::IADLXInterface **arg3 = (adlx::IADLXInterface **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUTuningServices *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx::IADLXInterface **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetPresetTuning(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningServices_GetManualGFXTuning___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUTuningServices *arg1 = (adlx::IADLXGPUTuningServices *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx::IADLXInterface **arg3 = (adlx::IADLXInterface **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUTuningServices *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx::IADLXInterface **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetManualGFXTuning(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningServices_GetManualVRAMTuning___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUTuningServices *arg1 = (adlx::IADLXGPUTuningServices *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx::IADLXInterface **arg3 = (adlx::IADLXInterface **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUTuningServices *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx::IADLXInterface **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetManualVRAMTuning(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningServices_GetManualFanTuning___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUTuningServices *arg1 = (adlx::IADLXGPUTuningServices *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx::IADLXInterface **arg3 = (adlx::IADLXInterface **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUTuningServices *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx::IADLXInterface **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetManualFanTuning(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningServices_GetManualPowerTuning___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUTuningServices *arg1 = (adlx::IADLXGPUTuningServices *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx::IADLXInterface **arg3 = (adlx::IADLXInterface **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUTuningServices *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx::IADLXInterface **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetManualPowerTuning(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXGPUTuningServices___(void * jarg1) {
  adlx::IADLXGPUTuningServices *arg1 = (adlx::IADLXGPUTuningServices *) 0 ;
  
  arg1 = (adlx::IADLXGPUTuningServices *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuningState_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXManualFanTuningState::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuningState_GetFanSpeed___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuningState *arg1 = (adlx::IADLXManualFanTuningState *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuningState *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetFanSpeed(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuningState_SetFanSpeed___(void * jarg1, int jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuningState *arg1 = (adlx::IADLXManualFanTuningState *) 0 ;
  adlx_int arg2 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuningState *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetFanSpeed(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuningState_GetTemperature___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuningState *arg1 = (adlx::IADLXManualFanTuningState *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuningState *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetTemperature(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuningState_SetTemperature___(void * jarg1, int jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuningState *arg1 = (adlx::IADLXManualFanTuningState *) 0 ;
  adlx_int arg2 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuningState *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetTemperature(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXManualFanTuningState___(void * jarg1) {
  adlx::IADLXManualFanTuningState *arg1 = (adlx::IADLXManualFanTuningState *) 0 ;
  
  arg1 = (adlx::IADLXManualFanTuningState *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuningStateList_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXManualFanTuningStateList::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuningStateList_ITEM_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXManualFanTuningStateList::ITEM_IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuningStateList_At___(void * jarg1, unsigned int jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXManualFanTuningStateList *arg1 = (adlx::IADLXManualFanTuningStateList *) 0 ;
  adlx_uint arg2 ;
  adlx::IADLXManualFanTuningState **arg3 = (adlx::IADLXManualFanTuningState **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuningStateList *)jarg1; 
  arg2 = (adlx_uint)jarg2; 
  arg3 = (adlx::IADLXManualFanTuningState **)jarg3; 
  result = (ADLX_RESULT)(arg1)->At(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuningStateList_Add_Back___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuningStateList *arg1 = (adlx::IADLXManualFanTuningStateList *) 0 ;
  adlx::IADLXManualFanTuningState *arg2 = (adlx::IADLXManualFanTuningState *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuningStateList *)jarg1; 
  arg2 = (adlx::IADLXManualFanTuningState *)jarg2; 
  result = (ADLX_RESULT)(arg1)->Add_Back(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXManualFanTuningStateList___(void * jarg1) {
  adlx::IADLXManualFanTuningStateList *arg1 = (adlx::IADLXManualFanTuningStateList *) 0 ;
  
  arg1 = (adlx::IADLXManualFanTuningStateList *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXManualFanTuning::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_GetFanTuningRanges___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  ADLX_IntRange *arg2 = (ADLX_IntRange *) 0 ;
  ADLX_IntRange *arg3 = (ADLX_IntRange *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (ADLX_IntRange *)jarg2; 
  arg3 = (ADLX_IntRange *)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetFanTuningRanges(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_GetFanTuningStates___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  adlx::IADLXManualFanTuningStateList **arg2 = (adlx::IADLXManualFanTuningStateList **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (adlx::IADLXManualFanTuningStateList **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetFanTuningStates(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_GetEmptyFanTuningStates___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  adlx::IADLXManualFanTuningStateList **arg2 = (adlx::IADLXManualFanTuningStateList **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (adlx::IADLXManualFanTuningStateList **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetEmptyFanTuningStates(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_IsValidFanTuningStates___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  adlx::IADLXManualFanTuningStateList *arg2 = (adlx::IADLXManualFanTuningStateList *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (adlx::IADLXManualFanTuningStateList *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)(arg1)->IsValidFanTuningStates(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_SetFanTuningStates___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  adlx::IADLXManualFanTuningStateList *arg2 = (adlx::IADLXManualFanTuningStateList *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (adlx::IADLXManualFanTuningStateList *)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetFanTuningStates(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_IsSupportedZeroRPM___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedZeroRPM(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_GetZeroRPMState___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetZeroRPMState(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_SetZeroRPMState___(void * jarg1, unsigned int jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  adlx_bool arg2 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (ADLX_RESULT)(arg1)->SetZeroRPMState(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_IsSupportedMinAcousticLimit___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedMinAcousticLimit(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_GetMinAcousticLimitRange___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  ADLX_IntRange *arg2 = (ADLX_IntRange *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (ADLX_IntRange *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetMinAcousticLimitRange(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_GetMinAcousticLimit___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetMinAcousticLimit(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_SetMinAcousticLimit___(void * jarg1, int jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  adlx_int arg2 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetMinAcousticLimit(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_IsSupportedMinFanSpeed___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedMinFanSpeed(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_GetMinFanSpeedRange___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  ADLX_IntRange *arg2 = (ADLX_IntRange *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (ADLX_IntRange *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetMinFanSpeedRange(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_GetMinFanSpeed___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetMinFanSpeed(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_SetMinFanSpeed___(void * jarg1, int jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  adlx_int arg2 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetMinFanSpeed(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_IsSupportedTargetFanSpeed___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedTargetFanSpeed(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_GetTargetFanSpeedRange___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  ADLX_IntRange *arg2 = (ADLX_IntRange *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (ADLX_IntRange *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetTargetFanSpeedRange(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_GetTargetFanSpeed___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetTargetFanSpeed(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_SetTargetFanSpeed___(void * jarg1, int jarg2) {
  int jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  adlx_int arg2 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetTargetFanSpeed(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXManualFanTuning___(void * jarg1) {
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualGraphicsTuning1_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXManualGraphicsTuning1::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualGraphicsTuning1_GetGPUTuningRanges___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXManualGraphicsTuning1 *arg1 = (adlx::IADLXManualGraphicsTuning1 *) 0 ;
  ADLX_IntRange *arg2 = (ADLX_IntRange *) 0 ;
  ADLX_IntRange *arg3 = (ADLX_IntRange *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualGraphicsTuning1 *)jarg1; 
  arg2 = (ADLX_IntRange *)jarg2; 
  arg3 = (ADLX_IntRange *)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetGPUTuningRanges(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualGraphicsTuning1_GetGPUTuningStates___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualGraphicsTuning1 *arg1 = (adlx::IADLXManualGraphicsTuning1 *) 0 ;
  adlx::IADLXManualTuningStateList **arg2 = (adlx::IADLXManualTuningStateList **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualGraphicsTuning1 *)jarg1; 
  arg2 = (adlx::IADLXManualTuningStateList **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetGPUTuningStates(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualGraphicsTuning1_GetEmptyGPUTuningStates___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualGraphicsTuning1 *arg1 = (adlx::IADLXManualGraphicsTuning1 *) 0 ;
  adlx::IADLXManualTuningStateList **arg2 = (adlx::IADLXManualTuningStateList **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualGraphicsTuning1 *)jarg1; 
  arg2 = (adlx::IADLXManualTuningStateList **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetEmptyGPUTuningStates(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualGraphicsTuning1_IsValidGPUTuningStates___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXManualGraphicsTuning1 *arg1 = (adlx::IADLXManualGraphicsTuning1 *) 0 ;
  adlx::IADLXManualTuningStateList *arg2 = (adlx::IADLXManualTuningStateList *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualGraphicsTuning1 *)jarg1; 
  arg2 = (adlx::IADLXManualTuningStateList *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)(arg1)->IsValidGPUTuningStates(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualGraphicsTuning1_SetGPUTuningStates___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualGraphicsTuning1 *arg1 = (adlx::IADLXManualGraphicsTuning1 *) 0 ;
  adlx::IADLXManualTuningStateList *arg2 = (adlx::IADLXManualTuningStateList *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualGraphicsTuning1 *)jarg1; 
  arg2 = (adlx::IADLXManualTuningStateList *)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetGPUTuningStates(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXManualGraphicsTuning1___(void * jarg1) {
  adlx::IADLXManualGraphicsTuning1 *arg1 = (adlx::IADLXManualGraphicsTuning1 *) 0 ;
  
  arg1 = (adlx::IADLXManualGraphicsTuning1 *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualGraphicsTuning2_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXManualGraphicsTuning2::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualGraphicsTuning2_GetGPUMinFrequencyRange___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualGraphicsTuning2 *arg1 = (adlx::IADLXManualGraphicsTuning2 *) 0 ;
  ADLX_IntRange *arg2 = (ADLX_IntRange *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualGraphicsTuning2 *)jarg1; 
  arg2 = (ADLX_IntRange *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetGPUMinFrequencyRange(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualGraphicsTuning2_GetGPUMinFrequency___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualGraphicsTuning2 *arg1 = (adlx::IADLXManualGraphicsTuning2 *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualGraphicsTuning2 *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetGPUMinFrequency(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualGraphicsTuning2_SetGPUMinFrequency___(void * jarg1, int jarg2) {
  int jresult ;
  adlx::IADLXManualGraphicsTuning2 *arg1 = (adlx::IADLXManualGraphicsTuning2 *) 0 ;
  adlx_int arg2 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualGraphicsTuning2 *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetGPUMinFrequency(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualGraphicsTuning2_GetGPUMaxFrequencyRange___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualGraphicsTuning2 *arg1 = (adlx::IADLXManualGraphicsTuning2 *) 0 ;
  ADLX_IntRange *arg2 = (ADLX_IntRange *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualGraphicsTuning2 *)jarg1; 
  arg2 = (ADLX_IntRange *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetGPUMaxFrequencyRange(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualGraphicsTuning2_GetGPUMaxFrequency___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualGraphicsTuning2 *arg1 = (adlx::IADLXManualGraphicsTuning2 *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualGraphicsTuning2 *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetGPUMaxFrequency(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualGraphicsTuning2_SetGPUMaxFrequency___(void * jarg1, int jarg2) {
  int jresult ;
  adlx::IADLXManualGraphicsTuning2 *arg1 = (adlx::IADLXManualGraphicsTuning2 *) 0 ;
  adlx_int arg2 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualGraphicsTuning2 *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetGPUMaxFrequency(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualGraphicsTuning2_GetGPUVoltageRange___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualGraphicsTuning2 *arg1 = (adlx::IADLXManualGraphicsTuning2 *) 0 ;
  ADLX_IntRange *arg2 = (ADLX_IntRange *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualGraphicsTuning2 *)jarg1; 
  arg2 = (ADLX_IntRange *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetGPUVoltageRange(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualGraphicsTuning2_GetGPUVoltage___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualGraphicsTuning2 *arg1 = (adlx::IADLXManualGraphicsTuning2 *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualGraphicsTuning2 *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetGPUVoltage(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualGraphicsTuning2_SetGPUVoltage___(void * jarg1, int jarg2) {
  int jresult ;
  adlx::IADLXManualGraphicsTuning2 *arg1 = (adlx::IADLXManualGraphicsTuning2 *) 0 ;
  adlx_int arg2 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualGraphicsTuning2 *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetGPUVoltage(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXManualGraphicsTuning2___(void * jarg1) {
  adlx::IADLXManualGraphicsTuning2 *arg1 = (adlx::IADLXManualGraphicsTuning2 *) 0 ;
  
  arg1 = (adlx::IADLXManualGraphicsTuning2 *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualPowerTuning_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXManualPowerTuning::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualPowerTuning_GetPowerLimitRange___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualPowerTuning *arg1 = (adlx::IADLXManualPowerTuning *) 0 ;
  ADLX_IntRange *arg2 = (ADLX_IntRange *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualPowerTuning *)jarg1; 
  arg2 = (ADLX_IntRange *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetPowerLimitRange(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualPowerTuning_GetPowerLimit___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualPowerTuning *arg1 = (adlx::IADLXManualPowerTuning *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualPowerTuning *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetPowerLimit(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualPowerTuning_SetPowerLimit___(void * jarg1, int jarg2) {
  int jresult ;
  adlx::IADLXManualPowerTuning *arg1 = (adlx::IADLXManualPowerTuning *) 0 ;
  adlx_int arg2 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualPowerTuning *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetPowerLimit(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualPowerTuning_IsSupportedTDCLimit___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualPowerTuning *arg1 = (adlx::IADLXManualPowerTuning *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualPowerTuning *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedTDCLimit(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualPowerTuning_GetTDCLimitRange___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualPowerTuning *arg1 = (adlx::IADLXManualPowerTuning *) 0 ;
  ADLX_IntRange *arg2 = (ADLX_IntRange *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualPowerTuning *)jarg1; 
  arg2 = (ADLX_IntRange *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetTDCLimitRange(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualPowerTuning_GetTDCLimit___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualPowerTuning *arg1 = (adlx::IADLXManualPowerTuning *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualPowerTuning *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetTDCLimit(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualPowerTuning_SetTDCLimit___(void * jarg1, int jarg2) {
  int jresult ;
  adlx::IADLXManualPowerTuning *arg1 = (adlx::IADLXManualPowerTuning *) 0 ;
  adlx_int arg2 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualPowerTuning *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetTDCLimit(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXManualPowerTuning___(void * jarg1) {
  adlx::IADLXManualPowerTuning *arg1 = (adlx::IADLXManualPowerTuning *) 0 ;
  
  arg1 = (adlx::IADLXManualPowerTuning *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning1_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXManualVRAMTuning1::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning1_IsSupportedMemoryTiming___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualVRAMTuning1 *arg1 = (adlx::IADLXManualVRAMTuning1 *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualVRAMTuning1 *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedMemoryTiming(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning1_GetSupportedMemoryTimingDescriptionList___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualVRAMTuning1 *arg1 = (adlx::IADLXManualVRAMTuning1 *) 0 ;
  adlx::IADLXMemoryTimingDescriptionList **arg2 = (adlx::IADLXMemoryTimingDescriptionList **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualVRAMTuning1 *)jarg1; 
  arg2 = (adlx::IADLXMemoryTimingDescriptionList **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetSupportedMemoryTimingDescriptionList(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning1_GetMemoryTimingDescription___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualVRAMTuning1 *arg1 = (adlx::IADLXManualVRAMTuning1 *) 0 ;
  ADLX_MEMORYTIMING_DESCRIPTION *arg2 = (ADLX_MEMORYTIMING_DESCRIPTION *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualVRAMTuning1 *)jarg1; 
  arg2 = (ADLX_MEMORYTIMING_DESCRIPTION *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetMemoryTimingDescription(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning1_SetMemoryTimingDescription___(void * jarg1, int jarg2) {
  int jresult ;
  adlx::IADLXManualVRAMTuning1 *arg1 = (adlx::IADLXManualVRAMTuning1 *) 0 ;
  ADLX_MEMORYTIMING_DESCRIPTION arg2 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualVRAMTuning1 *)jarg1; 
  arg2 = (ADLX_MEMORYTIMING_DESCRIPTION)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetMemoryTimingDescription(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning1_GetVRAMTuningRanges___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXManualVRAMTuning1 *arg1 = (adlx::IADLXManualVRAMTuning1 *) 0 ;
  ADLX_IntRange *arg2 = (ADLX_IntRange *) 0 ;
  ADLX_IntRange *arg3 = (ADLX_IntRange *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualVRAMTuning1 *)jarg1; 
  arg2 = (ADLX_IntRange *)jarg2; 
  arg3 = (ADLX_IntRange *)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetVRAMTuningRanges(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning1_GetVRAMTuningStates___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualVRAMTuning1 *arg1 = (adlx::IADLXManualVRAMTuning1 *) 0 ;
  adlx::IADLXManualTuningStateList **arg2 = (adlx::IADLXManualTuningStateList **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualVRAMTuning1 *)jarg1; 
  arg2 = (adlx::IADLXManualTuningStateList **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetVRAMTuningStates(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning1_GetEmptyVRAMTuningStates___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualVRAMTuning1 *arg1 = (adlx::IADLXManualVRAMTuning1 *) 0 ;
  adlx::IADLXManualTuningStateList **arg2 = (adlx::IADLXManualTuningStateList **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualVRAMTuning1 *)jarg1; 
  arg2 = (adlx::IADLXManualTuningStateList **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetEmptyVRAMTuningStates(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning1_IsValidVRAMTuningStates___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXManualVRAMTuning1 *arg1 = (adlx::IADLXManualVRAMTuning1 *) 0 ;
  adlx::IADLXManualTuningStateList *arg2 = (adlx::IADLXManualTuningStateList *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualVRAMTuning1 *)jarg1; 
  arg2 = (adlx::IADLXManualTuningStateList *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)(arg1)->IsValidVRAMTuningStates(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning1_SetVRAMTuningStates___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualVRAMTuning1 *arg1 = (adlx::IADLXManualVRAMTuning1 *) 0 ;
  adlx::IADLXManualTuningStateList *arg2 = (adlx::IADLXManualTuningStateList *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualVRAMTuning1 *)jarg1; 
  arg2 = (adlx::IADLXManualTuningStateList *)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetVRAMTuningStates(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXManualVRAMTuning1___(void * jarg1) {
  adlx::IADLXManualVRAMTuning1 *arg1 = (adlx::IADLXManualVRAMTuning1 *) 0 ;
  
  arg1 = (adlx::IADLXManualVRAMTuning1 *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning2_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXManualVRAMTuning2::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning2_IsSupportedMemoryTiming___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualVRAMTuning2 *arg1 = (adlx::IADLXManualVRAMTuning2 *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualVRAMTuning2 *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedMemoryTiming(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning2_GetSupportedMemoryTimingDescriptionList___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualVRAMTuning2 *arg1 = (adlx::IADLXManualVRAMTuning2 *) 0 ;
  adlx::IADLXMemoryTimingDescriptionList **arg2 = (adlx::IADLXMemoryTimingDescriptionList **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualVRAMTuning2 *)jarg1; 
  arg2 = (adlx::IADLXMemoryTimingDescriptionList **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetSupportedMemoryTimingDescriptionList(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning2_GetMemoryTimingDescription___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualVRAMTuning2 *arg1 = (adlx::IADLXManualVRAMTuning2 *) 0 ;
  ADLX_MEMORYTIMING_DESCRIPTION *arg2 = (ADLX_MEMORYTIMING_DESCRIPTION *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualVRAMTuning2 *)jarg1; 
  arg2 = (ADLX_MEMORYTIMING_DESCRIPTION *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetMemoryTimingDescription(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning2_SetMemoryTimingDescription___(void * jarg1, int jarg2) {
  int jresult ;
  adlx::IADLXManualVRAMTuning2 *arg1 = (adlx::IADLXManualVRAMTuning2 *) 0 ;
  ADLX_MEMORYTIMING_DESCRIPTION arg2 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualVRAMTuning2 *)jarg1; 
  arg2 = (ADLX_MEMORYTIMING_DESCRIPTION)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetMemoryTimingDescription(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning2_GetMaxVRAMFrequencyRange___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualVRAMTuning2 *arg1 = (adlx::IADLXManualVRAMTuning2 *) 0 ;
  ADLX_IntRange *arg2 = (ADLX_IntRange *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualVRAMTuning2 *)jarg1; 
  arg2 = (ADLX_IntRange *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetMaxVRAMFrequencyRange(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning2_GetMaxVRAMFrequency___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXManualVRAMTuning2 *arg1 = (adlx::IADLXManualVRAMTuning2 *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualVRAMTuning2 *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetMaxVRAMFrequency(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning2_SetMaxVRAMFrequency___(void * jarg1, int jarg2) {
  int jresult ;
  adlx::IADLXManualVRAMTuning2 *arg1 = (adlx::IADLXManualVRAMTuning2 *) 0 ;
  adlx_int arg2 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXManualVRAMTuning2 *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetMaxVRAMFrequency(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXManualVRAMTuning2___(void * jarg1) {
  adlx::IADLXManualVRAMTuning2 *arg1 = (adlx::IADLXManualVRAMTuning2 *) 0 ;
  
  arg1 = (adlx::IADLXManualVRAMTuning2 *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUPresetTuning_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXGPUPresetTuning::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUPresetTuning_IsSupportedPowerSaver___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUPresetTuning *arg1 = (adlx::IADLXGPUPresetTuning *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUPresetTuning *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedPowerSaver(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUPresetTuning_IsSupportedQuiet___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUPresetTuning *arg1 = (adlx::IADLXGPUPresetTuning *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUPresetTuning *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedQuiet(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUPresetTuning_IsSupportedBalanced___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUPresetTuning *arg1 = (adlx::IADLXGPUPresetTuning *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUPresetTuning *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedBalanced(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUPresetTuning_IsSupportedTurbo___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUPresetTuning *arg1 = (adlx::IADLXGPUPresetTuning *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUPresetTuning *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedTurbo(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUPresetTuning_IsSupportedRage___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUPresetTuning *arg1 = (adlx::IADLXGPUPresetTuning *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUPresetTuning *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedRage(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUPresetTuning_IsCurrentPowerSaver___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUPresetTuning *arg1 = (adlx::IADLXGPUPresetTuning *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUPresetTuning *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsCurrentPowerSaver(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUPresetTuning_IsCurrentQuiet___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUPresetTuning *arg1 = (adlx::IADLXGPUPresetTuning *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUPresetTuning *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsCurrentQuiet(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUPresetTuning_IsCurrentBalanced___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUPresetTuning *arg1 = (adlx::IADLXGPUPresetTuning *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUPresetTuning *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsCurrentBalanced(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUPresetTuning_IsCurrentTurbo___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUPresetTuning *arg1 = (adlx::IADLXGPUPresetTuning *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUPresetTuning *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsCurrentTurbo(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUPresetTuning_IsCurrentRage___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUPresetTuning *arg1 = (adlx::IADLXGPUPresetTuning *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUPresetTuning *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsCurrentRage(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUPresetTuning_SetPowerSaver___(void * jarg1) {
  int jresult ;
  adlx::IADLXGPUPresetTuning *arg1 = (adlx::IADLXGPUPresetTuning *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUPresetTuning *)jarg1; 
  result = (ADLX_RESULT)(arg1)->SetPowerSaver();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUPresetTuning_SetQuiet___(void * jarg1) {
  int jresult ;
  adlx::IADLXGPUPresetTuning *arg1 = (adlx::IADLXGPUPresetTuning *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUPresetTuning *)jarg1; 
  result = (ADLX_RESULT)(arg1)->SetQuiet();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUPresetTuning_SetBalanced___(void * jarg1) {
  int jresult ;
  adlx::IADLXGPUPresetTuning *arg1 = (adlx::IADLXGPUPresetTuning *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUPresetTuning *)jarg1; 
  result = (ADLX_RESULT)(arg1)->SetBalanced();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUPresetTuning_SetTurbo___(void * jarg1) {
  int jresult ;
  adlx::IADLXGPUPresetTuning *arg1 = (adlx::IADLXGPUPresetTuning *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUPresetTuning *)jarg1; 
  result = (ADLX_RESULT)(arg1)->SetTurbo();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUPresetTuning_SetRage___(void * jarg1) {
  int jresult ;
  adlx::IADLXGPUPresetTuning *arg1 = (adlx::IADLXGPUPresetTuning *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUPresetTuning *)jarg1; 
  result = (ADLX_RESULT)(arg1)->SetRage();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXGPUPresetTuning___(void * jarg1) {
  adlx::IADLXGPUPresetTuning *arg1 = (adlx::IADLXGPUPresetTuning *) 0 ;
  
  arg1 = (adlx::IADLXGPUPresetTuning *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXGPUMetricsSupport::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_IsSupportedGPUUsage___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedGPUUsage(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_IsSupportedGPUClockSpeed___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedGPUClockSpeed(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_IsSupportedGPUVRAMClockSpeed___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedGPUVRAMClockSpeed(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_IsSupportedGPUTemperature___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedGPUTemperature(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_IsSupportedGPUHotspotTemperature___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedGPUHotspotTemperature(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_IsSupportedGPUPower___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedGPUPower(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_IsSupportedGPUTotalBoardPower___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedGPUTotalBoardPower(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_IsSupportedGPUFanSpeed___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedGPUFanSpeed(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_IsSupportedGPUVRAM___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedGPUVRAM(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_IsSupportedGPUVoltage___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedGPUVoltage(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_GetGPUUsageRange___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetGPUUsageRange(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_GetGPUClockSpeedRange___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetGPUClockSpeedRange(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_GetGPUVRAMClockSpeedRange___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetGPUVRAMClockSpeedRange(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_GetGPUTemperatureRange___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetGPUTemperatureRange(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_GetGPUHotspotTemperatureRange___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetGPUHotspotTemperatureRange(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_GetGPUPowerRange___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetGPUPowerRange(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_GetGPUFanSpeedRange___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetGPUFanSpeedRange(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_GetGPUVRAMRange___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetGPUVRAMRange(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_GetGPUVoltageRange___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetGPUVoltageRange(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_GetGPUTotalBoardPowerRange___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetGPUTotalBoardPowerRange(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_GetGPUIntakeTemperatureRange___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetGPUIntakeTemperatureRange(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_IsSupportedGPUIntakeTemperature___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedGPUIntakeTemperature(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXGPUMetricsSupport___(void * jarg1) {
  adlx::IADLXGPUMetricsSupport *arg1 = (adlx::IADLXGPUMetricsSupport *) 0 ;
  
  arg1 = (adlx::IADLXGPUMetricsSupport *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetricsSupport_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXSystemMetricsSupport::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetricsSupport_IsSupportedCPUUsage___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXSystemMetricsSupport *arg1 = (adlx::IADLXSystemMetricsSupport *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystemMetricsSupport *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedCPUUsage(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetricsSupport_IsSupportedSystemRAM___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXSystemMetricsSupport *arg1 = (adlx::IADLXSystemMetricsSupport *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystemMetricsSupport *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedSystemRAM(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetricsSupport_IsSupportedSmartShift___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXSystemMetricsSupport *arg1 = (adlx::IADLXSystemMetricsSupport *) 0 ;
  adlx_bool *arg2 = (adlx_bool *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystemMetricsSupport *)jarg1; 
  arg2 = (adlx_bool *)jarg2; 
  result = (ADLX_RESULT)(arg1)->IsSupportedSmartShift(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetricsSupport_GetCPUUsageRange___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXSystemMetricsSupport *arg1 = (adlx::IADLXSystemMetricsSupport *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystemMetricsSupport *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetCPUUsageRange(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetricsSupport_GetSystemRAMRange___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXSystemMetricsSupport *arg1 = (adlx::IADLXSystemMetricsSupport *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystemMetricsSupport *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetSystemRAMRange(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetricsSupport_GetSmartShiftRange___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXSystemMetricsSupport *arg1 = (adlx::IADLXSystemMetricsSupport *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  adlx_int *arg3 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystemMetricsSupport *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  arg3 = (adlx_int *)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetSmartShiftRange(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXSystemMetricsSupport___(void * jarg1) {
  adlx::IADLXSystemMetricsSupport *arg1 = (adlx::IADLXSystemMetricsSupport *) 0 ;
  
  arg1 = (adlx::IADLXSystemMetricsSupport *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetrics_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXGPUMetrics::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetrics_TimeStamp___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetrics *arg1 = (adlx::IADLXGPUMetrics *) 0 ;
  adlx_int64 *arg2 = (adlx_int64 *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetrics *)jarg1; 
  arg2 = (adlx_int64 *)jarg2; 
  result = (ADLX_RESULT)(arg1)->TimeStamp(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetrics_GPUUsage___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetrics *arg1 = (adlx::IADLXGPUMetrics *) 0 ;
  adlx_double *arg2 = (adlx_double *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetrics *)jarg1; 
  arg2 = (adlx_double *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GPUUsage(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetrics_GPUClockSpeed___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetrics *arg1 = (adlx::IADLXGPUMetrics *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetrics *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GPUClockSpeed(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetrics_GPUVRAMClockSpeed___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetrics *arg1 = (adlx::IADLXGPUMetrics *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetrics *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GPUVRAMClockSpeed(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetrics_GPUTemperature___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetrics *arg1 = (adlx::IADLXGPUMetrics *) 0 ;
  adlx_double *arg2 = (adlx_double *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetrics *)jarg1; 
  arg2 = (adlx_double *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GPUTemperature(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetrics_GPUHotspotTemperature___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetrics *arg1 = (adlx::IADLXGPUMetrics *) 0 ;
  adlx_double *arg2 = (adlx_double *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetrics *)jarg1; 
  arg2 = (adlx_double *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GPUHotspotTemperature(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetrics_GPUPower___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetrics *arg1 = (adlx::IADLXGPUMetrics *) 0 ;
  adlx_double *arg2 = (adlx_double *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetrics *)jarg1; 
  arg2 = (adlx_double *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GPUPower(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetrics_GPUTotalBoardPower___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetrics *arg1 = (adlx::IADLXGPUMetrics *) 0 ;
  adlx_double *arg2 = (adlx_double *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetrics *)jarg1; 
  arg2 = (adlx_double *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GPUTotalBoardPower(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetrics_GPUFanSpeed___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetrics *arg1 = (adlx::IADLXGPUMetrics *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetrics *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GPUFanSpeed(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetrics_GPUVRAM___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetrics *arg1 = (adlx::IADLXGPUMetrics *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetrics *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GPUVRAM(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetrics_GPUVoltage___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetrics *arg1 = (adlx::IADLXGPUMetrics *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetrics *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GPUVoltage(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetrics_GPUIntakeTemperature___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetrics *arg1 = (adlx::IADLXGPUMetrics *) 0 ;
  adlx_double *arg2 = (adlx_double *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetrics *)jarg1; 
  arg2 = (adlx_double *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GPUIntakeTemperature(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXGPUMetrics___(void * jarg1) {
  adlx::IADLXGPUMetrics *arg1 = (adlx::IADLXGPUMetrics *) 0 ;
  
  arg1 = (adlx::IADLXGPUMetrics *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsList_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXGPUMetricsList::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsList_ITEM_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXGPUMetricsList::ITEM_IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsList_At___(void * jarg1, unsigned int jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXGPUMetricsList *arg1 = (adlx::IADLXGPUMetricsList *) 0 ;
  adlx_uint arg2 ;
  adlx::IADLXGPUMetrics **arg3 = (adlx::IADLXGPUMetrics **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsList *)jarg1; 
  arg2 = (adlx_uint)jarg2; 
  arg3 = (adlx::IADLXGPUMetrics **)jarg3; 
  result = (ADLX_RESULT)(arg1)->At(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsList_Add_Back___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXGPUMetricsList *arg1 = (adlx::IADLXGPUMetricsList *) 0 ;
  adlx::IADLXGPUMetrics *arg2 = (adlx::IADLXGPUMetrics *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXGPUMetricsList *)jarg1; 
  arg2 = (adlx::IADLXGPUMetrics *)jarg2; 
  result = (ADLX_RESULT)(arg1)->Add_Back(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXGPUMetricsList___(void * jarg1) {
  adlx::IADLXGPUMetricsList *arg1 = (adlx::IADLXGPUMetricsList *) 0 ;
  
  arg1 = (adlx::IADLXGPUMetricsList *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetrics_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXSystemMetrics::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetrics_TimeStamp___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXSystemMetrics *arg1 = (adlx::IADLXSystemMetrics *) 0 ;
  adlx_int64 *arg2 = (adlx_int64 *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystemMetrics *)jarg1; 
  arg2 = (adlx_int64 *)jarg2; 
  result = (ADLX_RESULT)(arg1)->TimeStamp(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetrics_CPUUsage___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXSystemMetrics *arg1 = (adlx::IADLXSystemMetrics *) 0 ;
  adlx_double *arg2 = (adlx_double *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystemMetrics *)jarg1; 
  arg2 = (adlx_double *)jarg2; 
  result = (ADLX_RESULT)(arg1)->CPUUsage(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetrics_SystemRAM___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXSystemMetrics *arg1 = (adlx::IADLXSystemMetrics *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystemMetrics *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->SystemRAM(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetrics_SmartShift___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXSystemMetrics *arg1 = (adlx::IADLXSystemMetrics *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystemMetrics *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->SmartShift(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXSystemMetrics___(void * jarg1) {
  adlx::IADLXSystemMetrics *arg1 = (adlx::IADLXSystemMetrics *) 0 ;
  
  arg1 = (adlx::IADLXSystemMetrics *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetricsList_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXSystemMetricsList::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetricsList_ITEM_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXSystemMetricsList::ITEM_IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetricsList_At___(void * jarg1, unsigned int jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXSystemMetricsList *arg1 = (adlx::IADLXSystemMetricsList *) 0 ;
  adlx_uint arg2 ;
  adlx::IADLXSystemMetrics **arg3 = (adlx::IADLXSystemMetrics **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystemMetricsList *)jarg1; 
  arg2 = (adlx_uint)jarg2; 
  arg3 = (adlx::IADLXSystemMetrics **)jarg3; 
  result = (ADLX_RESULT)(arg1)->At(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetricsList_Add_Back___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXSystemMetricsList *arg1 = (adlx::IADLXSystemMetricsList *) 0 ;
  adlx::IADLXSystemMetrics *arg2 = (adlx::IADLXSystemMetrics *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXSystemMetricsList *)jarg1; 
  arg2 = (adlx::IADLXSystemMetrics *)jarg2; 
  result = (ADLX_RESULT)(arg1)->Add_Back(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXSystemMetricsList___(void * jarg1) {
  adlx::IADLXSystemMetricsList *arg1 = (adlx::IADLXSystemMetricsList *) 0 ;
  
  arg1 = (adlx::IADLXSystemMetricsList *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXFPS_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXFPS::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXFPS_TimeStamp___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXFPS *arg1 = (adlx::IADLXFPS *) 0 ;
  adlx_int64 *arg2 = (adlx_int64 *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXFPS *)jarg1; 
  arg2 = (adlx_int64 *)jarg2; 
  result = (ADLX_RESULT)(arg1)->TimeStamp(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXFPS_FPS___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXFPS *arg1 = (adlx::IADLXFPS *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXFPS *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->FPS(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXFPS___(void * jarg1) {
  adlx::IADLXFPS *arg1 = (adlx::IADLXFPS *) 0 ;
  
  arg1 = (adlx::IADLXFPS *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXFPSList_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXFPSList::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXFPSList_ITEM_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXFPSList::ITEM_IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXFPSList_At___(void * jarg1, unsigned int jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXFPSList *arg1 = (adlx::IADLXFPSList *) 0 ;
  adlx_uint arg2 ;
  adlx::IADLXFPS **arg3 = (adlx::IADLXFPS **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXFPSList *)jarg1; 
  arg2 = (adlx_uint)jarg2; 
  arg3 = (adlx::IADLXFPS **)jarg3; 
  result = (ADLX_RESULT)(arg1)->At(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXFPSList_Add_Back___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXFPSList *arg1 = (adlx::IADLXFPSList *) 0 ;
  adlx::IADLXFPS *arg2 = (adlx::IADLXFPS *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXFPSList *)jarg1; 
  arg2 = (adlx::IADLXFPS *)jarg2; 
  result = (ADLX_RESULT)(arg1)->Add_Back(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXFPSList___(void * jarg1) {
  adlx::IADLXFPSList *arg1 = (adlx::IADLXFPSList *) 0 ;
  
  arg1 = (adlx::IADLXFPSList *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXAllMetrics_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXAllMetrics::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXAllMetrics_TimeStamp___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXAllMetrics *arg1 = (adlx::IADLXAllMetrics *) 0 ;
  adlx_int64 *arg2 = (adlx_int64 *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXAllMetrics *)jarg1; 
  arg2 = (adlx_int64 *)jarg2; 
  result = (ADLX_RESULT)(arg1)->TimeStamp(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXAllMetrics_GetSystemMetrics___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXAllMetrics *arg1 = (adlx::IADLXAllMetrics *) 0 ;
  adlx::IADLXSystemMetrics **arg2 = (adlx::IADLXSystemMetrics **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXAllMetrics *)jarg1; 
  arg2 = (adlx::IADLXSystemMetrics **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetSystemMetrics(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXAllMetrics_GetFPS___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXAllMetrics *arg1 = (adlx::IADLXAllMetrics *) 0 ;
  adlx::IADLXFPS **arg2 = (adlx::IADLXFPS **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXAllMetrics *)jarg1; 
  arg2 = (adlx::IADLXFPS **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetFPS(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXAllMetrics_GetGPUMetrics___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXAllMetrics *arg1 = (adlx::IADLXAllMetrics *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx::IADLXGPUMetrics **arg3 = (adlx::IADLXGPUMetrics **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXAllMetrics *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx::IADLXGPUMetrics **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetGPUMetrics(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXAllMetrics___(void * jarg1) {
  adlx::IADLXAllMetrics *arg1 = (adlx::IADLXAllMetrics *) 0 ;
  
  arg1 = (adlx::IADLXAllMetrics *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXAllMetricsList_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXAllMetricsList::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXAllMetricsList_ITEM_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXAllMetricsList::ITEM_IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXAllMetricsList_At___(void * jarg1, unsigned int jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXAllMetricsList *arg1 = (adlx::IADLXAllMetricsList *) 0 ;
  adlx_uint arg2 ;
  adlx::IADLXAllMetrics **arg3 = (adlx::IADLXAllMetrics **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXAllMetricsList *)jarg1; 
  arg2 = (adlx_uint)jarg2; 
  arg3 = (adlx::IADLXAllMetrics **)jarg3; 
  result = (ADLX_RESULT)(arg1)->At(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXAllMetricsList_Add_Back___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXAllMetricsList *arg1 = (adlx::IADLXAllMetricsList *) 0 ;
  adlx::IADLXAllMetrics *arg2 = (adlx::IADLXAllMetrics *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXAllMetricsList *)jarg1; 
  arg2 = (adlx::IADLXAllMetrics *)jarg2; 
  result = (ADLX_RESULT)(arg1)->Add_Back(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXAllMetricsList___(void * jarg1) {
  adlx::IADLXAllMetricsList *arg1 = (adlx::IADLXAllMetricsList *) 0 ;
  
  arg1 = (adlx::IADLXAllMetricsList *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_IID___() {
  void * jresult ;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)adlx::IADLXPerformanceMonitoringServices::IID();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_GetSamplingIntervalRange___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  ADLX_IntRange *arg2 = (ADLX_IntRange *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  arg2 = (ADLX_IntRange *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetSamplingIntervalRange(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_SetSamplingInterval___(void * jarg1, int jarg2) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  adlx_int arg2 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetSamplingInterval(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_GetSamplingInterval___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetSamplingInterval(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_GetMaxPerformanceMetricsHistorySizeRange___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  ADLX_IntRange *arg2 = (ADLX_IntRange *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  arg2 = (ADLX_IntRange *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetMaxPerformanceMetricsHistorySizeRange(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_SetMaxPerformanceMetricsHistorySize___(void * jarg1, int jarg2) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  adlx_int arg2 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  result = (ADLX_RESULT)(arg1)->SetMaxPerformanceMetricsHistorySize(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_GetMaxPerformanceMetricsHistorySize___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetMaxPerformanceMetricsHistorySize(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_ClearPerformanceMetricsHistory___(void * jarg1) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  result = (ADLX_RESULT)(arg1)->ClearPerformanceMetricsHistory();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_GetCurrentPerformanceMetricsHistorySize___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  adlx_int *arg2 = (adlx_int *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  arg2 = (adlx_int *)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetCurrentPerformanceMetricsHistorySize(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_StartPerformanceMetricsTracking___(void * jarg1) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  result = (ADLX_RESULT)(arg1)->StartPerformanceMetricsTracking();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_StopPerformanceMetricsTracking___(void * jarg1) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  result = (ADLX_RESULT)(arg1)->StopPerformanceMetricsTracking();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_GetAllMetricsHistory___(void * jarg1, int jarg2, int jarg3, void * jarg4) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  adlx_int arg2 ;
  adlx_int arg3 ;
  adlx::IADLXAllMetricsList **arg4 = (adlx::IADLXAllMetricsList **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  arg3 = (adlx_int)jarg3; 
  arg4 = (adlx::IADLXAllMetricsList **)jarg4; 
  result = (ADLX_RESULT)(arg1)->GetAllMetricsHistory(arg2,arg3,arg4);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_GetGPUMetricsHistory___(void * jarg1, void * jarg2, int jarg3, int jarg4, void * jarg5) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx_int arg3 ;
  adlx_int arg4 ;
  adlx::IADLXGPUMetricsList **arg5 = (adlx::IADLXGPUMetricsList **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx_int)jarg3; 
  arg4 = (adlx_int)jarg4; 
  arg5 = (adlx::IADLXGPUMetricsList **)jarg5; 
  result = (ADLX_RESULT)(arg1)->GetGPUMetricsHistory(arg2,arg3,arg4,arg5);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_GetSystemMetricsHistory___(void * jarg1, int jarg2, int jarg3, void * jarg4) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  adlx_int arg2 ;
  adlx_int arg3 ;
  adlx::IADLXSystemMetricsList **arg4 = (adlx::IADLXSystemMetricsList **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  arg3 = (adlx_int)jarg3; 
  arg4 = (adlx::IADLXSystemMetricsList **)jarg4; 
  result = (ADLX_RESULT)(arg1)->GetSystemMetricsHistory(arg2,arg3,arg4);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_GetFPSHistory___(void * jarg1, int jarg2, int jarg3, void * jarg4) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  adlx_int arg2 ;
  adlx_int arg3 ;
  adlx::IADLXFPSList **arg4 = (adlx::IADLXFPSList **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  arg3 = (adlx_int)jarg3; 
  arg4 = (adlx::IADLXFPSList **)jarg4; 
  result = (ADLX_RESULT)(arg1)->GetFPSHistory(arg2,arg3,arg4);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_GetCurrentAllMetrics___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  adlx::IADLXAllMetrics **arg2 = (adlx::IADLXAllMetrics **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  arg2 = (adlx::IADLXAllMetrics **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetCurrentAllMetrics(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_GetCurrentGPUMetrics___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx::IADLXGPUMetrics **arg3 = (adlx::IADLXGPUMetrics **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx::IADLXGPUMetrics **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetCurrentGPUMetrics(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_GetCurrentSystemMetrics___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  adlx::IADLXSystemMetrics **arg2 = (adlx::IADLXSystemMetrics **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  arg2 = (adlx::IADLXSystemMetrics **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetCurrentSystemMetrics(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_GetCurrentFPS___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  adlx::IADLXFPS **arg2 = (adlx::IADLXFPS **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  arg2 = (adlx::IADLXFPS **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetCurrentFPS(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_GetSupportedGPUMetrics___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  adlx::IADLXGPUMetricsSupport **arg3 = (adlx::IADLXGPUMetricsSupport **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  arg3 = (adlx::IADLXGPUMetricsSupport **)jarg3; 
  result = (ADLX_RESULT)(arg1)->GetSupportedGPUMetrics(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_GetSupportedSystemMetrics___(void * jarg1, void * jarg2) {
  int jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  adlx::IADLXSystemMetricsSupport **arg2 = (adlx::IADLXSystemMetricsSupport **) 0 ;
  ADLX_RESULT result;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  arg2 = (adlx::IADLXSystemMetricsSupport **)jarg2; 
  result = (ADLX_RESULT)(arg1)->GetSupportedSystemMetrics(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_IADLXPerformanceMonitoringServices___(void * jarg1) {
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_ADLXHelper___() {
  void * jresult ;
  ADLXHelper *result = 0 ;
  
  result = (ADLXHelper *)new ADLXHelper();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_ADLXHelper___(void * jarg1) {
  ADLXHelper *arg1 = (ADLXHelper *) 0 ;
  
  arg1 = (ADLXHelper *)jarg1; 
  delete arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLXHelper_InitializeWithCallerAdl___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ADLXHelper *arg1 = (ADLXHelper *) 0 ;
  adlx_handle arg2 = (adlx_handle) 0 ;
  ADLX_ADL_Main_Memory_Free arg3 ;
  ADLX_ADL_Main_Memory_Free *argp3 ;
  ADLX_RESULT result;
  
  arg1 = (ADLXHelper *)jarg1; 
  arg2 = (adlx_handle)jarg2; 
  argp3 = (ADLX_ADL_Main_Memory_Free *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null ADLX_ADL_Main_Memory_Free", 0);
    return 0;
  }
  arg3 = *argp3; 
  result = (ADLX_RESULT)(arg1)->InitializeWithCallerAdl(arg2,arg3);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLXHelper_Initialize___(void * jarg1) {
  int jresult ;
  ADLXHelper *arg1 = (ADLXHelper *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (ADLXHelper *)jarg1; 
  result = (ADLX_RESULT)(arg1)->Initialize();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLXHelper_InitializeWithIncompatibleDriver___(void * jarg1) {
  int jresult ;
  ADLXHelper *arg1 = (ADLXHelper *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (ADLXHelper *)jarg1; 
  result = (ADLX_RESULT)(arg1)->InitializeWithIncompatibleDriver();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLXHelper_Terminate___(void * jarg1) {
  int jresult ;
  ADLXHelper *arg1 = (ADLXHelper *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (ADLXHelper *)jarg1; 
  result = (ADLX_RESULT)(arg1)->Terminate();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLXHelper_QueryFullVersion___(void * jarg1) {
  unsigned long long jresult ;
  ADLXHelper *arg1 = (ADLXHelper *) 0 ;
  adlx_uint64 result;
  
  arg1 = (ADLXHelper *)jarg1; 
  result = (adlx_uint64)(arg1)->QueryFullVersion();
  jresult = result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLXHelper_QueryVersion___(void * jarg1) {
  char * jresult ;
  ADLXHelper *arg1 = (ADLXHelper *) 0 ;
  char *result = 0 ;
  
  arg1 = (ADLXHelper *)jarg1; 
  result = (char *)(arg1)->QueryVersion();
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLXHelper_GetSystemServices___(void * jarg1) {
  void * jresult ;
  ADLXHelper *arg1 = (ADLXHelper *) 0 ;
  adlx::IADLXSystem *result = 0 ;
  
  arg1 = (ADLXHelper *)jarg1; 
  result = (adlx::IADLXSystem *)(arg1)->GetSystemServices();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLXHelper_GetAdlMapping___(void * jarg1) {
  void * jresult ;
  ADLXHelper *arg1 = (ADLXHelper *) 0 ;
  adlx::IADLMapping *result = 0 ;
  
  arg1 = (ADLXHelper *)jarg1; 
  result = (adlx::IADLMapping *)(arg1)->GetAdlMapping();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_g_ADLX_set___(void * jarg1) {
  ::ADLXHelper *arg1 = (::ADLXHelper *) 0 ;
  
  arg1 = (::ADLXHelper *)jarg1; 
  g_ADLX = *arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_g_ADLX_get___() {
  void * jresult ;
  ::ADLXHelper *result = 0 ;
  
  result = (::ADLXHelper *)&g_ADLX;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_ADLXExt___() {
  void * jresult ;
  ADLXExt *result = 0 ;
  
  result = (ADLXExt *)new ADLXExt();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_ADLXExt___(void * jarg1) {
  ADLXExt *arg1 = (ADLXExt *) 0 ;
  
  arg1 = (ADLXExt *)jarg1; 
  delete arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLXExt_SetSpeed___(void * jarg1, void * jarg2, int jarg3, void * jarg4) {
  int jresult ;
  ADLXExt *arg1 = (ADLXExt *) 0 ;
  adlx::IADLXManualFanTuning *arg2 = (adlx::IADLXManualFanTuning *) 0 ;
  int arg3 ;
  adlx::IADLXManualFanTuningStateList *arg4 = (adlx::IADLXManualFanTuningStateList *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (ADLXExt *)jarg1; 
  arg2 = (adlx::IADLXManualFanTuning *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (adlx::IADLXManualFanTuningStateList *)jarg4; 
  result = (ADLX_RESULT)(arg1)->SetSpeed(arg2,arg3,arg4);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_ADLXExt_GetCurrentMetrics___(void * jarg1, void * jarg2, void * jarg3,  GPUMetricsStruct*  jarg4) {
  int jresult ;
  ADLXExt *arg1 = (ADLXExt *) 0 ;
  adlx::IADLXPerformanceMonitoringServices *arg2 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  adlx::IADLXGPU *arg3 = (adlx::IADLXGPU *) 0 ;
  GPUMetricsStruct *arg4 = (GPUMetricsStruct *) 0 ;
  ADLX_RESULT result;
  
  arg1 = (ADLXExt *)jarg1; 
  arg2 = (adlx::IADLXPerformanceMonitoringServices *)jarg2; 
  arg3 = (adlx::IADLXGPU *)jarg3; 
  arg4 = jarg4; 
  result = (ADLX_RESULT)(arg1)->GetCurrentMetrics(arg2,arg3,arg4);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_intP___() {
  void * jresult ;
  adlx_int *result = 0 ;
  
  result = (adlx_int *)new_intP();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_intP___(int jarg1) {
  void * jresult ;
  adlx_int arg1 ;
  adlx_int *result = 0 ;
  
  arg1 = (adlx_int)jarg1; 
  result = (adlx_int *)copy_intP(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_intP___(void * jarg1) {
  adlx_int *arg1 = (adlx_int *) 0 ;
  
  arg1 = (adlx_int *)jarg1; 
  delete_intP(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_intP_assign___(void * jarg1, int jarg2) {
  adlx_int *arg1 = (adlx_int *) 0 ;
  adlx_int arg2 ;
  
  arg1 = (adlx_int *)jarg1; 
  arg2 = (adlx_int)jarg2; 
  intP_assign(arg1,arg2);
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_intP_value___(void * jarg1) {
  int jresult ;
  adlx_int *arg1 = (adlx_int *) 0 ;
  adlx_int result;
  
  arg1 = (adlx_int *)jarg1; 
  result = (adlx_int)intP_value(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_doubleP___() {
  void * jresult ;
  double *result = 0 ;
  
  result = (double *)new_doubleP();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_doubleP___(double jarg1) {
  void * jresult ;
  double arg1 ;
  double *result = 0 ;
  
  arg1 = (double)jarg1; 
  result = (double *)copy_doubleP(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_doubleP___(void * jarg1) {
  double *arg1 = (double *) 0 ;
  
  arg1 = (double *)jarg1; 
  delete_doubleP(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_doubleP_assign___(void * jarg1, double jarg2) {
  double *arg1 = (double *) 0 ;
  double arg2 ;
  
  arg1 = (double *)jarg1; 
  arg2 = (double)jarg2; 
  doubleP_assign(arg1,arg2);
}


SWIGEXPORT double SWIGSTDCALL CSharp_ADLXWrapperfBindings_doubleP_value___(void * jarg1) {
  double jresult ;
  double *arg1 = (double *) 0 ;
  double result;
  
  arg1 = (double *)jarg1; 
  result = (double)doubleP_value(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_boolP___() {
  void * jresult ;
  bool *result = 0 ;
  
  result = (bool *)new_boolP();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_boolP___(unsigned int jarg1) {
  void * jresult ;
  bool arg1 ;
  bool *result = 0 ;
  
  arg1 = jarg1 ? true : false; 
  result = (bool *)copy_boolP(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_boolP___(void * jarg1) {
  bool *arg1 = (bool *) 0 ;
  
  arg1 = (bool *)jarg1; 
  delete_boolP(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_boolP_assign___(void * jarg1, unsigned int jarg2) {
  bool *arg1 = (bool *) 0 ;
  bool arg2 ;
  
  arg1 = (bool *)jarg1; 
  arg2 = jarg2 ? true : false; 
  boolP_assign(arg1,arg2);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_boolP_value___(void * jarg1) {
  unsigned int jresult ;
  bool *arg1 = (bool *) 0 ;
  bool result;
  
  arg1 = (bool *)jarg1; 
  result = (bool)boolP_value(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_wcharP___() {
  void * jresult ;
  WCHAR *result = 0 ;
  
  result = (WCHAR *)new_wcharP();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_wcharP___(void * jarg1) {
  void * jresult ;
  WCHAR arg1 ;
  WCHAR *argp1 ;
  WCHAR *result = 0 ;
  
  argp1 = (WCHAR *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null WCHAR", 0);
    return 0;
  }
  arg1 = *argp1; 
  result = (WCHAR *)copy_wcharP(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_wcharP___(void * jarg1) {
  WCHAR *arg1 = (WCHAR *) 0 ;
  
  arg1 = (WCHAR *)jarg1; 
  delete_wcharP(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_wcharP_assign___(void * jarg1, void * jarg2) {
  WCHAR *arg1 = (WCHAR *) 0 ;
  WCHAR arg2 ;
  WCHAR *argp2 ;
  
  arg1 = (WCHAR *)jarg1; 
  argp2 = (WCHAR *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null WCHAR", 0);
    return ;
  }
  arg2 = *argp2; 
  wcharP_assign(arg1,arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_wcharP_value___(void * jarg1) {
  void * jresult ;
  WCHAR *arg1 = (WCHAR *) 0 ;
  WCHAR result;
  
  arg1 = (WCHAR *)jarg1; 
  result = (WCHAR)wcharP_value(arg1);
  jresult = new WCHAR(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_uintP___() {
  void * jresult ;
  adlx_uint *result = 0 ;
  
  result = (adlx_uint *)new_uintP();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_uintP___(unsigned int jarg1) {
  void * jresult ;
  adlx_uint arg1 ;
  adlx_uint *result = 0 ;
  
  arg1 = (adlx_uint)jarg1; 
  result = (adlx_uint *)copy_uintP(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_uintP___(void * jarg1) {
  adlx_uint *arg1 = (adlx_uint *) 0 ;
  
  arg1 = (adlx_uint *)jarg1; 
  delete_uintP(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_uintP_assign___(void * jarg1, unsigned int jarg2) {
  adlx_uint *arg1 = (adlx_uint *) 0 ;
  adlx_uint arg2 ;
  
  arg1 = (adlx_uint *)jarg1; 
  arg2 = (adlx_uint)jarg2; 
  uintP_assign(arg1,arg2);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_uintP_value___(void * jarg1) {
  unsigned int jresult ;
  adlx_uint *arg1 = (adlx_uint *) 0 ;
  adlx_uint result;
  
  arg1 = (adlx_uint *)jarg1; 
  result = (adlx_uint)uintP_value(arg1);
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_displayTypeP___() {
  void * jresult ;
  ADLX_DISPLAY_TYPE *result = 0 ;
  
  result = (ADLX_DISPLAY_TYPE *)new_displayTypeP();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_displayTypeP___(int jarg1) {
  void * jresult ;
  ADLX_DISPLAY_TYPE arg1 ;
  ADLX_DISPLAY_TYPE *result = 0 ;
  
  arg1 = (ADLX_DISPLAY_TYPE)jarg1; 
  result = (ADLX_DISPLAY_TYPE *)copy_displayTypeP(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_displayTypeP___(void * jarg1) {
  ADLX_DISPLAY_TYPE *arg1 = (ADLX_DISPLAY_TYPE *) 0 ;
  
  arg1 = (ADLX_DISPLAY_TYPE *)jarg1; 
  delete_displayTypeP(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_displayTypeP_assign___(void * jarg1, int jarg2) {
  ADLX_DISPLAY_TYPE *arg1 = (ADLX_DISPLAY_TYPE *) 0 ;
  ADLX_DISPLAY_TYPE arg2 ;
  
  arg1 = (ADLX_DISPLAY_TYPE *)jarg1; 
  arg2 = (ADLX_DISPLAY_TYPE)jarg2; 
  displayTypeP_assign(arg1,arg2);
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_displayTypeP_value___(void * jarg1) {
  int jresult ;
  ADLX_DISPLAY_TYPE *arg1 = (ADLX_DISPLAY_TYPE *) 0 ;
  ADLX_DISPLAY_TYPE result;
  
  arg1 = (ADLX_DISPLAY_TYPE *)jarg1; 
  result = (ADLX_DISPLAY_TYPE)displayTypeP_value(arg1);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_disConnectTypeP___() {
  void * jresult ;
  ADLX_DISPLAY_CONNECTOR_TYPE *result = 0 ;
  
  result = (ADLX_DISPLAY_CONNECTOR_TYPE *)new_disConnectTypeP();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_disConnectTypeP___(int jarg1) {
  void * jresult ;
  ADLX_DISPLAY_CONNECTOR_TYPE arg1 ;
  ADLX_DISPLAY_CONNECTOR_TYPE *result = 0 ;
  
  arg1 = (ADLX_DISPLAY_CONNECTOR_TYPE)jarg1; 
  result = (ADLX_DISPLAY_CONNECTOR_TYPE *)copy_disConnectTypeP(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_disConnectTypeP___(void * jarg1) {
  ADLX_DISPLAY_CONNECTOR_TYPE *arg1 = (ADLX_DISPLAY_CONNECTOR_TYPE *) 0 ;
  
  arg1 = (ADLX_DISPLAY_CONNECTOR_TYPE *)jarg1; 
  delete_disConnectTypeP(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_disConnectTypeP_assign___(void * jarg1, int jarg2) {
  ADLX_DISPLAY_CONNECTOR_TYPE *arg1 = (ADLX_DISPLAY_CONNECTOR_TYPE *) 0 ;
  ADLX_DISPLAY_CONNECTOR_TYPE arg2 ;
  
  arg1 = (ADLX_DISPLAY_CONNECTOR_TYPE *)jarg1; 
  arg2 = (ADLX_DISPLAY_CONNECTOR_TYPE)jarg2; 
  disConnectTypeP_assign(arg1,arg2);
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_disConnectTypeP_value___(void * jarg1) {
  int jresult ;
  ADLX_DISPLAY_CONNECTOR_TYPE *arg1 = (ADLX_DISPLAY_CONNECTOR_TYPE *) 0 ;
  ADLX_DISPLAY_CONNECTOR_TYPE result;
  
  arg1 = (ADLX_DISPLAY_CONNECTOR_TYPE *)jarg1; 
  result = (ADLX_DISPLAY_CONNECTOR_TYPE)disConnectTypeP_value(arg1);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_disScanTypeP___() {
  void * jresult ;
  ADLX_DISPLAY_SCAN_TYPE *result = 0 ;
  
  result = (ADLX_DISPLAY_SCAN_TYPE *)new_disScanTypeP();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_disScanTypeP___(int jarg1) {
  void * jresult ;
  ADLX_DISPLAY_SCAN_TYPE arg1 ;
  ADLX_DISPLAY_SCAN_TYPE *result = 0 ;
  
  arg1 = (ADLX_DISPLAY_SCAN_TYPE)jarg1; 
  result = (ADLX_DISPLAY_SCAN_TYPE *)copy_disScanTypeP(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_disScanTypeP___(void * jarg1) {
  ADLX_DISPLAY_SCAN_TYPE *arg1 = (ADLX_DISPLAY_SCAN_TYPE *) 0 ;
  
  arg1 = (ADLX_DISPLAY_SCAN_TYPE *)jarg1; 
  delete_disScanTypeP(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_disScanTypeP_assign___(void * jarg1, int jarg2) {
  ADLX_DISPLAY_SCAN_TYPE *arg1 = (ADLX_DISPLAY_SCAN_TYPE *) 0 ;
  ADLX_DISPLAY_SCAN_TYPE arg2 ;
  
  arg1 = (ADLX_DISPLAY_SCAN_TYPE *)jarg1; 
  arg2 = (ADLX_DISPLAY_SCAN_TYPE)jarg2; 
  disScanTypeP_assign(arg1,arg2);
}


SWIGEXPORT int SWIGSTDCALL CSharp_ADLXWrapperfBindings_disScanTypeP_value___(void * jarg1) {
  int jresult ;
  ADLX_DISPLAY_SCAN_TYPE *arg1 = (ADLX_DISPLAY_SCAN_TYPE *) 0 ;
  ADLX_DISPLAY_SCAN_TYPE result;
  
  arg1 = (ADLX_DISPLAY_SCAN_TYPE *)jarg1; 
  result = (ADLX_DISPLAY_SCAN_TYPE)disScanTypeP_value(arg1);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_adlx_sizeP___() {
  void * jresult ;
  adlx_size *result = 0 ;
  
  result = (adlx_size *)new_adlx_sizeP();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_adlx_sizeP___(unsigned int jarg1) {
  void * jresult ;
  adlx_size arg1 ;
  adlx_size *result = 0 ;
  
  arg1 = (adlx_size)jarg1; 
  result = (adlx_size *)copy_adlx_sizeP(SWIG_STD_MOVE(arg1));
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_adlx_sizeP___(void * jarg1) {
  adlx_size *arg1 = (adlx_size *) 0 ;
  
  arg1 = (adlx_size *)jarg1; 
  delete_adlx_sizeP(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_adlx_sizeP_assign___(void * jarg1, unsigned int jarg2) {
  adlx_size *arg1 = (adlx_size *) 0 ;
  adlx_size arg2 ;
  
  arg1 = (adlx_size *)jarg1; 
  arg2 = (adlx_size)jarg2; 
  adlx_sizeP_assign(arg1,SWIG_STD_MOVE(arg2));
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_ADLXWrapperfBindings_adlx_sizeP_value___(void * jarg1) {
  unsigned int jresult ;
  adlx_size *arg1 = (adlx_size *) 0 ;
  adlx_size result;
  
  arg1 = (adlx_size *)jarg1; 
  result = adlx_sizeP_value(arg1);
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_adlx_intRangeP___() {
  void * jresult ;
  ADLX_IntRange *result = 0 ;
  
  result = (ADLX_IntRange *)new_adlx_intRangeP();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_adlx_intRangeP___(void * jarg1) {
  void * jresult ;
  ADLX_IntRange arg1 ;
  ADLX_IntRange *argp1 ;
  ADLX_IntRange *result = 0 ;
  
  argp1 = (ADLX_IntRange *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null ADLX_IntRange", 0);
    return 0;
  }
  arg1 = *argp1; 
  result = (ADLX_IntRange *)copy_adlx_intRangeP(SWIG_STD_MOVE(arg1));
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_adlx_intRangeP___(void * jarg1) {
  ADLX_IntRange *arg1 = (ADLX_IntRange *) 0 ;
  
  arg1 = (ADLX_IntRange *)jarg1; 
  delete_adlx_intRangeP(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_adlx_intRangeP_assign___(void * jarg1, void * jarg2) {
  ADLX_IntRange *arg1 = (ADLX_IntRange *) 0 ;
  ADLX_IntRange arg2 ;
  ADLX_IntRange *argp2 ;
  
  arg1 = (ADLX_IntRange *)jarg1; 
  argp2 = (ADLX_IntRange *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null ADLX_IntRange", 0);
    return ;
  }
  arg2 = *argp2; 
  adlx_intRangeP_assign(arg1,SWIG_STD_MOVE(arg2));
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_adlx_intRangeP_value___(void * jarg1) {
  void * jresult ;
  ADLX_IntRange *arg1 = (ADLX_IntRange *) 0 ;
  ADLX_IntRange result;
  
  arg1 = (ADLX_IntRange *)jarg1; 
  result = adlx_intRangeP_value(arg1);
  jresult = new ADLX_IntRange(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_displaySerP_Ptr___() {
  void * jresult ;
  adlx::IADLXDisplayServices **result = 0 ;
  
  result = (adlx::IADLXDisplayServices **)new_displaySerP_Ptr();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_displaySerP_Ptr___(void * jarg1) {
  void * jresult ;
  adlx::IADLXDisplayServices *arg1 = (adlx::IADLXDisplayServices *) 0 ;
  adlx::IADLXDisplayServices **result = 0 ;
  
  arg1 = (adlx::IADLXDisplayServices *)jarg1; 
  result = (adlx::IADLXDisplayServices **)copy_displaySerP_Ptr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_displaySerP_Ptr___(void * jarg1) {
  adlx::IADLXDisplayServices **arg1 = (adlx::IADLXDisplayServices **) 0 ;
  
  arg1 = (adlx::IADLXDisplayServices **)jarg1; 
  delete_displaySerP_Ptr(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_displaySerP_Ptr_assign___(void * jarg1, void * jarg2) {
  adlx::IADLXDisplayServices **arg1 = (adlx::IADLXDisplayServices **) 0 ;
  adlx::IADLXDisplayServices *arg2 = (adlx::IADLXDisplayServices *) 0 ;
  
  arg1 = (adlx::IADLXDisplayServices **)jarg1; 
  arg2 = (adlx::IADLXDisplayServices *)jarg2; 
  displaySerP_Ptr_assign(arg1,arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_displaySerP_Ptr_value___(void * jarg1) {
  void * jresult ;
  adlx::IADLXDisplayServices **arg1 = (adlx::IADLXDisplayServices **) 0 ;
  adlx::IADLXDisplayServices *result = 0 ;
  
  arg1 = (adlx::IADLXDisplayServices **)jarg1; 
  result = (adlx::IADLXDisplayServices *)displaySerP_Ptr_value(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_displayListP_Ptr___() {
  void * jresult ;
  adlx::IADLXDisplayList **result = 0 ;
  
  result = (adlx::IADLXDisplayList **)new_displayListP_Ptr();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_displayListP_Ptr___(void * jarg1) {
  void * jresult ;
  adlx::IADLXDisplayList *arg1 = (adlx::IADLXDisplayList *) 0 ;
  adlx::IADLXDisplayList **result = 0 ;
  
  arg1 = (adlx::IADLXDisplayList *)jarg1; 
  result = (adlx::IADLXDisplayList **)copy_displayListP_Ptr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_displayListP_Ptr___(void * jarg1) {
  adlx::IADLXDisplayList **arg1 = (adlx::IADLXDisplayList **) 0 ;
  
  arg1 = (adlx::IADLXDisplayList **)jarg1; 
  delete_displayListP_Ptr(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_displayListP_Ptr_assign___(void * jarg1, void * jarg2) {
  adlx::IADLXDisplayList **arg1 = (adlx::IADLXDisplayList **) 0 ;
  adlx::IADLXDisplayList *arg2 = (adlx::IADLXDisplayList *) 0 ;
  
  arg1 = (adlx::IADLXDisplayList **)jarg1; 
  arg2 = (adlx::IADLXDisplayList *)jarg2; 
  displayListP_Ptr_assign(arg1,arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_displayListP_Ptr_value___(void * jarg1) {
  void * jresult ;
  adlx::IADLXDisplayList **arg1 = (adlx::IADLXDisplayList **) 0 ;
  adlx::IADLXDisplayList *result = 0 ;
  
  arg1 = (adlx::IADLXDisplayList **)jarg1; 
  result = (adlx::IADLXDisplayList *)displayListP_Ptr_value(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_displayP_Ptr___() {
  void * jresult ;
  adlx::IADLXDisplay **result = 0 ;
  
  result = (adlx::IADLXDisplay **)new_displayP_Ptr();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_displayP_Ptr___(void * jarg1) {
  void * jresult ;
  adlx::IADLXDisplay *arg1 = (adlx::IADLXDisplay *) 0 ;
  adlx::IADLXDisplay **result = 0 ;
  
  arg1 = (adlx::IADLXDisplay *)jarg1; 
  result = (adlx::IADLXDisplay **)copy_displayP_Ptr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_displayP_Ptr___(void * jarg1) {
  adlx::IADLXDisplay **arg1 = (adlx::IADLXDisplay **) 0 ;
  
  arg1 = (adlx::IADLXDisplay **)jarg1; 
  delete_displayP_Ptr(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_displayP_Ptr_assign___(void * jarg1, void * jarg2) {
  adlx::IADLXDisplay **arg1 = (adlx::IADLXDisplay **) 0 ;
  adlx::IADLXDisplay *arg2 = (adlx::IADLXDisplay *) 0 ;
  
  arg1 = (adlx::IADLXDisplay **)jarg1; 
  arg2 = (adlx::IADLXDisplay *)jarg2; 
  displayP_Ptr_assign(arg1,arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_displayP_Ptr_value___(void * jarg1) {
  void * jresult ;
  adlx::IADLXDisplay **arg1 = (adlx::IADLXDisplay **) 0 ;
  adlx::IADLXDisplay *result = 0 ;
  
  arg1 = (adlx::IADLXDisplay **)jarg1; 
  result = (adlx::IADLXDisplay *)displayP_Ptr_value(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_displayChangeHandlP_Ptr___() {
  void * jresult ;
  adlx::IADLXDisplayChangedHandling **result = 0 ;
  
  result = (adlx::IADLXDisplayChangedHandling **)new_displayChangeHandlP_Ptr();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_displayChangeHandlP_Ptr___(void * jarg1) {
  void * jresult ;
  adlx::IADLXDisplayChangedHandling *arg1 = (adlx::IADLXDisplayChangedHandling *) 0 ;
  adlx::IADLXDisplayChangedHandling **result = 0 ;
  
  arg1 = (adlx::IADLXDisplayChangedHandling *)jarg1; 
  result = (adlx::IADLXDisplayChangedHandling **)copy_displayChangeHandlP_Ptr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_displayChangeHandlP_Ptr___(void * jarg1) {
  adlx::IADLXDisplayChangedHandling **arg1 = (adlx::IADLXDisplayChangedHandling **) 0 ;
  
  arg1 = (adlx::IADLXDisplayChangedHandling **)jarg1; 
  delete_displayChangeHandlP_Ptr(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_displayChangeHandlP_Ptr_assign___(void * jarg1, void * jarg2) {
  adlx::IADLXDisplayChangedHandling **arg1 = (adlx::IADLXDisplayChangedHandling **) 0 ;
  adlx::IADLXDisplayChangedHandling *arg2 = (adlx::IADLXDisplayChangedHandling *) 0 ;
  
  arg1 = (adlx::IADLXDisplayChangedHandling **)jarg1; 
  arg2 = (adlx::IADLXDisplayChangedHandling *)jarg2; 
  displayChangeHandlP_Ptr_assign(arg1,arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_displayChangeHandlP_Ptr_value___(void * jarg1) {
  void * jresult ;
  adlx::IADLXDisplayChangedHandling **arg1 = (adlx::IADLXDisplayChangedHandling **) 0 ;
  adlx::IADLXDisplayChangedHandling *result = 0 ;
  
  arg1 = (adlx::IADLXDisplayChangedHandling **)jarg1; 
  result = (adlx::IADLXDisplayChangedHandling *)displayChangeHandlP_Ptr_value(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_gpuP_Ptr___() {
  void * jresult ;
  adlx::IADLXGPU **result = 0 ;
  
  result = (adlx::IADLXGPU **)new_gpuP_Ptr();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_gpuP_Ptr___(void * jarg1) {
  void * jresult ;
  adlx::IADLXGPU *arg1 = (adlx::IADLXGPU *) 0 ;
  adlx::IADLXGPU **result = 0 ;
  
  arg1 = (adlx::IADLXGPU *)jarg1; 
  result = (adlx::IADLXGPU **)copy_gpuP_Ptr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_gpuP_Ptr___(void * jarg1) {
  adlx::IADLXGPU **arg1 = (adlx::IADLXGPU **) 0 ;
  
  arg1 = (adlx::IADLXGPU **)jarg1; 
  delete_gpuP_Ptr(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_gpuP_Ptr_assign___(void * jarg1, void * jarg2) {
  adlx::IADLXGPU **arg1 = (adlx::IADLXGPU **) 0 ;
  adlx::IADLXGPU *arg2 = (adlx::IADLXGPU *) 0 ;
  
  arg1 = (adlx::IADLXGPU **)jarg1; 
  arg2 = (adlx::IADLXGPU *)jarg2; 
  gpuP_Ptr_assign(arg1,arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_gpuP_Ptr_value___(void * jarg1) {
  void * jresult ;
  adlx::IADLXGPU **arg1 = (adlx::IADLXGPU **) 0 ;
  adlx::IADLXGPU *result = 0 ;
  
  arg1 = (adlx::IADLXGPU **)jarg1; 
  result = (adlx::IADLXGPU *)gpuP_Ptr_value(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_gpuListP_Ptr___() {
  void * jresult ;
  adlx::IADLXGPUList **result = 0 ;
  
  result = (adlx::IADLXGPUList **)new_gpuListP_Ptr();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_gpuListP_Ptr___(void * jarg1) {
  void * jresult ;
  adlx::IADLXGPUList *arg1 = (adlx::IADLXGPUList *) 0 ;
  adlx::IADLXGPUList **result = 0 ;
  
  arg1 = (adlx::IADLXGPUList *)jarg1; 
  result = (adlx::IADLXGPUList **)copy_gpuListP_Ptr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_gpuListP_Ptr___(void * jarg1) {
  adlx::IADLXGPUList **arg1 = (adlx::IADLXGPUList **) 0 ;
  
  arg1 = (adlx::IADLXGPUList **)jarg1; 
  delete_gpuListP_Ptr(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_gpuListP_Ptr_assign___(void * jarg1, void * jarg2) {
  adlx::IADLXGPUList **arg1 = (adlx::IADLXGPUList **) 0 ;
  adlx::IADLXGPUList *arg2 = (adlx::IADLXGPUList *) 0 ;
  
  arg1 = (adlx::IADLXGPUList **)jarg1; 
  arg2 = (adlx::IADLXGPUList *)jarg2; 
  gpuListP_Ptr_assign(arg1,arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_gpuListP_Ptr_value___(void * jarg1) {
  void * jresult ;
  adlx::IADLXGPUList **arg1 = (adlx::IADLXGPUList **) 0 ;
  adlx::IADLXGPUList *result = 0 ;
  
  arg1 = (adlx::IADLXGPUList **)jarg1; 
  result = (adlx::IADLXGPUList *)gpuListP_Ptr_value(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_adlxListP_Ptr___() {
  void * jresult ;
  adlx::IADLXList **result = 0 ;
  
  result = (adlx::IADLXList **)new_adlxListP_Ptr();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_adlxListP_Ptr___(void * jarg1) {
  void * jresult ;
  adlx::IADLXList *arg1 = (adlx::IADLXList *) 0 ;
  adlx::IADLXList **result = 0 ;
  
  arg1 = (adlx::IADLXList *)jarg1; 
  result = (adlx::IADLXList **)copy_adlxListP_Ptr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_adlxListP_Ptr___(void * jarg1) {
  adlx::IADLXList **arg1 = (adlx::IADLXList **) 0 ;
  
  arg1 = (adlx::IADLXList **)jarg1; 
  delete_adlxListP_Ptr(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_adlxListP_Ptr_assign___(void * jarg1, void * jarg2) {
  adlx::IADLXList **arg1 = (adlx::IADLXList **) 0 ;
  adlx::IADLXList *arg2 = (adlx::IADLXList *) 0 ;
  
  arg1 = (adlx::IADLXList **)jarg1; 
  arg2 = (adlx::IADLXList *)jarg2; 
  adlxListP_Ptr_assign(arg1,arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_adlxListP_Ptr_value___(void * jarg1) {
  void * jresult ;
  adlx::IADLXList **arg1 = (adlx::IADLXList **) 0 ;
  adlx::IADLXList *result = 0 ;
  
  arg1 = (adlx::IADLXList **)jarg1; 
  result = (adlx::IADLXList *)adlxListP_Ptr_value(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_adlxInterfaceP_Ptr___() {
  void * jresult ;
  adlx::IADLXInterface **result = 0 ;
  
  result = (adlx::IADLXInterface **)new_adlxInterfaceP_Ptr();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_adlxInterfaceP_Ptr___(void * jarg1) {
  void * jresult ;
  adlx::IADLXInterface *arg1 = (adlx::IADLXInterface *) 0 ;
  adlx::IADLXInterface **result = 0 ;
  
  arg1 = (adlx::IADLXInterface *)jarg1; 
  result = (adlx::IADLXInterface **)copy_adlxInterfaceP_Ptr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_adlxInterfaceP_Ptr___(void * jarg1) {
  adlx::IADLXInterface **arg1 = (adlx::IADLXInterface **) 0 ;
  
  arg1 = (adlx::IADLXInterface **)jarg1; 
  delete_adlxInterfaceP_Ptr(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_adlxInterfaceP_Ptr_assign___(void * jarg1, void * jarg2) {
  adlx::IADLXInterface **arg1 = (adlx::IADLXInterface **) 0 ;
  adlx::IADLXInterface *arg2 = (adlx::IADLXInterface *) 0 ;
  
  arg1 = (adlx::IADLXInterface **)jarg1; 
  arg2 = (adlx::IADLXInterface *)jarg2; 
  adlxInterfaceP_Ptr_assign(arg1,arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_adlxInterfaceP_Ptr_value___(void * jarg1) {
  void * jresult ;
  adlx::IADLXInterface **arg1 = (adlx::IADLXInterface **) 0 ;
  adlx::IADLXInterface *result = 0 ;
  
  arg1 = (adlx::IADLXInterface **)jarg1; 
  result = (adlx::IADLXInterface *)adlxInterfaceP_Ptr_value(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_gpuTuningP_Ptr___() {
  void * jresult ;
  adlx::IADLXGPUTuningServices **result = 0 ;
  
  result = (adlx::IADLXGPUTuningServices **)new_gpuTuningP_Ptr();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_gpuTuningP_Ptr___(void * jarg1) {
  void * jresult ;
  adlx::IADLXGPUTuningServices *arg1 = (adlx::IADLXGPUTuningServices *) 0 ;
  adlx::IADLXGPUTuningServices **result = 0 ;
  
  arg1 = (adlx::IADLXGPUTuningServices *)jarg1; 
  result = (adlx::IADLXGPUTuningServices **)copy_gpuTuningP_Ptr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_gpuTuningP_Ptr___(void * jarg1) {
  adlx::IADLXGPUTuningServices **arg1 = (adlx::IADLXGPUTuningServices **) 0 ;
  
  arg1 = (adlx::IADLXGPUTuningServices **)jarg1; 
  delete_gpuTuningP_Ptr(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_gpuTuningP_Ptr_assign___(void * jarg1, void * jarg2) {
  adlx::IADLXGPUTuningServices **arg1 = (adlx::IADLXGPUTuningServices **) 0 ;
  adlx::IADLXGPUTuningServices *arg2 = (adlx::IADLXGPUTuningServices *) 0 ;
  
  arg1 = (adlx::IADLXGPUTuningServices **)jarg1; 
  arg2 = (adlx::IADLXGPUTuningServices *)jarg2; 
  gpuTuningP_Ptr_assign(arg1,arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_gpuTuningP_Ptr_value___(void * jarg1) {
  void * jresult ;
  adlx::IADLXGPUTuningServices **arg1 = (adlx::IADLXGPUTuningServices **) 0 ;
  adlx::IADLXGPUTuningServices *result = 0 ;
  
  arg1 = (adlx::IADLXGPUTuningServices **)jarg1; 
  result = (adlx::IADLXGPUTuningServices *)gpuTuningP_Ptr_value(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_manualFanTuningP_Ptr___() {
  void * jresult ;
  adlx::IADLXManualFanTuning **result = 0 ;
  
  result = (adlx::IADLXManualFanTuning **)new_manualFanTuningP_Ptr();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_manualFanTuningP_Ptr___(void * jarg1) {
  void * jresult ;
  adlx::IADLXManualFanTuning *arg1 = (adlx::IADLXManualFanTuning *) 0 ;
  adlx::IADLXManualFanTuning **result = 0 ;
  
  arg1 = (adlx::IADLXManualFanTuning *)jarg1; 
  result = (adlx::IADLXManualFanTuning **)copy_manualFanTuningP_Ptr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_manualFanTuningP_Ptr___(void * jarg1) {
  adlx::IADLXManualFanTuning **arg1 = (adlx::IADLXManualFanTuning **) 0 ;
  
  arg1 = (adlx::IADLXManualFanTuning **)jarg1; 
  delete_manualFanTuningP_Ptr(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_manualFanTuningP_Ptr_assign___(void * jarg1, void * jarg2) {
  adlx::IADLXManualFanTuning **arg1 = (adlx::IADLXManualFanTuning **) 0 ;
  adlx::IADLXManualFanTuning *arg2 = (adlx::IADLXManualFanTuning *) 0 ;
  
  arg1 = (adlx::IADLXManualFanTuning **)jarg1; 
  arg2 = (adlx::IADLXManualFanTuning *)jarg2; 
  manualFanTuningP_Ptr_assign(arg1,arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_manualFanTuningP_Ptr_value___(void * jarg1) {
  void * jresult ;
  adlx::IADLXManualFanTuning **arg1 = (adlx::IADLXManualFanTuning **) 0 ;
  adlx::IADLXManualFanTuning *result = 0 ;
  
  arg1 = (adlx::IADLXManualFanTuning **)jarg1; 
  result = (adlx::IADLXManualFanTuning *)manualFanTuningP_Ptr_value(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_manualPowerTuningP_Ptr___() {
  void * jresult ;
  adlx::IADLXManualPowerTuning **result = 0 ;
  
  result = (adlx::IADLXManualPowerTuning **)new_manualPowerTuningP_Ptr();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_manualPowerTuningP_Ptr___(void * jarg1) {
  void * jresult ;
  adlx::IADLXManualPowerTuning *arg1 = (adlx::IADLXManualPowerTuning *) 0 ;
  adlx::IADLXManualPowerTuning **result = 0 ;
  
  arg1 = (adlx::IADLXManualPowerTuning *)jarg1; 
  result = (adlx::IADLXManualPowerTuning **)copy_manualPowerTuningP_Ptr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_manualPowerTuningP_Ptr___(void * jarg1) {
  adlx::IADLXManualPowerTuning **arg1 = (adlx::IADLXManualPowerTuning **) 0 ;
  
  arg1 = (adlx::IADLXManualPowerTuning **)jarg1; 
  delete_manualPowerTuningP_Ptr(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_manualPowerTuningP_Ptr_assign___(void * jarg1, void * jarg2) {
  adlx::IADLXManualPowerTuning **arg1 = (adlx::IADLXManualPowerTuning **) 0 ;
  adlx::IADLXManualPowerTuning *arg2 = (adlx::IADLXManualPowerTuning *) 0 ;
  
  arg1 = (adlx::IADLXManualPowerTuning **)jarg1; 
  arg2 = (adlx::IADLXManualPowerTuning *)jarg2; 
  manualPowerTuningP_Ptr_assign(arg1,arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_manualPowerTuningP_Ptr_value___(void * jarg1) {
  void * jresult ;
  adlx::IADLXManualPowerTuning **arg1 = (adlx::IADLXManualPowerTuning **) 0 ;
  adlx::IADLXManualPowerTuning *result = 0 ;
  
  arg1 = (adlx::IADLXManualPowerTuning **)jarg1; 
  result = (adlx::IADLXManualPowerTuning *)manualPowerTuningP_Ptr_value(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_performanceP_Ptr___() {
  void * jresult ;
  adlx::IADLXPerformanceMonitoringServices **result = 0 ;
  
  result = (adlx::IADLXPerformanceMonitoringServices **)new_performanceP_Ptr();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_performanceP_Ptr___(void * jarg1) {
  void * jresult ;
  adlx::IADLXPerformanceMonitoringServices *arg1 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  adlx::IADLXPerformanceMonitoringServices **result = 0 ;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices *)jarg1; 
  result = (adlx::IADLXPerformanceMonitoringServices **)copy_performanceP_Ptr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_performanceP_Ptr___(void * jarg1) {
  adlx::IADLXPerformanceMonitoringServices **arg1 = (adlx::IADLXPerformanceMonitoringServices **) 0 ;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices **)jarg1; 
  delete_performanceP_Ptr(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_performanceP_Ptr_assign___(void * jarg1, void * jarg2) {
  adlx::IADLXPerformanceMonitoringServices **arg1 = (adlx::IADLXPerformanceMonitoringServices **) 0 ;
  adlx::IADLXPerformanceMonitoringServices *arg2 = (adlx::IADLXPerformanceMonitoringServices *) 0 ;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices **)jarg1; 
  arg2 = (adlx::IADLXPerformanceMonitoringServices *)jarg2; 
  performanceP_Ptr_assign(arg1,arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_performanceP_Ptr_value___(void * jarg1) {
  void * jresult ;
  adlx::IADLXPerformanceMonitoringServices **arg1 = (adlx::IADLXPerformanceMonitoringServices **) 0 ;
  adlx::IADLXPerformanceMonitoringServices *result = 0 ;
  
  arg1 = (adlx::IADLXPerformanceMonitoringServices **)jarg1; 
  result = (adlx::IADLXPerformanceMonitoringServices *)performanceP_Ptr_value(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_fanTuningStateListP_Ptr___() {
  void * jresult ;
  adlx::IADLXManualFanTuningStateList **result = 0 ;
  
  result = (adlx::IADLXManualFanTuningStateList **)new_fanTuningStateListP_Ptr();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_fanTuningStateListP_Ptr___(void * jarg1) {
  void * jresult ;
  adlx::IADLXManualFanTuningStateList *arg1 = (adlx::IADLXManualFanTuningStateList *) 0 ;
  adlx::IADLXManualFanTuningStateList **result = 0 ;
  
  arg1 = (adlx::IADLXManualFanTuningStateList *)jarg1; 
  result = (adlx::IADLXManualFanTuningStateList **)copy_fanTuningStateListP_Ptr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_fanTuningStateListP_Ptr___(void * jarg1) {
  adlx::IADLXManualFanTuningStateList **arg1 = (adlx::IADLXManualFanTuningStateList **) 0 ;
  
  arg1 = (adlx::IADLXManualFanTuningStateList **)jarg1; 
  delete_fanTuningStateListP_Ptr(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_fanTuningStateListP_Ptr_assign___(void * jarg1, void * jarg2) {
  adlx::IADLXManualFanTuningStateList **arg1 = (adlx::IADLXManualFanTuningStateList **) 0 ;
  adlx::IADLXManualFanTuningStateList *arg2 = (adlx::IADLXManualFanTuningStateList *) 0 ;
  
  arg1 = (adlx::IADLXManualFanTuningStateList **)jarg1; 
  arg2 = (adlx::IADLXManualFanTuningStateList *)jarg2; 
  fanTuningStateListP_Ptr_assign(arg1,arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_fanTuningStateListP_Ptr_value___(void * jarg1) {
  void * jresult ;
  adlx::IADLXManualFanTuningStateList **arg1 = (adlx::IADLXManualFanTuningStateList **) 0 ;
  adlx::IADLXManualFanTuningStateList *result = 0 ;
  
  arg1 = (adlx::IADLXManualFanTuningStateList **)jarg1; 
  result = (adlx::IADLXManualFanTuningStateList *)fanTuningStateListP_Ptr_value(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_fanTuningStateP_Ptr___() {
  void * jresult ;
  adlx::IADLXManualFanTuningState **result = 0 ;
  
  result = (adlx::IADLXManualFanTuningState **)new_fanTuningStateP_Ptr();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_fanTuningStateP_Ptr___(void * jarg1) {
  void * jresult ;
  adlx::IADLXManualFanTuningState *arg1 = (adlx::IADLXManualFanTuningState *) 0 ;
  adlx::IADLXManualFanTuningState **result = 0 ;
  
  arg1 = (adlx::IADLXManualFanTuningState *)jarg1; 
  result = (adlx::IADLXManualFanTuningState **)copy_fanTuningStateP_Ptr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_fanTuningStateP_Ptr___(void * jarg1) {
  adlx::IADLXManualFanTuningState **arg1 = (adlx::IADLXManualFanTuningState **) 0 ;
  
  arg1 = (adlx::IADLXManualFanTuningState **)jarg1; 
  delete_fanTuningStateP_Ptr(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_fanTuningStateP_Ptr_assign___(void * jarg1, void * jarg2) {
  adlx::IADLXManualFanTuningState **arg1 = (adlx::IADLXManualFanTuningState **) 0 ;
  adlx::IADLXManualFanTuningState *arg2 = (adlx::IADLXManualFanTuningState *) 0 ;
  
  arg1 = (adlx::IADLXManualFanTuningState **)jarg1; 
  arg2 = (adlx::IADLXManualFanTuningState *)jarg2; 
  fanTuningStateP_Ptr_assign(arg1,arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_fanTuningStateP_Ptr_value___(void * jarg1) {
  void * jresult ;
  adlx::IADLXManualFanTuningState **arg1 = (adlx::IADLXManualFanTuningState **) 0 ;
  adlx::IADLXManualFanTuningState *result = 0 ;
  
  arg1 = (adlx::IADLXManualFanTuningState **)jarg1; 
  result = (adlx::IADLXManualFanTuningState *)fanTuningStateP_Ptr_value(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_metricsP_Ptr___() {
  void * jresult ;
  adlx::IADLXGPUMetrics **result = 0 ;
  
  result = (adlx::IADLXGPUMetrics **)new_metricsP_Ptr();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_metricsP_Ptr___(void * jarg1) {
  void * jresult ;
  adlx::IADLXGPUMetrics *arg1 = (adlx::IADLXGPUMetrics *) 0 ;
  adlx::IADLXGPUMetrics **result = 0 ;
  
  arg1 = (adlx::IADLXGPUMetrics *)jarg1; 
  result = (adlx::IADLXGPUMetrics **)copy_metricsP_Ptr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_metricsP_Ptr___(void * jarg1) {
  adlx::IADLXGPUMetrics **arg1 = (adlx::IADLXGPUMetrics **) 0 ;
  
  arg1 = (adlx::IADLXGPUMetrics **)jarg1; 
  delete_metricsP_Ptr(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_metricsP_Ptr_assign___(void * jarg1, void * jarg2) {
  adlx::IADLXGPUMetrics **arg1 = (adlx::IADLXGPUMetrics **) 0 ;
  adlx::IADLXGPUMetrics *arg2 = (adlx::IADLXGPUMetrics *) 0 ;
  
  arg1 = (adlx::IADLXGPUMetrics **)jarg1; 
  arg2 = (adlx::IADLXGPUMetrics *)jarg2; 
  metricsP_Ptr_assign(arg1,arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_metricsP_Ptr_value___(void * jarg1) {
  void * jresult ;
  adlx::IADLXGPUMetrics **arg1 = (adlx::IADLXGPUMetrics **) 0 ;
  adlx::IADLXGPUMetrics *result = 0 ;
  
  arg1 = (adlx::IADLXGPUMetrics **)jarg1; 
  result = (adlx::IADLXGPUMetrics *)metricsP_Ptr_value(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_stringP_Ptr___() {
  void * jresult ;
  adlx_string *result = 0 ;
  
  result = (adlx_string *)new_stringP_Ptr();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_stringP_Ptr___(char * jarg1) {
  void * jresult ;
  adlx_string arg1 = (adlx_string) 0 ;
  adlx_string *result = 0 ;
  
  arg1 = (adlx_string)jarg1; 
  result = (adlx_string *)copy_stringP_Ptr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_stringP_Ptr___(void * jarg1) {
  adlx_string *arg1 = (adlx_string *) 0 ;
  
  arg1 = (adlx_string *)jarg1; 
  delete_stringP_Ptr(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_stringP_Ptr_assign___(void * jarg1, char * jarg2) {
  adlx_string *arg1 = (adlx_string *) 0 ;
  adlx_string arg2 = (adlx_string) 0 ;
  
  arg1 = (adlx_string *)jarg1; 
  arg2 = (adlx_string)jarg2; 
  stringP_Ptr_assign(arg1,arg2);
}


SWIGEXPORT char * SWIGSTDCALL CSharp_ADLXWrapperfBindings_stringP_Ptr_value___(void * jarg1) {
  char * jresult ;
  adlx_string *arg1 = (adlx_string *) 0 ;
  adlx_string result;
  
  arg1 = (adlx_string *)jarg1; 
  result = (adlx_string)stringP_Ptr_value(arg1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_new_gpuMetricsListP_Ptr___() {
  void * jresult ;
  adlx::IADLXGPUMetricsList **result = 0 ;
  
  result = (adlx::IADLXGPUMetricsList **)new_gpuMetricsListP_Ptr();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_copy_gpuMetricsListP_Ptr___(void * jarg1) {
  void * jresult ;
  adlx::IADLXGPUMetricsList *arg1 = (adlx::IADLXGPUMetricsList *) 0 ;
  adlx::IADLXGPUMetricsList **result = 0 ;
  
  arg1 = (adlx::IADLXGPUMetricsList *)jarg1; 
  result = (adlx::IADLXGPUMetricsList **)copy_gpuMetricsListP_Ptr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_delete_gpuMetricsListP_Ptr___(void * jarg1) {
  adlx::IADLXGPUMetricsList **arg1 = (adlx::IADLXGPUMetricsList **) 0 ;
  
  arg1 = (adlx::IADLXGPUMetricsList **)jarg1; 
  delete_gpuMetricsListP_Ptr(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ADLXWrapperfBindings_gpuMetricsListP_Ptr_assign___(void * jarg1, void * jarg2) {
  adlx::IADLXGPUMetricsList **arg1 = (adlx::IADLXGPUMetricsList **) 0 ;
  adlx::IADLXGPUMetricsList *arg2 = (adlx::IADLXGPUMetricsList *) 0 ;
  
  arg1 = (adlx::IADLXGPUMetricsList **)jarg1; 
  arg2 = (adlx::IADLXGPUMetricsList *)jarg2; 
  gpuMetricsListP_Ptr_assign(arg1,arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_gpuMetricsListP_Ptr_value___(void * jarg1) {
  void * jresult ;
  adlx::IADLXGPUMetricsList **arg1 = (adlx::IADLXGPUMetricsList **) 0 ;
  adlx::IADLXGPUMetricsList *result = 0 ;
  
  arg1 = (adlx::IADLXGPUMetricsList **)jarg1; 
  result = (adlx::IADLXGPUMetricsList *)gpuMetricsListP_Ptr_value(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_CastManualFanTuningVoidPtr___(void * jarg1) {
  void * jresult ;
  adlx::IADLXManualFanTuning **arg1 = (adlx::IADLXManualFanTuning **) 0 ;
  void **result = 0 ;
  
  arg1 = (adlx::IADLXManualFanTuning **)jarg1; 
  result = (void **)CastManualFanTuningVoidPtr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_ADLXWrapperfBindings_CastManualPowerTuningVoidPtr___(void * jarg1) {
  void * jresult ;
  adlx::IADLXManualPowerTuning **arg1 = (adlx::IADLXManualPowerTuning **) 0 ;
  void **result = 0 ;
  
  arg1 = (adlx::IADLXManualPowerTuning **)jarg1; 
  result = (void **)CastManualPowerTuningVoidPtr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXList_SWIGUpcast___(adlx::IADLXList *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplay_SWIGUpcast___(adlx::IADLXDisplay *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXList * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayList_SWIGUpcast___(adlx::IADLXDisplayList *jarg1) {
    return (adlx::IADLXList *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayChangedHandling_SWIGUpcast___(adlx::IADLXDisplayChangedHandling *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXDisplayServices_SWIGUpcast___(adlx::IADLXDisplayServices *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPU_SWIGUpcast___(adlx::IADLXGPU *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXList * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUList_SWIGUpcast___(adlx::IADLXGPUList *jarg1) {
    return (adlx::IADLXList *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUsChangedHandling_SWIGUpcast___(adlx::IADLXGPUsChangedHandling *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualTuningState_SWIGUpcast___(adlx::IADLXManualTuningState *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXMemoryTimingDescription_SWIGUpcast___(adlx::IADLXMemoryTimingDescription *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXList * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualTuningStateList_SWIGUpcast___(adlx::IADLXManualTuningStateList *jarg1) {
    return (adlx::IADLXList *)jarg1;
}

SWIGEXPORT adlx::IADLXList * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXMemoryTimingDescriptionList_SWIGUpcast___(adlx::IADLXMemoryTimingDescriptionList *jarg1) {
    return (adlx::IADLXList *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningChangedHandling_SWIGUpcast___(adlx::IADLXGPUTuningChangedHandling *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUTuningServices_SWIGUpcast___(adlx::IADLXGPUTuningServices *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuningState_SWIGUpcast___(adlx::IADLXManualFanTuningState *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXList * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuningStateList_SWIGUpcast___(adlx::IADLXManualFanTuningStateList *jarg1) {
    return (adlx::IADLXList *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualFanTuning_SWIGUpcast___(adlx::IADLXManualFanTuning *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualGraphicsTuning1_SWIGUpcast___(adlx::IADLXManualGraphicsTuning1 *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualGraphicsTuning2_SWIGUpcast___(adlx::IADLXManualGraphicsTuning2 *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualPowerTuning_SWIGUpcast___(adlx::IADLXManualPowerTuning *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning1_SWIGUpcast___(adlx::IADLXManualVRAMTuning1 *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXManualVRAMTuning2_SWIGUpcast___(adlx::IADLXManualVRAMTuning2 *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUPresetTuning_SWIGUpcast___(adlx::IADLXGPUPresetTuning *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsSupport_SWIGUpcast___(adlx::IADLXGPUMetricsSupport *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetricsSupport_SWIGUpcast___(adlx::IADLXSystemMetricsSupport *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetrics_SWIGUpcast___(adlx::IADLXGPUMetrics *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXList * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXGPUMetricsList_SWIGUpcast___(adlx::IADLXGPUMetricsList *jarg1) {
    return (adlx::IADLXList *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetrics_SWIGUpcast___(adlx::IADLXSystemMetrics *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXList * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXSystemMetricsList_SWIGUpcast___(adlx::IADLXSystemMetricsList *jarg1) {
    return (adlx::IADLXList *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXFPS_SWIGUpcast___(adlx::IADLXFPS *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXList * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXFPSList_SWIGUpcast___(adlx::IADLXFPSList *jarg1) {
    return (adlx::IADLXList *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXAllMetrics_SWIGUpcast___(adlx::IADLXAllMetrics *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

SWIGEXPORT adlx::IADLXList * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXAllMetricsList_SWIGUpcast___(adlx::IADLXAllMetricsList *jarg1) {
    return (adlx::IADLXList *)jarg1;
}

SWIGEXPORT adlx::IADLXInterface * SWIGSTDCALL CSharp_ADLXWrapperfBindings_IADLXPerformanceMonitoringServices_SWIGUpcast___(adlx::IADLXPerformanceMonitoringServices *jarg1) {
    return (adlx::IADLXInterface *)jarg1;
}

#ifdef __cplusplus
}
#endif

